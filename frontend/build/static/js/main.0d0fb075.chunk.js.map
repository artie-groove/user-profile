{"version":3,"sources":["components/SubmitButton/SubmitButton.view.js","components/ErrorDisplay/ErrorDisplay.view.js","components/LoginForm/LoginForm.view.js","components/LoginForm/LoginForm.container.js","components/Auth/Auth.actions.js","components/LoginForm/LoginForm.redux.js","components/SignupForm/ValidateableInput/ValidateableInput.actions.js","components/SignupForm/ValidateableInput/ValidateableInput.view.js","components/SignupForm/ValidateableInput/ValidateableInput.utils.js","utils.js","components/SignupForm/ValidateableInput/ValidateableInput.inputs.js","components/SignupForm/ValidateableInput/ValidateableInput.factory.js","components/SignupForm/ApprovableInput/ApprovableInput.view.js","components/SignupForm/ApprovableInput/ApprovableInput.factory.js","components/SignupForm/Username/Username.container.js","components/SignupForm/Username/Username.validator.js","components/SignupForm/Password/Password.container.js","components/SignupForm/Password/Password.validator.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.container.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.validator.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.redux.js","components/SignupForm/Email/Email.container.js","components/SignupForm/Email/Email.validator.js","components/SignupForm/Phone/Phone.container.js","components/SignupForm/Phone/Phone.validator.js","components/SignupForm/Birthdate/Birthdate.container.js","components/SignupForm/Birthdate/Birthdate.validator.js","components/SignupForm/Newsletters/Newsletters.container.js","components/SignupForm/Biography/Biography.container.js","components/SignupForm/Biography/Biography.validator.js","components/SignupForm/PersonalInformationProcessing/PersonalInformationProcessing.container.js","components/SignupForm/PersonalInformationProcessing/PersonalInformationProcessing.validator.js","components/SignupForm/Photo/Photo.view.js","components/SignupForm/Photo/Photo.container.js","components/SignupForm/Photo/Photo.redux.js","components/SignupForm/Photo/Photo.validator.js","components/SignupForm/Firstname/Firstname.container.js","components/SignupForm/Firstname/Firstname.validator.js","components/SignupForm/Lastname/Lastname.container.js","components/SignupForm/Lastname/Lastname.validator.js","components/SignupForm/SubmitButton/SubmitButton.redux.js","components/SignupForm/Demo/Demo.view.js","components/SignupForm/Demo/Demo.utils.js","components/SignupForm/Demo/Demo.container.js","components/SignupForm/SignupForm.view.js","components/SignupForm/SignupForm.container.js","components/SignupForm/SignupForm.actions.js","components/SignupForm/SignupForm.redux.js","components/FullscreenSpinner/FullscreenSpinner.view.js","components/Dashboard/LogoutButton/LogoutButton.view.js","components/Dashboard/LogoutButton/LogoutButton.redux.js","components/Dashboard/Dashboard.view.js","components/Dashboard/Dashboard.utils.js","components/Dashboard/Dashboard.redux.js","components/Auth/Auth.redux.js","components/Auth/Auth.container.js","components/LocaleSwitcher/LocaleSwitcher.view.js","components/IntlProvider/IntlProvider.actions.js","components/LocaleSwitcher/LocaleSwitcher.redux.js","components/App/App.view.js","components/App/App.container.js","components/App/App.actions.js","components/App/App.redux.js","serviceWorker.js","components/Auth/Auth.logic.js","components/IntlProvider/IntlProvider.logic.js","components/SignupForm/ApprovableInput/ApprovableInput.actions.js","components/SignupForm/ApprovableInput/ApprovableInput.logic.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.logic.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.actions.js","components/SignupForm/SignupForm.utils.js","components/SignupForm/SignupForm.logic.js","components/App/App.logic.js","rootLogic.js","configureLogic.js","components/IntlProvider/IntlProvider.reducers.js","components/Auth/Auth.reducers.js","components/SignupForm/ApprovableInput/ApprovableInput.reducer.js","components/SignupForm/ValidateableInput/ValidateableInput.reducer.js","components/SignupForm/SignupForm.reducers.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.reducer.js","components/App/App.reducers.js","reducers.js","configureStore.js","components/IntlProvider/IntlProvider.redux.js","index.js"],"names":["SubmitButton_SubmitButton_view","_ref","disabled","className","isPending","inProgressCaption","caption","react_default","a","createElement","Button","type","size","color","Fragment","Spinner","View","title","errorMsg","Alert","messages","defineMessages","formTitle","id","defaultMessage","formHint","usernameLabel","passwordLabel","submitButtonCaption","submitButtonInProgressCaption","authErrorTitle","msgNoAccountQuestion","signupLinkCaption","injectIntl","formatMessage","intl","externalError","isAuthenticated","onSubmit","onChange","lib_default","delay","es_Container","Row","Col","Card","body","CardTitle","LoginForm_view_messages","CardText","Form","FormGroup","Label","htmlFor","Input","name","defaultValue","ErrorDisplay_ErrorDisplay_view","FormText","react_router_dom","to","actionTypes","onAuthResponse","token","connect","state","auth","dispatch","event","preventDefault","form","target","credentials","username","elements","value","password","sha256","data","fieldName","validityStatus","onBlur","getActions","label","inputType","isInvalid","isDisabled","isValid","validMsg","children","InputComponent","valid","invalid","FormFeedback","propTypes","PropTypes","string","isRequired","oneOf","bool","error","func","getErrorIntl","status","errorStrings","arguments","length","undefined","isTypingFinished","inProgressFilter","PROPER_VALUE","some","filteredStatus","shouldShowError","getEnhancedValidator","validate","errorCodes","keys","Object","i","getErrorCodes","validationResult","serverConnectionError","sleeper","ms","Promise","resolve","setTimeout","ajaxErrorParser","err","response","concat","details","statusText","request","console","log","message","fetchStoredMessages","localeId","serializedLocale","localStorage","getItem","_JSON$parse","JSON","parse","storedLocaleId","locale","scrollIntoElement","_x","_scrollIntoElement","apply","this","_callee","e","element","rect","viewportHeight","offsetY","deltaY","stepSize","regenerator_default","wrap","_context","prev","next","getBoundingClientRect","document","documentElement","clientHeight","height","Math","floor","top","transitionTime","ceil","step","stepsLeft","window","scrollBy","stop","DefaultInput","onFocus","AlternativeInput","_ref2","CustomInput","checked","ValidateableInput_factory","_ref$validate","_getActions","enhancedValidate","Component","ownProps","_state$signup$data$fi","signup","_ref2$isInvalid","_ref2$isValid","validMsgFormatted","isApproved","oneOfType","instanceOf","ApprovableInput_factory","approvedMsg","rejectedMsg","ValidateableInput","validateableInputFactory","_ref3","statusCodes","E_EMPTY","E_FIRST_LETTER","E_LAST_SYMBOL","E_INVALID_FORMAT","E_TOO_SHORT","E_TOO_LONG","resultStrings","rejected","approved","approvableInputFactory","test","charAt","E_INSUFFICIENT","format","RegExp","E_PASSWORDS_MISMATCH","E_PASSWORD_NOT_VALID","resultMessages","_state$signup$data$pa","E_FIRST_SYMBOL","E_INVALID_CHARS","E_TOO_OLD","E_TOO_EARLY","tsBirthdate","Date","isNaN","tsToday","now","E_IMPOSED","fileName","E_NOT_SELECTED","E_WRONG_EXTENTION","E_TOO_BIG","Container","fieldLabel","Photo_Photo_view","photoPickerButtonCaption","file","ext","split","pop","toLowerCase","acceptedExt","files","E_WRONG_ENDING","areAllApprovableFieldsApproved","fields","every","field","isFormFilledInCorrectly","formData","values","passwordConfirmation","item","onClick","simulateFormFillIn","_x2","_simulateFormFillIn","sequences","elementId","t0","t1","done","runSequence","pauseDelayMultiplier","inputEvent","Event","bubbles","blurEvent","focusEvent","fieldBlurDelayMultiplier","putTextInTextarea","simulateTypingTextarea","_callee2","sequence","_context2","abrupt","simulateTyping","simulateTypingInputElements","_callee3","_context3","setNativeValue","_callee4","strategy","_context4","slice","dispatchEvent","clickElement","click","putTextAtOnce","_callee5","_context5","getElementById","focus","valueSetter","getOwnPropertyDescriptor","set","prototype","getPrototypeOf","prototypeValueSetter","call","onDemo","asyncToGenerator","mark","submitButton","firstname","lastname","email","newsletters","phone","birthdate","biography","addEventListener","Demo_Demo_view","signupFormTitle","signupFormHint","firstNameLabel","lastNameLabel","userIdLabel","userIdHint","passwordHint","passwordConfirmationLabel","passwordConfirmationHint","emailLabel","emailHint","newslettersLabel","newslettersHint","phoneLabel","phoneHint","birthdateLabel","birthdateHint","biographyLabel","photoLabel","photoHint","personalInformationProcessingLabel","personalInformationProcessingHint","signupErrorTitle","alreadySignedUp","loginLinkCaption","signupSuccessTitle","signupSuccessMessage","btnDemoCaption","isRegistered","steps","onPopulateValidClick","onPopulateInvalidClick","md","lg","xl","SignupForm_view_messages","Demo_container","Firstname_container","Lastname_container","Username_container","Password_container","PasswordConfirmation_redux","Email_container","Newsletters_container","Phone_container","Birthdate_container","Biography_container","Photo_redux","PersonalInformationProcessing_container","SubmitButton_redux","showProceedButton","intlShape","FORM_SUBMIT","FORM_SUBMIT_RESPONSE","FORM_SUBMIT_FAILURE","setVisibilityFilter","signupState","filter","push","currentKeyField","currentAwaitingKeyField","fieldValueIsProper","fieldIsNotPending","fieldIsBeingEdited","onLogout","dataLoadingSpinnerMsg","dataLoadingErrorTitle","logoutButtonCaption","newslettersStatusIndicatorLabel","biographyBlockTitle","FullscreenSpinner_FullscreenSpinner_view","Dashboard_view_messages","sm","src","photo","LogoutButton_redux","age","defaultChecked","postProcessUserProfile","userProfileInfo","ageDiffMs","getTime","ageDate","abs","getUTCFullYear","calculateAge","_state$userProfile","userProfile","updateReduxAuthState","updateReduxAuthStatem","useEffect","setItem","removeItem","switchTo","onSwitchLocaleRequest","onSwitchLocaleResponse","onSwitchLocaleFailure","localeSwitchErrorTitle","AppView","isLocaleSwitchPending","localeSwitchError","Auth_redux","App_view_messages","LocaleSwitcher_redux","react_router","App_view_LoginRoute","exact","path","component","SignupForm_redux","App_view_ProtectedRoute","Dashboard_redux","redirectTo","App_view_DefaultRoute","ProtectedRoute","actualComponent","render","DefaultRoute","LoginRoute","_ref4","LoginForm_redux","fetchUserProfile","logicMiddleware","addDeps","App_App_view","i18n","Boolean","location","hostname","match","Auth_logic","createLogic","processOptions","successType","failType","process","_process","action","axios","url","params","then","catch","reject","IntlProvider_logic","allow","cookie","stringify","REQUEST_APPROVAL","RESPONSE_APPROVAL","RESPONSE_APPROVAL_ERROR","fieldApprovalLogic","validateableInputActionTypes","getState","ctx","requestApproval","responseApproval","responseApprovalError","assign","config","PasswordConfirmation_logic","passwordValidityStatus","passwordValue","_ref5","passwordConfirmationValidityStatus","passwordConfirmationValue","areEqual","passwordsCheckedAction","_ref6","_ref7","exractFormData","originalFormData","refinedFormData","FormData","append","SignupForm_logic","method","headers","Content-Type","timeout","toConsumableArray","passwordConfirmationLogic","notAuthorizedException","App_logic","Authorization","rootLogic","authLogic","switchLocaleLogic","signupFormLogic","dataFetchLogic","createLogicMiddleware","logic","monitor$","subscribe","x","initialState","objectSpread","defineProperty","fieldData","reduceReducers","approvable","validateable","combineReducers","inputActionTypes","keyFields","previousValue","fieldNameIndex","indexOf","reduce","index","FORM_POPULATE_VALID","formStateValid","FORM_POPULATE_INVALID","formStateInvalid","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","key","IntlProvider","addLocaleData","ru","middleware","get","hydrate","externalState","store","applyMiddleware","createStore","rootReducer","ReactDOM","es","IntlProvider_redux","App_redux","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d0fb075.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport './SubmitButton.view.sass';\r\n\r\nexport default ({\r\n\tdisabled, className, isPending, inProgressCaption, caption\r\n}) => pug`\r\n\tButton.btn-submit(\r\n\t\ttype=\"submit\"\r\n\t\tdisabled=disabled\r\n\t\tsize=\"lg\"\r\n\t\tcolor=\"primary\"\r\n\t\tclassName=className\r\n\t)\r\n\t\tif isPending\r\n\t\t\t| #{inProgressCaption}\r\n\r\n\t\t\t.spinner-wrapper\r\n\t\t\t\tSpinner(size=\"lg\" color=\"light\" type=\"grow\")\r\n\r\n\t\telse\r\n\t\t\t| #{caption}\r\n`;","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\nimport './ErrorDisplay.view.sass';\r\n\r\nconst View = ({\r\n\ttitle, errorMsg\r\n}) => pug`\r\n\tAlert.error-display(color=\"danger\")\r\n\t\th6.alert-heading= title\r\n\t\tp.mb-0= errorMsg\r\n`;\r\n\r\nexport default View;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Card, CardTitle, CardText, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport SubmitButton from 'components/SubmitButton';\r\nimport ErrorDisplay from '../ErrorDisplay';\r\nimport FadeIn from 'react-fade-in';\r\nimport { defineMessages } from 'react-intl'; \r\nimport './LoginForm.view.sass';\r\n\r\nconst messages = defineMessages({\r\n\tformTitle: \"Log in\",\r\n\tformHint: \"Please, enter your user name and password to get access to your profile\",\r\n\tusernameLabel: \"Username\",\r\n\tpasswordLabel: \"Password\",\r\n\tsubmitButtonCaption: \"Log in\",\r\n\tsubmitButtonInProgressCaption: \"Sending\",\r\n\tauthErrorTitle: \"Authentication error\",\r\n\tmsgNoAccountQuestion: \"No account?\",\r\n\tsignupLinkCaption: \"Register\"\r\n});\r\n\r\nexport default ({\r\n\tintl: { formatMessage }, isPending, isAuthenticated, externalError, onSubmit, onChange\r\n}) => pug`\r\n\t#LoginForm\r\n\t\tFadeIn(delay=500)\r\n\t\t\tContainer\r\n\t\t\t\tRow.align-items-center\r\n\t\t\t\t\tCol.mx-auto\r\n\t\t\t\t\t\tCard(body)\r\n\t\t\t\t\t\t\tCardTitle.mb-1 #{formatMessage(messages.formTitle)}\r\n\r\n\t\t\t\t\t\t\tCardText.d-block.text-muted.mt-0 #{formatMessage(messages.formHint)}\r\n\r\n\t\t\t\t\t\t\tForm(onSubmit=onSubmit)\r\n\t\t\t\t\t\t\t\tFormGroup\r\n\t\t\t\t\t\t\t\t\tLabel(for=\"username\") #{formatMessage(messages.usernameLabel)}\r\n\t\t\t\t\t\t\t\t\tInput(type=\"text\" name=\"username\" id=\"username\" onChange=onChange defaultValue=\"linus-torvalds\")\r\n\r\n\t\t\t\t\t\t\t\tFormGroup\r\n\t\t\t\t\t\t\t\t\tLabel(for=\"password\") #{formatMessage(messages.passwordLabel)}\r\n\t\t\t\t\t\t\t\t\tInput(type=\"password\" name=\"password\" id=\"password\" onChange=onChange defaultValue=\"linus-torvalds\")\r\n\r\n\t\t\t\t\t\t\t\t//FormGroup\r\n\t\t\t\t\t\t\t\t//\tCustomInput(type=\"checkbox\" id=\"remember\" label=\"Запомнить меня\")\r\n\r\n\t\t\t\t\t\t\t\tSubmitButton.d-block.w-100.mt-4(\r\n\t\t\t\t\t\t\t\t\tcaption=formatMessage(messages.submitButtonCaption)\r\n\t\t\t\t\t\t\t\t\tinProgressCaption=formatMessage(messages.submitButtonInProgressCaption)\r\n\t\t\t\t\t\t\t\t\tdisabled=isPending\r\n\t\t\t\t\t\t\t\t\tisPending=isPending\r\n\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\tif externalError\r\n\t\t\t\t\t\t\t\t\tErrorDisplay(title=formatMessage(messages.authErrorTitle) errorMsg=externalError)\r\n\r\n\t\t\t\t\t\t\t\tFormText.mt-3 #{formatMessage(messages.msgNoAccountQuestion)}\r\n\t\t\t\t\t\t\t\t\t| \r\n\t\t\t\t\t\t\t\t\tLink(to=\"/signup/\") #{formatMessage(messages.signupLinkCaption)}\r\n`;","// import React, { useState } from 'react';\r\n// import View from './LoginForm.view';\r\n\r\n// const Component = () => {\r\n// \tconst [ state, setState ] = useState({\r\n// \t\tusername: '',\r\n// \t\tpassword: ''\r\n// \t});\r\n// \tconst onInputFieldChange = (event) => {\r\n// \t\tconsole.log(event.target.id, event.target.value);\r\n// \t\tsetState({\r\n// \t\t\t...state,\r\n// \t\t\t[event.target.id]: event.target.value\r\n// \t\t});\r\n// \t};\r\n// \treturn pug`\r\n// \t\tView(\r\n// \t\t\tonChange=onInputFieldChange\r\n// \t\t)\r\n// \t`\r\n// };\r\n\r\n// export default Component;\r\n\r\nimport View from './LoginForm.view';\r\nimport { injectIntl } from 'react-intl';\r\nexport default injectIntl(View);","export const actionTypes = {\r\n\tAUTH_REQUEST: \t'AUTH_REQUEST',\r\n\tAUTH_RESPONSE: \t'AUTH_RESPONSE',\r\n\tAUTH_FAILURE: \t'AUTH_FAILURE',\r\n\tAUTH_LOGOUT: \t'AUTH_LOGOUT',\r\n}\r\n\r\nexport const onAuthRequest = (data) => ({\r\n\ttype: actionTypes.AUTH_REQUEST,\r\n\tdata\r\n});\r\n\r\nexport const onAuthResponse = (token) => ({\r\n\ttype: actionTypes.AUTH_RESPONSE,\r\n\ttoken\r\n});\r\n\r\nexport const onAuthFailure = (error) => ({\r\n\ttype: actionTypes.AUTH_FAILURE,\r\n\terror\r\n});\r\n\r\nexport const onLogout = () => ({\r\n\ttype: actionTypes.AUTH_LOGOUT\r\n})\r\n\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport Form from './LoginForm.container';\r\nimport { onAuthRequest } from '../Auth/Auth.actions';\r\nimport { sha256 } from 'js-sha256';\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisPending: state.auth.isPending,\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\texternalError: state.auth.externalError,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tonSubmit: (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst form = event.target;\r\n\t\tconst credentials = {\r\n\t\t\tusername: form.elements['username'].value,\r\n\t\t\tpassword: sha256(form.elements['password'].value)\r\n\t\t};\r\n\t\tdispatch(onAuthRequest(credentials));\r\n\t}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","export const actionTypes = {\r\n\tVALUE_CHANGED: \t\t'VALUE_CHANGED',\r\n\tFIELD_EDITED: \t\t'FIELD_EDITED'\r\n}\r\n\r\nexport const onChange = (fieldName, value, validityStatus) => ({\r\n\ttype: actionTypes.VALUE_CHANGED,\r\n\tfieldName,\r\n\tvalue,\r\n\tvalidityStatus\r\n});\r\n\r\nexport const onBlur = (fieldName) => ({\r\n\ttype: actionTypes.FIELD_EDITED,\r\n\tfieldName\r\n});\r\n\r\nexport function getActions(fieldName) {\r\n\tconst onChangeFixed = (value, validityStatus) => onChange(fieldName, value, validityStatus);\r\n\tconst onBlurFixed = () => onBlur(fieldName);\r\n\treturn {\r\n\t\tonChange: onChangeFixed,\r\n\t\tonBlur: onBlurFixed\r\n\t}\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormGroup, FormFeedback } from 'reactstrap';\r\n\r\nconst View = ({\r\n\t/* values */\r\n\t\tfieldName, value, label, inputType, isInvalid, errorMsg,\r\n\t\tisDisabled, isValid, validMsg, children, InputComponent,\r\n\t/* handlers */\r\n\t\tonChange, onBlur\r\n}) => pug`\r\n\tFormGroup\r\n\t\tInputComponent(\r\n\t\t\ttype=inputType\r\n\t\t\tname=fieldName\r\n\t\t\tid=fieldName\r\n\t\t\tlabel=label\r\n\t\t\tvalue=value\r\n\t\t\tvalid=isValid\r\n\t\t\tinvalid=isInvalid\r\n\t\t\tdisabled=isDisabled\r\n\t\t\tonChange=onChange\r\n\t\t\tonBlur=onBlur\r\n\t\t)\r\n\t\t\tFormFeedback(valid=true) #{validMsg}\r\n\r\n\t\t\tFormFeedback(valid=false)\r\n\t\t\t\tdiv #{errorMsg}\r\n\r\n\t\t\t= children\r\n`;\r\n\r\nView.propTypes = {\r\n\tfieldName: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string.isRequired,\r\n\tinputType: PropTypes.oneOf(['text', 'textarea','email', 'password', 'tel', 'date', 'checkbox', 'switch']),\r\n\tisInvalid: PropTypes.bool,\r\n\terror: PropTypes.string,\r\n\tisValid: PropTypes.bool,\r\n\tvalidMsg: PropTypes.string,\r\n\tonChange: PropTypes.func,\r\n\tonBlur: PropTypes.func,\r\n}\r\n\r\nexport default View;","import { PROPER_VALUE } from './ValidateableInput.factory'; \r\n\r\nconst shouldShowError = (status, isTypingFinished, inProgressFilter = []) => {\r\n\t// Имя полностью соответствует формату\r\n\tif ( ! status || status === PROPER_VALUE ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Пользователь завершил редактирование, показывем ошибку\r\n\tif ( isTypingFinished )\r\n\t\treturn true\r\n\r\n\t// Если пользователь ещё в процессе набора, молчим про ошибки, определяемые фильтром\r\n\treturn inProgressFilter.some( filteredStatus => filteredStatus === status )\r\n\t\t? false\r\n\t\t: true;\r\n}\r\n\r\nexport const getErrorIntl = (intl, status, errorStrings = {}, isTypingFinished = true, inProgressFilter = []) => {\r\n\treturn shouldShowError(status, isTypingFinished, inProgressFilter)\r\n\t\t? intl.formatMessage(errorStrings[status])\r\n\t\t: '';\r\n}\r\n\r\nexport function getErrorCodes(errorStrings) {\r\n\tconst keys = Object.keys(errorStrings);\r\n\tlet errorCodes = {};\r\n\tfor ( let i = 0; i < keys.length; i++ ) {\r\n\t\terrorCodes[keys[i]] = keys[i];\r\n\t}\r\n\treturn errorCodes;\r\n}\r\n\r\nexport function getEnhancedValidator(validate, errorStrings = {}) {\r\n\tconst errorCodes = getErrorCodes(errorStrings);\r\n\treturn (value) => {\r\n\t\tconst validationResult = validate(value, errorCodes);\r\n\t\treturn validationResult === true\r\n\t\t\t? PROPER_VALUE\r\n\t\t\t: validationResult;\r\n\t}\r\n}","import { defineMessages } from 'react-intl';\r\nimport cookie from 'js-cookie';\r\n\r\nconst messages = defineMessages({\r\n\tserverConnectionError: \"Couldn't connect to server: \\\"{errorMsg}\\\". Please, try again later. If you can't submit the form, please contact us. We bring our apologies for the inconvenience.\"\r\n});\r\n\r\nexport function sleeper(ms) {\r\n\treturn new Promise(resolve => setTimeout(() => resolve(), ms));\r\n}\r\n\r\nexport function ajaxErrorParser(error, intl) {\r\n\tlet err;\r\n\tif ( error.response ) {\r\n\t\t// The request was made and the server responded with a status code\r\n\t\t// that falls out of the range of 2xx \r\n\t\terr = `${error.response.data.details}. ${error.response.status} ${error.response.statusText}`;\r\n\t}\r\n\telse if ( error.request ) {\r\n\t\t// The request was made but no response was received\r\n\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n\t\t// http.ClientRequest in node.js\r\n\t\t//err = `Не удалось связаться с сервером: \"${error.message}\". Пожалуйста, повторите попытку позже. Если вам не удалось отправить форму, пожалуйста, свяжитесь с нами. Приносим извинения за доставленные неудобства.`;\r\n\t\tconsole.log(error.message);\r\n\t\terr = intl.formatMessage(messages.serverConnectionError, { errorMsg: error.message });\r\n\t}\r\n\telse {\r\n\t\t// Something happened in setting up the request that triggered an Error\r\n\t\terr = error.message;\r\n\t}\r\n\treturn err;\r\n}\r\n\r\nexport function fetchStoredMessages(localeId) {\r\n\t// First, check if there's a 'locale' value in the local storage\r\n\tconst serializedLocale = localStorage.getItem('locale');\r\n\tif ( ! serializedLocale ) return null;\r\n\t\r\n\t// If it's there, check if the data is for the requested locale \r\n\tconst { locale: storedLocaleId, messages } = JSON.parse(serializedLocale);\r\n\tif ( storedLocaleId !== localeId ) return null;\r\n\r\n\treturn messages;\r\n}\r\n\r\nexport function hydrate(initialState = {}) {\r\n\t// Check if the localized messages are already in the storage\r\n\tconst locale = cookie.get('locale') || 'en';\r\n\tconst messages = fetchStoredMessages(locale);\r\n\r\n\t// Set the cookie for subsequent responses to server\r\n\tcookie.set('locale', locale);\r\n\r\n\tinitialState.i18n = {\r\n\t\t...initialState.i18n,\r\n\t\tlocale,\r\n\t\tmessages\r\n\t}\r\n\r\n\treturn initialState;\r\n}\r\n\r\nexport async function scrollIntoElement(e) {\r\n\tconst element = e.target;\r\n\tconst rect = element.getBoundingClientRect();\r\n\tconst viewportHeight = document.documentElement.clientHeight;\r\n\r\n\t// Required offset from the top for the element to be in the center\r\n\tconst offsetY = (viewportHeight - rect.height) / 2;\r\n\t\r\n\t// Difference between needed offset and actual relative position from the top\r\n\tconst deltaY = Math.floor(rect.top - offsetY);\r\n\r\n\tconst transitionTime = 500;\r\n\tconst stepDelay = 5;\r\n\tconst stepsTotal = transitionTime / stepDelay;\r\n\tconst stepSize = Math.ceil(deltaY / stepsTotal);\r\n\r\n\t// console.log(`Total: ${stepsTotal}. Size: ${stepSize}. Initial top: ${rect.top}. Target: ${offsetY}. Initial delta: ${deltaY}`);\r\n\r\n\tsetTimeout( function step(stepsLeft) {\r\n\t\tif ( stepsLeft === 0 ) return;\r\n\t\twindow.scrollBy(0, stepSize);\r\n\t\tsetTimeout(step, stepDelay, --stepsLeft);\r\n\r\n\t\t// const progress = Math.floor(element.getBoundingClientRect().top);\r\n\t\t// const target = Math.floor(offsetY);\r\n\t\t// const delta = Math.floor(element.getBoundingClientRect().top - offsetY);\r\n\t\t// console.log(`Top: ${progress}. Delta: ${delta} (${stepsLeft})`);\r\n\r\n\t}, 0, stepsTotal);\r\n}","import React from 'react';\r\nimport { CustomInput, Input, Label } from 'reactstrap';\r\nimport { scrollIntoElement } from '../../../utils';\r\n\r\nconst DefaultInput = ({\r\n\ttype, name, label, value, valid, invalid, disabled, onChange, onBlur, children\r\n}) => pug`\r\n\tdiv\r\n\t\tLabel(for=name) #{label}\r\n\r\n\t\tInput(\r\n\t\t\ttype=type\r\n\t\t\tname=name\r\n\t\t\tid=name\r\n\t\t\tvalue=value\r\n\t\t\tvalid=valid\r\n\t\t\tinvalid=invalid\r\n\t\t\tdisabled=disabled\r\n\t\t\tonChange=onChange\r\n\t\t\tonBlur=onBlur\r\n\t\t\tonFocus=scrollIntoElement\r\n\t\t)\r\n\r\n\t\t= children\r\n`;\r\n\r\nconst AlternativeInput = ({\r\n\ttype, name, label, value, valid, invalid, disabled, onChange, children\r\n}) => pug`\r\n\tCustomInput(\r\n\t\ttype=type\r\n\t\tname=name\r\n\t\tid=name\r\n\t\tlabel=label\r\n\t\tchecked=value\r\n\t\tvalid=valid\r\n\t\tinvalid=invalid\r\n\t\tdisabled=disabled\r\n\t\tonChange=onChange\r\n\t)\r\n\t\t= children\r\n`;\r\n\r\nexport { DefaultInput, AlternativeInput };","import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'; \r\nimport { getActions } from './ValidateableInput.actions';\r\nimport View from './ValidateableInput.view';\r\nimport { getErrorIntl, getEnhancedValidator } from './ValidateableInput.utils';\r\nimport { DefaultInput, AlternativeInput } from './ValidateableInput.inputs';\r\n\r\nexport const PROPER_VALUE = 'PROPER_VALUE';\r\n\r\nexport default ({\r\n\t/* values */\tfieldName, inputType, errorStrings, inProgressFilter, validMsg,\r\n\t/* handlers */ \tvalidate = () => true\r\n}) => {\r\n\tconst mapStateToProps = (state, ownProps) => {\r\n\t\tconst { validityStatus, isTypingFinished, value } = state.signup.data[fieldName];\r\n\t\tconst errorMsg = ownProps.errorMsg\r\n\t\t\t? ownProps.errorMsg\r\n\t\t\t: getErrorIntl(ownProps.intl, validityStatus, errorStrings, isTypingFinished, inProgressFilter);\r\n\t\treturn {\r\n\t\t\tisInvalid: !!errorMsg,\r\n\t\t\terrorMsg,\r\n\t\t\tvalue\r\n\t\t}\r\n\t};\r\n\r\n\tconst { onChange, onBlur } = getActions(fieldName);\r\n\r\n\tconst enhancedValidate = getEnhancedValidator(validate, errorStrings);\r\n\r\n\tconst mapDispatchToProps = dispatch => ({\r\n\t\tonChange: event => {\r\n\t\t\tconst target = event.target;\r\n\t\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\r\n\t\t\tconst validityStatus = enhancedValidate(value);\r\n\t\t\tdispatch(onChange(value, validityStatus));\r\n\t\t},\r\n\t\tonBlur: () => dispatch(onBlur())\r\n\t});\r\n\r\n\tlet Component = connect(\r\n\t  mapStateToProps,\r\n\t  mapDispatchToProps\r\n\t)(View);\r\n\r\n\r\n\tComponent.propTypes = {\r\n\t\tfieldName: PropTypes.string.isRequired,\r\n\t\tinputType: PropTypes.oneOf(['text', 'textarea', 'email', 'password', 'tel', 'date', 'checkbox', 'switch']).isRequired\r\n\t}\r\n\r\n\tlet InputComponent;\r\n\r\n\tswitch ( inputType ) {\r\n\t\tcase 'checkbox':\r\n\t\tcase 'switch':\r\n\t\t\tInputComponent = AlternativeInput\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tInputComponent = DefaultInput\r\n\t}\r\n\r\n\tconst Container = ({\r\n\t\tisDisabled, isInvalid = false, isValid = false, errorMsg, children, label, intl\r\n\t}) => {\r\n\t\tconst validMsgFormatted = validMsg\r\n\t\t\t? intl.formatMessage(validMsg)\r\n\t\t\t: null;\r\n\t\treturn pug`\r\n\t\t\tComponent(\r\n\t\t\t\tfieldName=fieldName\r\n\t\t\t\tinputType=inputType\r\n\t\t\t\tlabel=label\r\n\t\t\t\tisInvalid=isInvalid\r\n\t\t\t\terrorMsg=errorMsg\r\n\t\t\t\tisValid=isValid\r\n\t\t\t\tvalidMsg=validMsgFormatted\r\n\t\t\t\tInputComponent=InputComponent\r\n\t\t\t\tintl=intl\r\n\t\t\t)\r\n\t\t\t\t= children\r\n\t\t`;\r\n\t}\r\n\r\n\treturn injectIntl(Container);\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst View = ({\r\n\t/* values */ \tisInvalid, isPending, isApproved, label,\r\n\t/* values */\terrorMsg, InputComponent\r\n}) => pug`\r\n\tInputComponent(\r\n\t\tisDisabled=isPending\r\n\t\tisInvalid=isInvalid\r\n\t\tisValid=isApproved\r\n\t\terrorMsg=errorMsg\r\n\t\tlabel=label\r\n\t)\r\n\t\tif isPending\r\n\t\t\tSpinner(size=\"sm\" color=\"primary\")\r\n`;\r\n\r\nView.propTypes = {\r\n\tisInvalid: PropTypes.bool,\r\n\tisPending: PropTypes.bool,\r\n\tisValid: PropTypes.oneOfType([\r\n\t\t\tPropTypes.bool,\r\n\t\t\tPropTypes.instanceOf('undefined')\r\n\t\t]),\r\n\terrorMsg: PropTypes.string,\r\n}\r\n\r\nexport default View;","import React from 'react';\r\nimport { connect } from 'react-redux'; \r\nimport { injectIntl } from 'react-intl';\r\nimport validateableInputFactory from '../ValidateableInput';\r\nimport View from './ApprovableInput.view';\r\n\r\nexport default ({\r\n\t/* values */\tfieldName, inputType, approvedMsg, rejectedMsg, children, externalError, errorStrings, inProgressFilter,\r\n\t/* handlers */ \tvalidate,\r\n}) => {\r\n\tconst mapStateToProps = (state, ownProps) => {\r\n\t\tconst { externalError, isTypingFinished, isPending, isApproved } = state.signup.data[fieldName] || {};\r\n\t\tlet errorMsg = '';\r\n\t\tif ( externalError )\r\n\t\t\terrorMsg = externalError;\r\n\t\telse if ( isTypingFinished && isApproved === false )\r\n\t\t\terrorMsg = ownProps.intl.formatMessage(rejectedMsg);\r\n\t\treturn {\r\n\t\t\tisInvalid: !!errorMsg,\r\n\t\t\terrorMsg,\r\n\t\t\tisPending,\r\n\t\t\t// isPending: isTypingFinished && !isApproved && !externalError && status === statusCodes.PROPER,\r\n\t\t\tisApproved: isApproved && isTypingFinished,\r\n\t\t\t// isDisapproved: isTypingFinished && isApproved === false,\r\n\t\t}\r\n\t};\r\n\r\n\tlet Component = connect(\r\n\t  mapStateToProps\r\n\t)(View);\r\n\r\n\tComponent = injectIntl(Component);\r\n\r\n\tconst ValidateableInput = validateableInputFactory({\r\n\t\tfieldName,\r\n\t\tinputType,\r\n\t\tvalidMsg: approvedMsg,\r\n\t\tvalidate,\r\n\t\terrorStrings,\r\n\t\tinProgressFilter\r\n\t});\r\n\r\n\treturn ({ label }) => pug`\r\n\t\tComponent(\r\n\t\t\tInputComponent=ValidateableInput\r\n\t\t\tlabel=label\r\n\t\t)\r\n\t`;\r\n}","import approvableInputFactory from '../ApprovableInput';\r\nimport validate from './Username.validator';\r\nimport { defineMessages } from 'react-intl'; \r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_FIRST_LETTER: \t'E_FIRST_LETTER',\r\n\tE_LAST_SYMBOL: \t\t'E_LAST_SYMBOL',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_SHORT: \t\t'E_TOO_SHORT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, come up with a username\",\r\n\tE_FIRST_LETTER: \t\"Username should begin with a lowercase latin character\",\r\n\tE_LAST_SYMBOL: \t\t\"Name should end in a letter or a digit\",\r\n\tE_INVALID_FORMAT: \t\"The name contains illegal characters. Please, adhere to the specified format\",\r\n\tE_TOO_SHORT: \t\t\"Name should be at least 5 characters long\",\r\n\tE_TOO_LONG: \t\t\"Name shouldn't be longer than 30 characters\"\r\n})\r\n\r\nconst resultStrings = defineMessages({\r\n\trejected: \"Unfortunately, this name has already been taken. Please, come up with another one\",\r\n\tapproved: \"Great, this is a suitable name!\",\r\n})\r\n\r\nexport default approvableInputFactory({\r\n\tfieldName: \"username\",\r\n\tinputType: \"text\",\r\n\tvalidate,\r\n\tresultStrings,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_TOO_SHORT, statusCodes.E_LAST_SYMBOL],\r\n\trejectedMsg: resultStrings.rejected,\r\n\tapprovedMsg: resultStrings.approved\r\n});","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Максимум - 30 символов \r\n\tif ( value.length > 30 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// Первый символ должен быть буквой\r\n\tconst firstLetterRegex = /^[a-z]$/;\r\n\tlet isValid = firstLetterRegex.test(value.charAt(0));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_FIRST_LETTER;\r\n\t}\t\t\r\n\t\r\n\t// Имя должно соответствовать формату\t\r\n\tconst usernameRegex = /^[-a-z0-9]+$/;\r\n\tisValid = usernameRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\t// Минимум - 5 символов\r\n\tif ( value.length < 5 ) \r\n\t\treturn statusCodes.E_TOO_SHORT;\r\n\r\n\t// Последний символ - буква или цифра\r\n\tconst lastLetterRegex = /^[a-z0-9]$/;\r\n\tisValid = lastLetterRegex.test(value.charAt(value.length - 1));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_LAST_SYMBOL;\r\n\t}\t\t\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Password.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_INSUFFICIENT: \t'E_INSUFFICIENT',\r\n\tE_TOO_SHORT: \t\t'E_TOO_SHORT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This is a requried field. Please, enter a password\",\r\n\tE_INVALID_FORMAT:\t\"The password contains illegal symbols. Please, adhere to the specified format\",\r\n\tE_INSUFFICIENT: \t\"Please, use at least 2 symbol groups: letters, digits or special characters\",\r\n\tE_TOO_SHORT:\t\t\"Password should be at least 8 symbols long\",\r\n\tE_TOO_LONG: \t\t\"Password should be less that 128 symbols long. Please, use a shorter password\"\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"password\",\r\n\tinputType: \"password\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_TOO_SHORT, statusCodes.E_INSUFFICIENT]\r\n})","export default function validate(value, statusCodes) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Максимум - 128 символов \r\n\tif ( value.length > 128 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\tconst grpLetters = \"[a-zA-Z]\";\r\n\tconst grpDigits = \"[0-9]\";\r\n\tconst grpSymbols = \"\";\r\n\tconst format = `(?:${grpLetters}?${grpDigits}?${grpSymbols}?)+`;\r\n\tlet regexp = new RegExp(format);\r\n\tregexp = /^(?:[a-zA-Z]|[0-9]|[-_,.'><=+&%$#@!* )(~\\]/\\\\{}])+$/;\r\n\tlet isValid = regexp.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\t// Пароль должен содержать как минимум две группы символов\r\n\t// 1) буквы латинского алфавита\r\n\t// 2) цифры\r\n\t// 3) спецсимволы\r\n\tregexp = /[a-zA-Z]/;\r\n\tconst hasLetters = regexp.test(value);\r\n\r\n\tregexp = /[0-9]/;\r\n\tconst hasDigits = regexp.test(value);\r\n\r\n\tregexp = /[-_,.'><=+&%$#@!* )(~\\]/\\\\{}]/;\r\n\tconst hasSymbols = regexp.test(value);\r\n\r\n\tif ( hasLetters + hasDigits + hasSymbols < 2 )\r\n\t\treturn statusCodes.E_INSUFFICIENT;\r\n\r\n\tif ( value.length < 8 )\r\n\t\treturn statusCodes.E_TOO_SHORT;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './PasswordConfirmation.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t\t'E_EMPTY',\r\n\tE_PASSWORD_NOT_VALID: \t'E_PASSWORD_NOT_VALID',\r\n\tE_PASSWORDS_MISMATCH: \t'E_PASSWORDS_MISMATCH'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\t\"This field is required. Please, confirm the above entered password\",\r\n\tE_PASSWORDS_MISMATCH: \t\"Passwords don't match\",\r\n\tE_PASSWORD_NOT_VALID: \t\"Please, make sure both passwords follow the specified format\"\r\n})\r\n\r\nconst resultMessages = defineMessages({\r\n\tvalid: \"Passwords match\"\r\n})\r\n\r\nconst Component = validateableInputFactory({\r\n\tfieldName: \"passwordConfirmation\",\r\n\tinputType: \"password\",\r\n\tvalidMsg: resultMessages.valid,\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY]\r\n});\r\n\r\nexport default Component;","export default function validate(value, statusCodes) {\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\treturn true;\r\n}","import Component from './PasswordConfirmation.container';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tconst { isValid, isTypingFinished } = state.signup.data['passwordConfirmation'];\r\n\treturn {\r\n\t\tisValid: isValid && isTypingFinished,\r\n\t}\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(Component);\r\n","import approvableInputFactory from '../ApprovableInput';\r\nimport validate from './Email.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your email\",\r\n\tE_TOO_LONG: \t\t\"We don't accept emails longer than 128 symbols. PLease, use a shorter address\",\r\n\tE_INVALID_FORMAT: \t\"Email doesn't comply with the format. Please, make sure you typed the address correctly\"\r\n})\r\n\r\nconst resultMessages = defineMessages({\r\n\trejected: \"The address has already been taken by somebody. Please, use another one\",\r\n\tapproved: \"This email address is fine!\"\r\n})\r\n\r\nexport default approvableInputFactory({\r\n\tfieldName: \"email\",\r\n\tinputType: \"email\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_INVALID_FORMAT],\r\n\trejectedMsg: resultMessages.rejected,\r\n\tapprovedMsg: resultMessages.approved\r\n})","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Максимум - 100 символов \r\n\tif ( value.length > 128 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// Большинство разумных адресов удовлетворят этому формату\r\n\t// https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\r\n\tconst emailRegex = /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/;\r\n\tlet isValid = emailRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\treturn true;\r\n}","import { defineMessages } from 'react-intl';\r\nimport approvableInputFactory from '../ApprovableInput';\r\nimport validate from './Phone.validator';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_FIRST_SYMBOL: \t'E_FIRST_SYMBOL',\r\n\tE_INVALID_CHARS: \t'E_INVALID_CHARS',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_SHORT: \t\t'E_TOO_SHORT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your phone number\",\r\n\tE_FIRST_SYMBOL: \t\"The first character should be a plus symbol (+)\",\r\n\tE_TOO_SHORT: \t\t\"Phone number should be more than 10 characters long. Please, make sure you entered it correctly\",\r\n\tE_TOO_LONG: \t\t\"The phone number is too long. Please, use a shorter number\",\r\n\tE_INVALID_CHARS: \t\"Phone number can only contain digits, spaces or hyphens and a plus sign. Please, check for typos\",\r\n\tE_INVALID_FORMAT: \t\"The phone number doesn't comply with the format. Please, check if you typed it correctly\"\r\n})\r\n\r\nconst resultMessages = defineMessages({\r\n\trejected: \"This phone number has already been in use. Please, choose another one\",\r\n\tapproved: \"This phone number will work!\"\r\n})\r\n\r\nexport default approvableInputFactory({\r\n\tfieldName: \"phone\",\r\n\tinputType: \"tel\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_TOO_SHORT, statusCodes.E_INVALID_FORMAT],\r\n\trejectedMsg: resultMessages.rejected,\r\n\tapprovedMsg: resultMessages.approved,\r\n});","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Максимум - 30 символов \r\n\tif ( value.length > 30 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// Первый символ должен быть буквой\r\n\tconst firstSymbolRegex = /^\\+/;\r\n\tlet isValid = firstSymbolRegex.test(value.charAt(0));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_FIRST_SYMBOL;\r\n\t}\r\n\r\n\t// Only valid characters\r\n\tconst phoneLexisRegex = /^[-+ 0-9]+$/;\r\n\tisValid = phoneLexisRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_CHARS;\r\n\t}\r\n\t\r\n\t// Номер должен соответствовать формату\t\r\n\tconst phoneGrammarRegex = /^\\+[0-9]{1,3}(?:(?:[- ][0-9]{2,4}){3,4}|[- ]?[0-9]{5,10})$/;\r\n\tisValid = phoneGrammarRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\t// Минимум - 5 символов\r\n\tif ( value.length < 10 ) \r\n\t\treturn statusCodes.E_TOO_SHORT;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Birthdate.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_TOO_OLD: \t\t\t'E_TOO_OLD',\r\n\tE_TOO_EARLY: \t\t'E_TOO_EARLY',\r\n\tE_INVALID_FORMAT:  \t'E_INVALID_FORMAT'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your date of birth\",\r\n\tE_TOO_OLD: \t\t\t\"We accept that a human can live longer than 150 years. If that's your case, please contact us via phone or email. We will consider your application in exceptional order\",\r\n\tE_TOO_EARLY: \t\t\"Only dates from the past are accepted\",\r\n\tE_INVALID_FORMAT: \t\"Wrong data format. Please, make sure you enter the date in YYYY-MM-DD format\",\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"birthdate\",\r\n\tinputType: \"date\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_TOO_OLD, statusCodes.E_TOO_EARLY, statusCodes.E_INVALID_FORMAT]\r\n})","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Неверный формат\r\n\tconst dateFormat = /^[0-9]{4}-(?:0[1-9]|1[012])-(?:0[1-9]|[12][0-9]|3[01])$/;\r\n\tconst isCorrect = dateFormat.test(value);\r\n\tif ( !isCorrect )\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\r\n\tconst tsBirthdate = Date.parse(value);\r\n\tif ( isNaN(tsBirthdate) )\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\r\n\tconst tsToday = Date.now();\r\n\t\r\n\t// Дата из будущего\r\n\tif ( tsBirthdate > tsToday )\r\n\t\treturn statusCodes.E_TOO_EARLY;\r\n\t\r\n\t// Максимум - 150 лет \r\n\tif ( tsToday - tsBirthdate > 150 * 365 * 24 * 60 * 60 * 1000 )\r\n\t\treturn statusCodes.E_TOO_OLD;\r\n\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"newsletters\",\r\n\tinputType: \"switch\"\r\n})","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Biography.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_TOO_LONG: 'E_TOO_LONG',\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_TOO_LONG: \"Please, shorten your biography to 4000 symbols\",\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"biography\",\r\n\tinputType: \"textarea\",\r\n\tvalidate,\r\n\terrorStrings\r\n});","export default function validate(value, statusCodes = {}) {\r\n\t// ограничиваем объём текста\r\n\tif ( value && value.length > 4000 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './PersonalInformationProcessing.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_IMPOSED: 'E_IMPOSED',\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_IMPOSED: \"Consent to personal information processing is required to sign up to our serivce\",\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"personal-information-processing\",\r\n\tinputType: \"checkbox\",\r\n\tvalidate,\r\n\terrorStrings\r\n})","export default function validate(value, statusCodes = {}) {\r\n\treturn value\r\n\t\t? true\r\n\t\t: statusCodes.E_IMPOSED;\r\n}","import React from 'react';\r\nimport { FormGroup, FormFeedback, CustomInput, Label, Input } from 'reactstrap';\r\nimport './Photo.view.sass';\r\n\r\nconst View = ({\r\n\t/* values */\r\n\t\tfieldName, fileName, label, invalid, errorMsg,\r\n\t\tisDisabled, valid, validMsg, children,\r\n\t/* handlers */\r\n\t\tonChange\r\n}) => pug`\r\n\tFormGroup\r\n\t\tLabel(for=fieldName) #{label}\r\n\r\n\t\tCustomInput(\r\n\t\t\ttype=\"file\"\r\n\t\t\tname=fieldName\r\n\t\t\tid=fieldName\r\n\t\t\tlabel=fileName\r\n\t\t\tvalid=valid\r\n\t\t\tinvalid=invalid\r\n\t\t\tdisabled=isDisabled\r\n\t\t\tonChange=onChange\r\n\t\t)\r\n\r\n\t\tInput(\r\n\t\t\ttype=\"hidden\"\r\n\t\t\tvalid=valid\r\n\t\t\tinvalid=invalid\r\n\t\t)\r\n\t\t\r\n\t\tFormFeedback(valid=true) #{validMsg}\r\n\r\n\t\tFormFeedback(valid=false)\r\n\t\t\tdiv #{errorMsg}\r\n\r\n\t\t= children\r\n`;\r\n\r\nexport default View;","import React from 'react';\r\nimport View from './Photo.view';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_NOT_SELECTED: \t'E_NOT_SELECTED',\r\n\tE_WRONG_EXTENTION: \t'E_WRONG_EXTENTION',\r\n\tE_TOO_BIG: \t\t\t'E_TOO_BIG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_NOT_SELECTED: \t\"Please, choose a photo for your profile\",\r\n\tE_WRONG_EXTENTION: \t\"We only support files of JPG and PNG formats\",\r\n\tE_TOO_BIG: \t\t\t\"File size shouldn't exceed 5 MB\",\r\n})\r\n\r\nconst Container = ({\r\n\t/* values */\r\n\t\tfieldName, fieldLabel, isInvalid, errorMsg,\r\n\t\tisDisabled, isValid, validMsg, fileName, label,\r\n\t/* handlers */\r\n\t\tonChange\r\n}) => pug`\r\n\tView(\r\n\t\tfieldName=\"photo\"\r\n\t\tlabel=label\r\n\t\tfileName=fileName\r\n\t\tinvalid=isInvalid\r\n\t\terrorMsg=errorMsg\r\n\t\tisDisabled=isDisabled\r\n\t\tvalid=isValid\r\n\t\tvalidMsg=validMsg\r\n\t\tonChange=onChange\r\n\t)\r\n`;\r\n\r\nexport default Container;","import { connect } from 'react-redux'; \r\nimport { defineMessages, injectIntl } from 'react-intl';\r\nimport Container from './Photo.container';\r\nimport validate from './Photo.validator';\r\nimport { onChange } from '../ValidateableInput/ValidateableInput.actions';\r\nimport { getErrorIntl, getEnhancedValidator } from '../ValidateableInput/ValidateableInput.utils';\r\nimport { errorStrings } from './Photo.container';\r\n\r\nconst fieldName = 'photo';\r\n\r\nconst messages = defineMessages({\r\n\tphotoPickerButtonCaption: \"Pick a photo\"\r\n})\r\n\r\nconst enhancedValidate = getEnhancedValidator(validate, errorStrings);\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tconst { validityStatus, value } = state.signup.data[fieldName];\r\n\tconst fileName = value.name || ownProps.intl.formatMessage(messages.photoPickerButtonCaption);\r\n\tconst errorMsg = ownProps.errorMsg\r\n\t\t? ownProps.errorMsg\r\n\t\t: getErrorIntl(ownProps.intl, validityStatus, errorStrings);\r\n\treturn {\r\n\t\tisInvalid: !!errorMsg,\r\n\t\terrorMsg,\r\n\t\tfileName\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tonChange: event => {\r\n\t\tconst file = event.target.files[0];\r\n\t\tif ( ! file ) return false;\r\n\t\tconst validityStatus = enhancedValidate(file);\r\n\t\tdispatch(onChange(fieldName, file, validityStatus));\r\n\t}\r\n});\r\n\r\nlet Component = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Container);\r\n\r\nexport default injectIntl(Component);","export default function validate(file, statusCodes = {}) {\r\n\t// Пустая строка\r\n\tif ( ! file )\r\n\t\treturn statusCodes.E_NOT_SELECTED;\r\n\r\n\t// Только JPG и PNG\r\n\tconst ext = file.name.split('.').pop().toLowerCase();\r\n\tconst isValidExtention = ['jpg', 'png'].some( acceptedExt => acceptedExt === ext );\r\n\tif ( ! isValidExtention )\r\n\t\treturn statusCodes.E_WRONG_EXTENTION;\r\n\r\n\t// Максимум - 5 МБ\r\n\tif ( file.size > 5 * 1024 * 1024 )\r\n\t\treturn statusCodes.E_TOO_BIG;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Firstname.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_FIRST_LETTER: \t'E_FIRST_LETTER',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your name\",\r\n\tE_FIRST_LETTER: \t\"Name should begin with a captial letter\",\r\n\tE_INVALID_FORMAT: \t\"The name contains illegal characters. Please, adhere to the specified format\",\r\n\tE_TOO_LONG: \t\t\"Name shouldn't exceed 40 characters\"\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"firstname\",\r\n\tinputType: \"text\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY]\r\n});","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Максимум - 40 символов \r\n\tif ( value.length > 40 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// Первый символ должен быть заглавной буквой\r\n\tconst firstLetterRegex = /^[A-ZА-ЯЁ]$/;\r\n\tlet isValid = firstLetterRegex.test(value.charAt(0));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_FIRST_LETTER;\r\n\t}\t\t\r\n\t\r\n\t// Имя должно соответствовать формату\t\r\n\tconst nameRegex = /^.[a-zа-яё]*$/;\r\n\tisValid = nameRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\t\t\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Lastname.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_FIRST_LETTER: \t'E_FIRST_LETTER',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG',\r\n\tE_LAST_SYMBOL: \t\t'E_LAST_SYMBOL',\r\n\tE_WRONG_ENDING: \t'E_WRONG_ENDING'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your family name\",\r\n\tE_FIRST_LETTER: \t\"Family name should start with captial letter\",\r\n\tE_INVALID_FORMAT: \t\"The family name doesn't follow the format. Please, use only letters and a hyphen\",\r\n\tE_TOO_LONG: \t\t\"Family name shouldn't exceed 50 characters\",\r\n\tE_LAST_SYMBOL: \t\t\"Family name should end in lowercase letter\",\r\n\tE_WRONG_ENDING: \t\"Minimum 2 letters after a hyphen\",\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"lastname\",\r\n\tinputType: \"text\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_LAST_SYMBOL, statusCodes.E_WRONG_ENDING]\r\n});","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Максимум - 50 символов \r\n\tif ( value.length > 50 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// Первый символ должен быть заглавной буквой\r\n\tconst firstLetterRegex = /^[A-ZА-ЯЁ]$/;\r\n\tlet isValid = firstLetterRegex.test(value.charAt(0));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_FIRST_LETTER;\r\n\t}\r\n\r\n\t// Последний символ должен быть буквой\r\n\tconst lastLetterRegex = /^[a-zа-яё]$/;\r\n\tisValid = lastLetterRegex.test(value.charAt(value.length-1));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_LAST_SYMBOL;\r\n\t}\r\n\r\n\t// Минимум две буквы после дефиса\r\n\tconst endingRegex = /-[a-zа-яё]$/;\r\n\tisValid = endingRegex.test(value);\r\n\tif ( isValid ) {\r\n\t\treturn statusCodes.E_WRONG_ENDING;\r\n\t}\t\t\r\n\t\r\n\t// Фамилия должна соответствовать формату\t\r\n\tconst nameRegex = /^[A-ZА-ЯЁ][-a-zа-яё]*$/;\r\n\tisValid = nameRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\treturn true;\r\n}","import { connect } from 'react-redux';\r\nimport { PROPER_VALUE } from '../ValidateableInput/ValidateableInput.factory';\r\nimport Component from 'components/SubmitButton';\r\n\r\nconst areAllFieldsValid = (fields) => fields.every(field => field.validityStatus === PROPER_VALUE);\r\n\r\nconst areAllApprovableFieldsApproved = (fields) => fields.every(field => field.isApproved !== false );\r\n\r\nconst isFormFilledInCorrectly = (state) => {\r\n\tconst formData = state.signup.data;\r\n\tconst indicators = [\r\n\t\tareAllFieldsValid(Object.values(formData)),\r\n\t\tareAllApprovableFieldsApproved(Object.values(formData)),\r\n\t\tformData.password.value === formData.passwordConfirmation.value\r\n\t]\r\n\treturn indicators.every( item => item );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tdisabled: !isFormFilledInCorrectly(state) || state.signup.status.isPending,\r\n\tisPending: state.signup.status.isPending\r\n});\r\n\r\nexport default connect(mapStateToProps)(Component);","import React from 'react';\r\nimport './Demo.view.sass';\r\n\r\nconst View = ({\r\n\tonClick, caption\r\n}) => pug`\r\n\t#FormDemo\r\n\t\ta(onClick=onClick) #{caption}\r\n\t\t.arrow-wrapper\r\n\t\t\t.arrow\r\n\t\t\t\t.pointer\r\n`;\r\n\r\nexport default View;","import { sleeper } from 'utils'; \r\n\r\nexport async function simulateFormFillIn(sequences, delay) {\r\n\tfor ( let elementId in sequences ) {\r\n\t\tawait runSequence(elementId, sequences[elementId], delay);\r\n\t\tawait sleeper(delay * pauseDelayMultiplier);\r\n\t}\r\n}\r\n\r\n// --- Internals ---\r\n\r\n\r\nconst inputEvent = new Event('input', {bubbles: true});\r\nconst blurEvent = new Event('blur', {bubbles: true});\r\nconst focusEvent = new Event('focus', {bubbles: false});\r\nconst fieldBlurDelayMultiplier = 2;\r\nconst pauseDelayMultiplier = 10;\r\n\r\n\r\n\r\nfunction putTextInTextarea(element, value) {\r\n\telement.value = value;\r\n\t// element.innerHTML = value;\r\n\t// setNativeValue(element, value);\r\n\t// const changeEvent = new Event('change', {bubbles: true});\r\n\t// const keypressEvent = new Event('keypress', {bubbles: true});\r\n\t// element.dispatchEvent(inputEvent);\r\n\t// element.dispatchEvent(changeEvent);\r\n\t// element.dispatchEvent(keypressEvent);\r\n}\r\n\r\nasync function simulateTypingTextarea(element, sequence, delay) {\r\n\treturn simulateTyping(putTextInTextarea, element, sequence, delay);\r\n} \r\n\r\nasync function simulateTypingInputElements(element, sequence, delay) {\r\n\treturn simulateTyping(setNativeValue, element, sequence, delay);\r\n}\r\n\r\nasync function simulateTyping(strategy, element, sequence, delay) {\r\n\tfor ( let i = 0; i < sequence.length; i++ ) {\r\n\t\tstrategy(element, sequence.slice(0, i+1));\r\n\t\telement.dispatchEvent(inputEvent);\r\n\t\tawait sleeper(delay);\r\n\t}\r\n}\r\n\r\nfunction clickElement(element) {\r\n\telement.click();\r\n}\r\n\r\nfunction putTextAtOnce(element, value) {\r\n\tsetNativeValue(element, value);\r\n\telement.dispatchEvent(inputEvent);\r\n}\r\n\r\nasync function runSequence(elementId, sequence, delay) {\r\n\tconst element = document.getElementById(elementId);\r\n\r\n\tlet strategy = null;\r\n\tswitch ( sequence.type ) {\r\n\t\tcase \"click\":\r\n\t\t\tstrategy = clickElement;\r\n\t\t\tsequence = null;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"instant\":\r\n\t\t\tstrategy = putTextAtOnce;\r\n\t\t\tsequence = sequence.value;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"textarea\":\r\n\t\t\tstrategy = simulateTypingTextarea;\r\n\t\t\tsequence = sequence.value;\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tstrategy = simulateTypingInputElements;\r\n\t}\r\n\r\n\telement.dispatchEvent(focusEvent);\r\n\telement.focus();\r\n\tawait sleeper(1000);\r\n\tawait strategy(element, sequence, delay);\r\n\tawait sleeper(delay * fieldBlurDelayMultiplier);\r\n\telement.dispatchEvent(blurEvent);\r\n}\r\n\r\nfunction setNativeValue(element, value) {\r\n\tconst valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\r\n\tconst prototype = Object.getPrototypeOf(element);\r\n\tconst prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, 'value').set;\r\n\r\n\tif ( valueSetter && valueSetter !== prototypeValueSetter ) {\r\n\t\tprototypeValueSetter.call(element, value);\r\n\t} else {\r\n\t\tvalueSetter.call(element, value);\r\n\t}\r\n}\r\n\r\n","import React from 'react';\r\nimport View from './Demo.view';\r\nimport { simulateFormFillIn } from './Demo.utils';\r\nimport { scrollIntoElement } from 'utils';\r\n\r\nconst Container = ({\r\n\tcaption\r\n}) => {\r\n\tconst onDemo = async () => {\r\n\t\tconst formData = {\r\n\t\t\t\"firstname\": \"Linus\",\r\n\t\t\t\"lastname\": \"Torvalds\",\r\n\t\t\t\"username\": \"linus-torvalds\",\r\n\t\t\t\"password\": \"linus-torvalds\",\r\n\t\t\t\"passwordConfirmation\": \"linus-torvalds\",\r\n\t\t\t\"email\": \"torvalds@linux.org\",\r\n\t\t\t\"newsletters\": {\r\n\t\t\t\ttype: \"click\"\r\n\t\t\t},\r\n\t\t\t\"phone\": \"+1 702-355-88-92\",\r\n\t\t\t\"birthdate\": {\r\n\t\t\t\ttype: \"instant\",\r\n\t\t\t\tvalue: \"1969-12-28\"\r\n\t\t\t},\r\n\t\t\t\"biography\": {\r\n\t\t\t\ttype: \"textarea\",\r\n\t\t\t\tvalue: \"That's interesting, how did you manage to make it do that?\"\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst delay = 100;\r\n\r\n\t\tawait simulateFormFillIn(formData, delay);\r\n\r\n\t\tconst submitButton = document.getElementById(\"SubmitButton\");\r\n\t\tsubmitButton.addEventListener('focus', scrollIntoElement);\r\n\t\tconst focusEvent = new Event('focus');\r\n\t\tsubmitButton.dispatchEvent(focusEvent);\r\n\t}\r\n\r\n\treturn pug`\r\n\t\tView(\r\n\t\t\tonClick=onDemo\r\n\t\t\tcaption=caption\r\n\t\t)\r\n\t`;\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FadeIn from 'react-fade-in';\r\nimport { Container, Row, Col, Card, CardTitle, CardText, Form, FormText, Alert } from 'reactstrap';\r\nimport './SignupForm.view.sass';\r\n\r\n// Form inputs\r\nimport Username from './Username';\r\nimport Password from './Password';\r\nimport PasswordConfirmation from './PasswordConfirmation';\r\nimport Email from './Email';\r\nimport Phone from './Phone';\r\nimport Birthdate from './Birthdate';\r\nimport Newsletters from './Newsletters';\r\nimport Biography from './Biography';\r\nimport PersonalInformationProcessing from './PersonalInformationProcessing';\r\nimport Photo from './Photo';\r\nimport Firstname from './Firstname';\r\nimport Lastname from './Lastname';\r\n\r\n// Other controls\r\nimport SubmitButton from './SubmitButton';\r\nimport ErrorDisplay from '../ErrorDisplay';\r\nimport Demo from './Demo';\r\n\r\nimport { defineMessages } from 'react-intl';\r\n\r\nconst messages = defineMessages({\r\n\tsignupFormTitle: \"Sign Up\",\r\n\tsignupFormHint: \"You need to provide some personal information. Please, fill in the form below\",\r\n\tfirstNameLabel: \"Given name\",\r\n\tlastNameLabel: \"Family name\",\r\n\tuserIdLabel: \"Username\",\r\n\tuserIdHint: \"User identifier. Has to be composed of lowercase latin letters and/or digits. Нyphen is allowed. Should start with a letter and end with a letter or a digit. Minimim - 5 symbols. For example, 'giant-66'\",\r\n\tpasswordLabel: \"Password\",\r\n\tpasswordHint: \"Only latin letters, digits and special characters (for example, :, ', >, <, =, +, ., &, %, $, #, @, !, *, ), (, -, ~, [, ], /, \\\\\\\\, \\\\{, \\\\}, _, ^). Minimum 8 characters. At least two character types should be used\",\r\n\tpasswordConfirmationLabel: \"Password confirmation\",\r\n\tpasswordConfirmationHint: \"Please, confirm the above entered password\",\r\n\temailLabel: \"Email\",\r\n\temailHint: \"We use the email for password restoration and critical notifications. No unnecessary newsletters\",\r\n\tnewslettersLabel: \"Newsletters\",\r\n\tnewslettersHint: \"Switch on if you want to keep up with us\",\r\n\tphoneLabel: \"Phone number\",\r\n\tphoneHint: \"Phone number in the following format: <country code> <number>, for example, +7 926-840-55-49. Minimum 5 characters\",\r\n\tbirthdateLabel: \"Birthdate\",\r\n\tbirthdateHint: \"Please, choose the date from the popup calendar\",\r\n\tbiographyLabel: \"Short biography\",\r\n\tphotoLabel: \"Photo\",\r\n\tphotoHint: \"PNG and JPEG files only. Maximum size - 5 MB\",\r\n\tpersonalInformationProcessingLabel: \"I give my consent to process my personal data\",\r\n\tpersonalInformationProcessingHint: \"According to Russia's federal law from 27/07/2006 number 152-FZ 'On personal data'\",\r\n\tsubmitButtonCaption: \"Sign up\",\r\n\tsubmitButtonInProgressCaption: \"Sending\",\r\n\tsignupErrorTitle: \"Sign up error\",\r\n\talreadySignedUp: \"Already signed up?\",\r\n\tloginLinkCaption: \"Log in\",\r\n\tsignupSuccessTitle: \"Signed up successfully!\",\r\n\tsignupSuccessMessage: \"You're registered. Please, log in to your account\",\r\n\tbtnDemoCaption: \"Demo\",\r\n});\r\n\r\nconst View = ({\r\n\tintl: { formatMessage }, onSubmit, isPending, externalError, isRegistered, onPopulateValidClick, onPopulateInvalidClick, steps, onFocus\r\n}) => pug`\r\n\t#SignupForm\r\n\t\tFadeIn(delay=500)\r\n\t\t\tContainer\r\n\t\t\t\tRow\r\n\t\t\t\t\tCol.mx-auto\r\n\t\t\t\t\t\tif ! isRegistered\r\n\t\t\t\t\t\t\tDemo(caption=formatMessage(messages.btnDemoCaption))\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tCard(body)\r\n\t\t\t\t\t\t\t\tCardTitle.mb-1 #{formatMessage(messages.signupFormTitle)}\r\n\r\n\t\t\t\t\t\t\t\tCardText.d-block.text-muted.mt-0.mb-5 #{formatMessage(messages.signupFormHint)}\r\n\r\n\t\t\t\t\t\t\t\tForm(onSubmit=onSubmit)\r\n\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\tCol(md=6).mb-5.mb-md-0\r\n\t\t\t\t\t\t\t\t\t\t\tFirstname(label=formatMessage(messages.firstNameLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\tCol(md=6 onFocus=onFocus)\r\n\t\t\t\t\t\t\t\t\t\t\tLastname(label=formatMessage(messages.lastNameLabel))\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[0])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tUsername(label=formatMessage(messages.userIdLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.userIdHint)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPassword(label=formatMessage(messages.passwordLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.passwordHint)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[1])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPasswordConfirmation(label=formatMessage(messages.passwordConfirmationLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.passwordConfirmationHint)}\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[2])\r\n\t\t\t\t\t\t\t\t\t\tRow#field-email\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tEmail(label=formatMessage(messages.emailLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.emailHint)}\r\n\r\n\t\t\t\t\t\t\t\t\t\tRow#field-newsletters\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tNewsletters(label=formatMessage(messages.newslettersLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.newslettersHint)} \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[3])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPhone(label=formatMessage(messages.phoneLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.phoneHint)}\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[4])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tBirthdate(label=formatMessage(messages.birthdateLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.birthdateHint)}\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[5])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol\r\n\t\t\t\t\t\t\t\t\t\t\t\tBiography(label=formatMessage(messages.biographyLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[6])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPhoto(label=formatMessage(messages.photoLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.photoHint)} \r\n\r\n\t\t\t\t\t\t\t\t\t\tRow#field-personal-information-processing\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPersonalInformationProcessing(label=formatMessage(messages.personalInformationProcessingLabel))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.personalInformationProcessingHint)}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t#SubmitButton\r\n\t\t\t\t\t\t\t\t\t\t\tSubmitButton.d-block.w-100(\r\n\t\t\t\t\t\t\t\t\t\t\t\tisPending=true\r\n\t\t\t\t\t\t\t\t\t\t\t\tcaption=formatMessage(messages.submitButtonCaption)\r\n\t\t\t\t\t\t\t\t\t\t\t\tinProgressCaption=formatMessage(messages.submitButtonInProgressCaption)\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps.showProceedButton)\r\n\t\t\t\t\t\t\t\t\t\t.proceedBtn &darr;\r\n\r\n\t\t\t\t\t\t\t\t\tif externalError\r\n\t\t\t\t\t\t\t\t\t\tErrorDisplay(title=formatMessage(messages.signupErrorTitle) errorMsg=externalError)\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tFormText.mt-3.float-right #{formatMessage(messages.alreadySignedUp)}\r\n\t\t\t\t\t\t\t\t\t\t| \r\n\t\t\t\t\t\t\t\t\t\tLink(to=\"/login/\") #{formatMessage(messages.loginLinkCaption)}\r\n\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\tCol(md=8 lg=6 xl=5).mx-auto\r\n\t\t\t\t\t\t\t\t\tAlert.p-5(color=\"primary\")\r\n\t\t\t\t\t\t\t\t\t\th4.alert-heading #{formatMessage(messages.signupSuccessTitle)}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tp #{formatMessage(messages.signupSuccessMessage)}\r\n\r\n\t\t\t\t\t\t\t\t\t\tLink.btn.btn-lg.btn-primary.w-100(to=\"/\") #{formatMessage(messages.loginLinkCaption)}\t\t\t\t\t\t\r\n`;\r\n\r\nexport default View;","import View from './SignupForm.view';\r\nimport { intlShape, injectIntl } from 'react-intl';\r\n\r\n// const Container = ({ intl: { formatMessage }, ...props }) => pug`\r\n// \tView(\r\n// \t\tformatMessage=formatMessage,\r\n// \t\t...props\r\n// \t)\r\n// `;\r\n\r\nView.propTypes = {\r\n\tintl: intlShape.isRequired\r\n}\r\n\r\nexport default injectIntl(View);\r\n\r\n","export const actionTypes = {\r\n\tFORM_SUBMIT: \t\t\t'FORM_SUBMIT',\r\n\tFORM_SUBMIT_RESPONSE: \t'FORM_SUBMIT_RESPONSE',\r\n\tFORM_SUBMIT_FAILURE: \t'FORM_SUBMIT_FAILURE',\r\n}\r\n\r\nexport const onSubmit = () => ({\r\n\ttype: actionTypes.FORM_SUBMIT\r\n});\r\n\r\nexport const onSubmitResponse = (response) => ({\r\n\ttype: actionTypes.FORM_SUBMIT_RESPONSE,\r\n\tresponse: response.data\r\n});\r\n\r\nexport const onSubmitFailure = (error) => ({\r\n\ttype: actionTypes.FORM_SUBMIT_FAILURE,\r\n\texternalError: error\r\n});\r\n","import { connect } from 'react-redux';\r\nimport Form from './SignupForm.container';\r\nimport { onSubmit } from './SignupForm.actions';\r\n\r\nfunction setVisibilityFilter(signupState) {\r\n\tlet filter = [];\r\n\tfor ( let i = 0; i < signupState.status.step; i++ ) {\r\n\t\tfilter.push('revealed');\r\n\t}\r\n\tconst currentKeyField = signupState.data[signupState.status.currentAwaitingKeyField];\r\n\tconst fieldValueIsProper = currentKeyField.validityStatus === \"PROPER_VALUE\";\r\n\tconst fieldIsNotPending = ! currentKeyField.isPending === true;\r\n\tconst fieldIsBeingEdited = ! currentKeyField.isTypingFinished;\r\n\r\n\tfilter.showProceedButton = fieldValueIsProper && fieldIsNotPending && fieldIsBeingEdited ? 'revealed' : '';\r\n\r\n\treturn filter;\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisPending: state.signup.status.isPending,\r\n\tisRegistered: state.signup.status.isRegistered,\r\n\texternalError: state.signup.status.externalError,\r\n\tsteps: setVisibilityFilter(state.signup)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tonSubmit: (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tdispatch(onSubmit());\r\n\t},\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import React from 'react';\r\nimport { Spinner } from 'reactstrap';\r\nimport './FullscreenSpinner.view.sass';\r\n\r\nconst View = ({\r\n\tcaption\r\n}) => pug`\r\n\t#FullscreenSpinner\r\n\t\tSpinner(size=\"lg\" color=\"primary\" type=\"grow\")\r\n\t\t.caption.w-100.text-center.text-primary #{caption}\r\n`;\r\n\r\nexport default View;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './LogoutButton.view.sass';\r\n\r\nconst View = ({\r\n\tonLogout, caption\r\n}) => pug`\r\n\t#LogoutButton\r\n\t\tButton(onClick=onLogout) #{caption}\r\n`;\r\n\r\nexport default View;","import { connect } from 'react-redux';\r\nimport View from './LogoutButton.view';\r\nimport { onLogout } from '../../Auth/Auth.actions';\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tonLogout: () => dispatch(onLogout())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(View);","import React from 'react';\r\nimport { Container, Row, Col, Card, CardTitle, CardText, CustomInput } from 'reactstrap';\r\nimport FadeIn from 'react-fade-in';\r\nimport FullscreenSpinner from 'components/FullscreenSpinner';\r\nimport LogoutButton from './LogoutButton';\r\nimport ErrorDisplay from '../ErrorDisplay';\r\nimport './Dashboard.view.sass';\r\nimport { injectIntl, defineMessages } from 'react-intl';\r\n\r\nconst messages = defineMessages({\r\n\tdataLoadingSpinnerMsg: \"Loading data...\",\r\n\tdataLoadingErrorTitle: \"Error loading profile data\",\r\n\tlogoutButtonCaption: \"Log out\",\r\n\tnewslettersStatusIndicatorLabel: \"Newsletters\",\r\n\tbiographyBlockTitle: \"Short biography\",\r\n\tbirthdate: \"{birthdate, date, medium} ({age, plural, offset: 1 =0 {infant} other {{age, number} years old}})\"\r\n});\r\n\r\nconst View = ({\r\n\tintl: { formatMessage }, data, isPending, externalError\r\n}) => pug`\r\n\t#Dashboard\r\n\t\tif isPending\r\n\t\t\tFullscreenSpinner(caption=formatMessage(messages.dataLoadingSpinnerMsg))\r\n\r\n\t\telse if externalError\r\n\t\t\tContainer\r\n\t\t\t\tRow\r\n\t\t\t\t\tCol(sm=8 xl=6).mx-auto\r\n\t\t\t\t\t\tErrorDisplay(title=formatMessage(messages.dataLoadingErrorTitle) errorMsg=externalError)\r\n\r\n\t\telse if data\r\n\t\t\tFadeIn(delay=500)\r\n\t\t\t\tContainer\r\n\t\t\t\t\tRow\r\n\t\t\t\t\t\tCol(md=6 lg=4)\r\n\t\t\t\t\t\t\t.photo.proportional.proportional-square\r\n\t\t\t\t\t\t\t\t.proportional-inner.rounded-circle\r\n\t\t\t\t\t\t\t\t\timg(src=data.photo)\r\n\r\n\t\t\t\t\t\t\tLogoutButton(caption=formatMessage(messages.logoutButtonCaption))\r\n\r\n\t\t\t\t\t\tCol(md=6 lg=4)\r\n\t\t\t\t\t\t\t.infoblock\r\n\t\t\t\t\t\t\t\tCard\r\n\t\t\t\t\t\t\t\t\tCardTitle #{data.firstname} #{data.lastname}\r\n\t\t\t\t\t\t\t\t\tCardText #{formatMessage(messages.birthdate, {birthdate: data.birthdate, age: data.age})}\r\n\r\n\t\t\t\t\t\t\t\tCard\r\n\t\t\t\t\t\t\t\t\tCardText #{data.phone}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tCard\r\n\t\t\t\t\t\t\t\t\tCardText #{data.email}\r\n\t\t\t\t\t\t\t\t\tdiv\r\n\t\t\t\t\t\t\t\t\t\tCustomInput(\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"switch\"\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultChecked=data.newsletters\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=formatMessage(messages.newslettersStatusIndicatorLabel))\r\n\r\n\t\t\t\t\t\tif data.biography\r\n\t\t\t\t\t\t\tCol(lg=4)\r\n\t\t\t\t\t\t\t\tCard.biography.infoblock\r\n\t\t\t\t\t\t\t\t\tCardTitle #{formatMessage(messages.biographyBlockTitle)}\r\n\t\t\t\t\t\t\t\t\tCardText #{data.biography}\r\n`;\r\n\r\nexport default injectIntl(View);","export function postProcessUserProfile(userProfileInfo) {\r\n\tuserProfileInfo.birthdate = new Date(userProfileInfo.birthdate);\r\n\tuserProfileInfo.age = calculateAge(userProfileInfo.birthdate);\r\n\treturn userProfileInfo;\r\n}\r\n\r\nfunction calculateAge(birthdate) {\r\n\tconst ageDiffMs = Date.now() - birthdate.getTime();\r\n\tconst ageDate = new Date(ageDiffMs);\r\n\treturn Math.abs(ageDate.getUTCFullYear() - 1970);\r\n}","import { connect } from 'react-redux';\r\nimport View from './Dashboard.view';\r\nimport { postProcessUserProfile } from './Dashboard.utils';\r\n\r\nconst mapStateToProps = (state) => {\r\n\tlet { data: userProfile, isPending, externalError } = state.userProfile;\r\n\tif ( userProfile ) {\r\n\t\tuserProfile = postProcessUserProfile(userProfile);\r\n\t}\r\n\treturn {\r\n\t\tdata: userProfile,\r\n\t\tisPending,\r\n\t\texternalError\r\n\t};\r\n}\r\n\r\nexport default connect(mapStateToProps)(View);","import { connect } from 'react-redux';\r\nimport Component from './Auth.container';\r\nimport { onAuthResponse } from './Auth.actions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\ttoken: state.auth.token\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tupdateReduxAuthState: (token) => {\r\n\t\tdispatch(onAuthResponse(token));\r\n\t}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","import { useEffect } from 'react';\r\n\r\nexport default ({\r\n\tisAuthenticated, token,\r\n\tupdateReduxAuthStatem\r\n}) => {\t\r\n\tuseEffect(() => {\r\n\t\tif ( isAuthenticated && token ) {\r\n\t\t\tlocalStorage.setItem('jwt', token);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlocalStorage.removeItem('jwt');\r\n\t\t}\r\n\t}, [isAuthenticated, token]);\r\n\r\n\treturn null;\r\n}","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './LocaleSwitcher.view.sass';\r\n\r\nconst View = ({\r\n\ttitle, switchTo, onClick\r\n}) => pug`\r\n\t#LocaleSwitcher\r\n\t\tButton(type=\"text\" value=switchTo, onClick=onClick) #{title}\r\n`;\r\n\r\nexport default View;","export const actionTypes = {\r\n\tSWITCH_LOCALE_REQUEST: \t\"SWITCH_LOCALE_REQUEST\",\r\n\tSWITCH_LOCALE_RESPONSE: \"SWITCH_LOCALE_RESPONSE\",\r\n\tSWITCH_LOCALE_FAILURE: \t\"SWITCH_LOCALE_FAILURE\"\r\n}\r\n\r\nexport const onSwitchLocaleRequest = (localeId) => ({\r\n\ttype: actionTypes.SWITCH_LOCALE_REQUEST,\r\n\tlocaleId\r\n});\r\n\r\nexport const onSwitchLocaleResponse = (data) => ({\r\n\ttype: actionTypes.SWITCH_LOCALE_RESPONSE,\r\n\tdata\r\n});\r\n\r\nexport const onSwitchLocaleFailure = (error) => ({\r\n\ttype: actionTypes.SWITCH_LOCALE_FAILURE,\r\n\terror\r\n});\r\n\r\nexport default {\r\n\tonSwitchLocaleRequest,\r\n\tonSwitchLocaleResponse,\r\n\tonSwitchLocaleFailure\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport View from \"./LocaleSwitcher.view\";\r\nimport { onSwitchLocaleRequest } from 'components/IntlProvider/IntlProvider.actions';\r\n\r\nconst mapStateToProps = state => {\r\n\tconst { locale } = state['i18n'];\r\n\treturn {\r\n\t\ttitle: locale === 'en' ? 'На русском' : 'Switch to English',\r\n\t\tswitchTo: locale === 'en' ? 'ru' : 'en'\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tonClick: (e) => dispatch(onSwitchLocaleRequest(e.target.value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(View);","import React from 'react';\nimport { defineMessages } from 'react-intl';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport LoginForm from \"components/LoginForm\";\nimport SignupForm from \"components/SignupForm\";\nimport Dashboard from \"components/Dashboard\";\nimport ErrorDisplay from 'components/ErrorDisplay';\nimport Auth from \"components/Auth\";\nimport LocaleSwitcher from \"components/LocaleSwitcher\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport FullscreenSpinner from 'components/FullscreenSpinner';\nimport './App.view.sass';\n\nconst messages = defineMessages({\n\tlocaleSwitchErrorTitle: \"Couldn't switch locale\"\n});\n\nconst AppView = ({\n\tintl,\n\tisAuthenticated,\n\tisLocaleSwitchPending,\n\tlocaleSwitchError,\n}) => pug`\n\tRouter\n\t\tAuth\n\n\t\tif isLocaleSwitchPending\n\t\t\tFullscreenSpinner\n\n\t\telse\n\t\t\t.localeSwitchWrapper\n\t\t\t\tContainer\n\t\t\t\t\tRow\n\t\t\t\t\t\tCol\n\t\t\t\t\t\t\tif localeSwitchError\n\t\t\t\t\t\t\t\tErrorDisplay(title=intl.formatMessage(messages.localeSwitchErrorTitle) errorMsg=localeSwitchError)\n\n\t\t\t\t\t\t\t.d-flex.justify-content-end\n\t\t\t\t\t\t\t\tLocaleSwitcher\n\n\t\t\tSwitch\n\t\t\t\tLoginRoute(exact=true path=\"/login/\" isAuthenticated=isAuthenticated)\n\n\t\t\t\tRoute(exact=true path=\"/signup/\" component=SignupForm)\n\t\t\t\t\n\t\t\t\tProtectedRoute(exact=true path=\"/dashboard/\" component=Dashboard isAuthenticated=isAuthenticated redirectTo=\"/\")\n\t\t\t\t\n\t\t\t\tDefaultRoute(isAuthenticated=isAuthenticated)\n`;\n\nexport default AppView;\n\nconst ProtectedRoute = ({\n\tcomponent: Component,\n\texact, path, isAuthenticated, redirectTo\n}) => {\n\tconst actualComponent = isAuthenticated\n\t\t? () => pug`Component()`\n\t\t: () => pug`Redirect(to=redirectTo)`;\n\treturn pug`\n\t\tRoute(exact=exact path=path render=actualComponent)\n\t`\n};\n\nconst DefaultRoute = ({isAuthenticated}) => {\n\tconst actualComponent = isAuthenticated\n\t\t? () => pug`Redirect(to=\"/dashboard\")`\n\t\t: () => pug`Redirect(to=\"/login\")`;\n\treturn pug`\n\t\tRoute(exact=true path=\"/\" render=actualComponent)\n\t`;\n}\n\nconst LoginRoute = ({\n\tisAuthenticated, exact, path\n}) => {\n\tconst actualComponent = isAuthenticated\n\t\t? () => pug`Redirect(to=\"/dashboard\")`\n\t\t: () => pug`LoginForm`;\n\treturn pug`\n\t\tRoute(exact=exact path=path render=actualComponent)\n\t`;\n}","import React, { useEffect } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport View from './App.view';\r\n\r\nconst Container = ({\r\n\tisAuthenticated,\r\n\tisLocaleSwitchPending,\r\n\tlocaleSwitchError,\r\n\tfetchUserProfile,\r\n\tintl,\r\n\tlogicMiddleware\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tif ( isAuthenticated ) {\r\n\t\t\tfetchUserProfile();\r\n\t\t}\r\n\t}, [isAuthenticated, fetchUserProfile]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tlogicMiddleware.addDeps({ intl });\r\n\t\t}\r\n\t\tcatch (e) {}\r\n\t}, [intl, logicMiddleware]);\r\n\t\r\n\treturn pug`\r\n\t\tView(\r\n\t\t\tisAuthenticated=isAuthenticated\r\n\t\t\tisLocaleSwitchPending=isLocaleSwitchPending\r\n\t\t\tlocaleSwitchError=localeSwitchError\r\n\t\t\tintl=intl\r\n\t\t)\r\n\t`;\r\n}\r\n\r\nexport default injectIntl(Container);","export const actionTypes = {\r\n\t'DATA_FETCH_REQUEST': 'DATA_FETCH_REQUEST',\r\n\t'DATA_FETCH_RESPONSE': 'DATA_FETCH_RESPONSE',\r\n\t'DATA_FETCH_FAILURE': 'DATA_FETCH_FAILURE',\r\n}\r\n\r\nexport const onDataFetchRequest = () => ({\r\n\ttype: actionTypes.DATA_FETCH_REQUEST,\r\n});\r\n\r\nexport const onDataFetchResponse = (data) => ({\r\n\ttype: actionTypes.DATA_FETCH_RESPONSE,\r\n\tdata\r\n});\r\n\r\nexport const onDataFetchFailure = (error) => ({\r\n\ttype: actionTypes.DATA_FETCH_FAILURE,\r\n\terror\r\n});","import { connect } from 'react-redux';\r\nimport Component from './App.container';\r\nimport { onDataFetchRequest } from './App.actions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\tisLocaleSwitchPending: state.i18n.isPending,\r\n\tlocaleSwitchError: state.i18n.error,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tfetchUserProfile: () => {\r\n\t\tdispatch(onDataFetchRequest());\r\n\t}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createLogic } from 'redux-logic';\r\nimport { actionTypes, onAuthResponse, onAuthFailure } from './Auth.actions';\r\nimport axios from 'axios';\r\nimport { sleeper, ajaxErrorParser } from 'utils.js';\r\n\r\nconst authLogic = createLogic({\r\n\ttype: actionTypes.AUTH_REQUEST,\r\n\tprocessOptions: {\r\n\t\tsuccessType: \tonAuthResponse,\r\n\t\tfailType: \t\tonAuthFailure\r\n\t},\r\n\tasync process({ action, intl }) {\t\t\r\n\t\tawait sleeper(1000);\r\n\t\treturn axios({\r\n\t\t\t\turl: \"/api/auth\",\r\n\t\t\t\tparams: action.data\t\t\t\r\n\t\t\t})\r\n\t\t\t.then( (response) => response.data.data )\r\n\t\t\t.catch( (error) => Promise.reject(ajaxErrorParser(error, intl)));\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tauthLogic\r\n];","import { createLogic } from 'redux-logic';\r\nimport { actionTypes, onSwitchLocaleResponse, onSwitchLocaleFailure } from './IntlProvider.actions';\r\nimport { sleeper, ajaxErrorParser, fetchStoredMessages } from 'utils';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\n\r\n\r\n\r\nconst localeSwitchLogic = createLogic({\r\n\ttype: actionTypes.SWITCH_LOCALE_REQUEST,\r\n\tvalidate({ action }, allow, reject) {\r\n\t\t// For English we just alter the locale value in cookies;\r\n\t\t// default messages will be used and locale data is built-in \r\n\t\tif ( action.localeId === 'en' ) {\r\n\t\t\tcookie.set('locale', 'en');\r\n\t\t\tlocalStorage.removeItem('locale');\r\n\t\t\treturn reject(onSwitchLocaleResponse({ locale: 'en' }));\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Also, check if messages are already stored locally\r\n\t\t\tconst messages = fetchStoredMessages(action.localeId);\r\n\t\t\tif ( messages ) {\r\n\t\t\t\tcookie.set('locale', action.localeId);\r\n\t\t\t\treturn reject(onSwitchLocaleResponse({ locale: action.localeId, messages }));\r\n\t\t\t}\r\n\t\t}\r\n\t\tallow(action);\r\n\t},\r\n\tprocessOptions: {\r\n\t\tsuccessType: \tonSwitchLocaleResponse,\r\n\t\tfailType: \t\tonSwitchLocaleFailure\r\n\t},\r\n\tasync process({ action }) {\r\n\t\tawait sleeper(1000);\r\n\t\treturn axios({\r\n\t\t\t\turl: \"/api/get-locale\",\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tid: action.localeId\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then( async (response) => {\r\n\t\t\t\tconst data = response.data.data;\r\n\t\t\t\tconst serializedLocale = JSON.stringify(data);\r\n\t\t\t\tlocalStorage.setItem('locale', serializedLocale);\r\n\t\t\t\treturn Promise.resolve(data);\r\n\t\t\t})\r\n\t\t\t.catch( error => Promise.reject(ajaxErrorParser(error)) );\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tlocaleSwitchLogic,\r\n];","export const actionTypes = {\r\n\tREQUEST_APPROVAL: \t\t\t'REQUEST_APPROVAL',\r\n\tRESPONSE_APPROVAL: \t\t\t'RESPONSE_APPROVAL',\r\n\tRESPONSE_APPROVAL_ERROR: \t'RESPONSE_APPROVAL_ERROR'\r\n}\r\n\r\nexport function getActions(fieldName) {\r\n\tconst requestApproval = () => ({\r\n\t\ttype: actionTypes.REQUEST_APPROVAL,\r\n\t\tfieldName\r\n\t});\r\n\r\n\tconst responseApproval = response => ({\r\n\t\ttype: actionTypes.RESPONSE_APPROVAL,\r\n\t\tfieldName,\r\n\t\tresponse\r\n\t});\r\n\r\n\tconst responseApprovalError = errorMsg => ({\r\n\t\ttype: actionTypes.RESPONSE_APPROVAL_ERROR,\r\n\t\tfieldName,\r\n\t\texternalError: errorMsg\r\n\t});\r\n\r\n\treturn {\r\n\t\trequestApproval,\r\n\t\tresponseApproval,\r\n\t\tresponseApprovalError,\r\n\t}\r\n}","import { createLogic } from 'redux-logic';\r\nimport { PROPER_VALUE } from '../ValidateableInput/ValidateableInput.factory';\r\nimport { getActions } from './ApprovableInput.actions';\r\nimport { actionTypes as validateableInputActionTypes } from '../ValidateableInput/ValidateableInput.actions';\r\nimport axios from 'axios';\r\nimport { sleeper, ajaxErrorParser } from 'utils';\r\n\r\nconst fieldApprovalLogic = createLogic({\r\n\ttype: validateableInputActionTypes.FIELD_EDITED,\r\n\tvalidate({ getState, action, ctx }, allow, reject) {\r\n\t\t// only apply the logic for the following fields\r\n\t\tconst approvableFields = [\r\n\t\t\t'username',\r\n\t\t\t'email',\r\n\t\t\t'phone',\r\n\t\t];\r\n\t\tconst fieldName = action.fieldName;\r\n\t\tif ( ! approvableFields.some( field => field === fieldName ) ) {\r\n\t\t\treturn reject(action);\r\n\t\t}\r\n\t\tconst state = getState();\r\n\t\t// Так как Redux изначально не имеет представления о составе полей,\r\n\t\t// он не может инициализирвоать поле [fieldName] в хранилище\r\n\t\t// (состав полей определяется во время выполнения),\r\n\t\t// мы должны \"подложить\" {} на случай, если поле будет проверяться\r\n\t\t// после расфокусировки соотвествующего input'a с пустым значением,\r\n\t\t// когда хранилище ещё ничего о нём не знает \r\n\t\tconst { validityStatus, value } = state.signup.data[fieldName];\r\n\t\t// если поле правильно заполнено\r\n\t\tif ( validityStatus === PROPER_VALUE ) {\r\n\t\t\t// имя поля \"зашито\" в action creator'ах\r\n\t\t\t// поэтому мы получаем их здесь и передаём в process через контекст ctx\r\n\t\t\tconst { requestApproval, responseApproval, responseApprovalError } = getActions(fieldName);\r\n\t\t\tObject.assign(ctx, { requestApproval, responseApproval, responseApprovalError, fieldName, value });\r\n\t\t\t// разрешаем обработку в process и передаём action далее по конвейеру\r\n\t\t\tallow(action);\r\n\t\t}\r\n\t\telse reject(action); // мимо process, в следующее middleware\r\n\t},\r\n\tprocess({ ctx, intl }, dispatch, done) {\r\n\t\tdispatch(ctx.requestApproval());\r\n\t\tconst config = {\r\n\t\t\turl: \"/api/check-uniqueness\",\r\n\t\t\tparams: {\r\n\t\t\t\tname: ctx.fieldName,\r\n\t\t\t\tvalue: ctx.value\r\n\t\t\t}\r\n\t\t};\r\n\t\tsleeper(1000)\r\n\t\t\t.then( () => axios(config) )\r\n\t\t\t.then(response => dispatch(ctx.responseApproval(response.data)))\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconst err = ajaxErrorParser(error, intl); \r\n\t\t\t\tdispatch(ctx.responseApprovalError(err));\r\n\t\t\t})\r\n\t\t\t.then(() => done());\r\n\t}\r\n});\r\n\r\nexport default fieldApprovalLogic;","import { createLogic } from 'redux-logic';\r\nimport { PROPER_VALUE } from '../ValidateableInput/ValidateableInput.factory';\r\nimport { statusCodes } from './PasswordConfirmation.container';\r\nimport { passwordsCheckedAction, passwordValidityError } from './PasswordConfirmation.actions';\r\nimport { actionTypes as validateableInputActionTypes, getActions } from '../ValidateableInput/ValidateableInput.actions';\r\n\r\nconst comparePasswordsOnFinishedEditing = createLogic({\r\n\ttype: validateableInputActionTypes.FIELD_EDITED,\r\n\tvalidate({ getState, action }, allow, reject) {\r\n\t\tif ( action.fieldName === 'passwordConfirmation' ) {\r\n\t\t\t// оставляем в покое пустое поле\r\n\t\t\tconst { value } = getState().signup.data['passwordConfirmation'] || {};\r\n\t\t\tif ( value && value.length ) {\r\n\t\t\t\tallow(action);\r\n\t\t\t}\r\n\t\t}\r\n\t\treject(action);\r\n\t},\r\n\t// processOptions: {\r\n\t// \tsuccessType: \tpasswordsCheckedAction,\r\n\t// \tfailType: \t\tpasswordValidityError\r\n\t// },\r\n\tprocess({ getState, action }) {\r\n\t\tconst state = getState();\r\n\t\t// Так как Redux изначально не имеет представления о составе полей,\r\n\t\t// он не может инициализирвоать поле [fieldName] в хранилище\r\n\t\t// (состав полей определяется во время выполнения),\r\n\t\t// мы должны \"подложить\" {} на случай, если поле будет проверяться\r\n\t\t// после расфокусировки соотвествующего input'a с пустым значением,\r\n\t\t// когда хранилище ещё ничего о нём не знает \r\n\t\tconst { validityStatus: passwordValidityStatus, value: passwordValue } = state.signup.data['password'] || {};\r\n\t\tconst { validityStatus: passwordConfirmationValidityStatus, value: passwordConfirmationValue } = state.signup.data['passwordConfirmation'] || {};\r\n\t\t// если поле пароля правильно заполнено\r\n\t\tif \t(\r\n\t\t\t\tpasswordValidityStatus === PROPER_VALUE \r\n\t\t\t\t&&\r\n\t\t\t\tpasswordConfirmationValidityStatus === PROPER_VALUE\r\n\t\t\t) {\r\n\t\t\tconst areEqual = passwordValue === passwordConfirmationValue;\r\n\t\t\treturn passwordsCheckedAction(areEqual);\r\n\t\t}\r\n\t\telse return passwordValidityError();\r\n\t}\r\n});\r\n\r\nconst clearFieldOnPasswordChange = createLogic({\r\n\ttype: validateableInputActionTypes.VALUE_CHANGED,\r\n\tvalidate({ getState, action }, allow, reject) {\r\n\t\taction.fieldName === 'password'\r\n\t\t\t? allow(action)\r\n\t\t\t: reject(action);\r\n\t},\r\n\tprocess({ getState, action }, dispatch, done) {\r\n\t\tconst { onChange } = getActions('passwordConfirmation');\r\n\t\tdispatch(onChange('', statusCodes.E_EMPTY));\r\n\t\tdone();\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tcomparePasswordsOnFinishedEditing,\r\n\tclearFieldOnPasswordChange\r\n];","export const PASSWORDS_CHECKED \t\t= 'PASSWORDS_CHECKED';\r\nexport const E_PASSWORD_NOT_VALID \t= 'E_PASSWORD_NOT_VALID';\r\n\r\nconst passwordsCheckedAction = areEqual => ({\r\n\ttype: PASSWORDS_CHECKED,\r\n\tareEqual\r\n});\r\n\r\nconst passwordValidityError = () => ({\r\n\ttype: E_PASSWORD_NOT_VALID\r\n});\r\n\r\nexport {\r\n\tpasswordsCheckedAction,\r\n\tpasswordValidityError\r\n}","import { sha256 } from 'js-sha256';\r\n\r\nexport function exractFormData(originalFormData) {\r\n\tconst fields = [\r\n\t\t'username',\r\n\t\t'email',\r\n\t\t'phone',\r\n\t\t'newsletters',\r\n\t\t'birthdate',\r\n\t\t'biography',\r\n\t\t'firstname',\r\n\t\t'lastname'\r\n\t];\r\n\tlet refinedFormData = new FormData();\r\n\tfields.every( item => {\r\n\t\trefinedFormData.set(item, originalFormData[item].value);\r\n\t\treturn true;\r\n\t});\r\n\trefinedFormData.set('password', sha256(originalFormData['password'].value));\r\n\tconst photo = originalFormData['photo'].value;\r\n\tif ( photo ) {\r\n\t\trefinedFormData.append('photo', photo);\r\n\t}\r\n\r\n\treturn refinedFormData;\r\n}","import fieldApprovalLogic from './ApprovableInput/ApprovableInput.logic';\r\nimport passwordConfirmationLogic from './PasswordConfirmation/PasswordConfirmation.logic';\r\n\r\nimport { createLogic } from 'redux-logic';\r\nimport { actionTypes, onSubmitResponse, onSubmitFailure } from './SignupForm.actions';\r\nimport axios from 'axios';\r\nimport { exractFormData } from './SignupForm.utils';\r\nimport { sleeper, ajaxErrorParser } from 'utils';\r\n\r\nconst formSubmissionLogic = createLogic({\r\n\ttype: actionTypes.FORM_SUBMIT,\r\n\tprocessOptions: {\r\n\t\tsuccessType: \tonSubmitResponse,\r\n\t\tfailType: \t\tonSubmitFailure\r\n\t},\r\n\tasync process({ getState }) {\r\n\t\tconst data = exractFormData(getState().signup.data);\r\n\t\tawait sleeper(1000);\r\n\t\treturn axios({\r\n\t\t\t\tmethod: \"post\",\r\n\t\t\t\turl: \"/api/put-user-profile\",\r\n\t\t\t\tdata,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\r\n\t\t\t\t},\r\n\t\t\t\ttimeout: 5000\r\n\t\t\t})\r\n\t\t\t.catch( error => Promise.reject(ajaxErrorParser(error)) );\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tformSubmissionLogic,\r\n\tfieldApprovalLogic,\r\n\t...passwordConfirmationLogic\r\n];","import { createLogic } from 'redux-logic';\r\nimport { actionTypes, onDataFetchResponse, onDataFetchFailure } from './App.actions';\r\nimport { sleeper, ajaxErrorParser } from 'utils';\r\nimport { defineMessages } from 'react-intl';\r\nimport axios from 'axios';\r\n\r\nconst messages = defineMessages({\r\n\tnotAuthorizedException: \"Not authorized. Probably due to an application error. Try logging in again\"\r\n});\r\n\r\nconst dataFetchLogic = createLogic({\r\n\ttype: actionTypes.DATA_FETCH_REQUEST,\r\n\tprocessOptions: {\r\n\t\tsuccessType: \tonDataFetchResponse,\r\n\t\tfailType: \t\tonDataFetchFailure\r\n\t},\r\n\tasync process({ action, getState, intl }) {\r\n\t\tconst { token } = getState().auth;\r\n\t\tif ( ! token ) {\r\n\t\t\treturn Promise.reject(intl.formatMessage(messages.notAuthorizedException));\r\n\t\t}\r\n\t\tawait sleeper(3000);\r\n\t\treturn axios({\r\n\t\t\t\turl: \"/api/get-user-profile\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `Bearer ${token}`\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then( response => response.data.data )\r\n\t\t\t.catch( error => Promise.reject(ajaxErrorParser(error)) );\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tdataFetchLogic,\r\n];","import authLogic from 'components/Auth/Auth.logic';\r\nimport switchLocaleLogic from 'components/IntlProvider/IntlProvider.logic';\r\nimport signupFormLogic from 'components/SignupForm/SignupForm.logic';\r\nimport dataFetchLogic from 'components/App/App.logic';\r\n\r\nexport default [\r\n\t...authLogic,\r\n\t...switchLocaleLogic,\r\n\t...signupFormLogic,\r\n\t...dataFetchLogic,\r\n];","import { createLogicMiddleware } from 'redux-logic';\r\nimport logic from './rootLogic';\r\n\r\nconst deps = {};\r\nconst logicMiddleware = createLogicMiddleware(logic, deps);\r\nlogicMiddleware.monitor$.subscribe(\r\n\tx => console.log(x)\r\n);\r\n\r\n\r\nexport default logicMiddleware;","import { actionTypes } from './IntlProvider.actions'; \r\n\r\nconst initialState = {\r\n\tlocale: 'en',\r\n\tmessages: null,\r\n\tisPending: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.SWITCH_LOCALE_REQUEST:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: true\r\n\t\t\t}\r\n\t\tcase actionTypes.SWITCH_LOCALE_RESPONSE:\r\n\t\t\treturn {\r\n\t\t\t\t...action.data,\r\n\t\t\t\tisPending: false\r\n\t\t\t}\r\n\t\tcase actionTypes.SWITCH_LOCALE_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\terror: action.error\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { actionTypes } from './Auth.actions';\r\n\r\nconst auth = (state = {\r\n\tisAuthenticated: !!localStorage.getItem('jwt'),\r\n\ttoken: localStorage.getItem('jwt')\r\n}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.AUTH_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: true\r\n\t\t\t}\r\n\t\tcase actionTypes.AUTH_RESPONSE:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase actionTypes.AUTH_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisAuthenticated: undefined,\r\n\t\t\t\texternalError: action.error,\r\n\t\t\t\ttoken: undefined\r\n\t\t\t}\r\n\t\tcase actionTypes.AUTH_LOGOUT:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisAuthenticated: false\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth;","import { actionTypes } from './ApprovableInput.actions';\r\n\r\n\r\nconst fieldData = (state = {}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.REQUEST_APPROVAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: true\r\n\t\t\t}\r\n\t\tcase actionTypes.RESPONSE_APPROVAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisApproved: action.response.status === 'APPROVED'\r\n\t\t\t}\r\n\t\tcase actionTypes.RESPONSE_APPROVAL_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisApproved: undefined,\r\n\t\t\t\texternalError: action.externalError\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\t\t\r\n\t}\r\n}\r\n\r\nconst data = (state = {}, action) => {\r\n\tif ( !action.fieldName ) return state;\r\n\treturn {\r\n\t\t...state,\r\n\t\t[action.fieldName]: fieldData(state[action.fieldName], action)\r\n\t}\t\r\n}\r\n\r\nexport default data;","import { actionTypes } from './ValidateableInput.actions';\r\n\r\nconst fieldData = (state = {}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.VALUE_CHANGED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisTypingFinished: false,\r\n\t\t\t\tvalue: action.value,\r\n\t\t\t\tvalidityStatus: action.validityStatus,\r\n\t\t\t\tisApproved: undefined,\r\n\t\t\t\texternalError: ''\r\n\t\t\t}\r\n\t\tcase actionTypes.FIELD_EDITED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisTypingFinished: true\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\t\t\r\n\t}\r\n}\r\n\r\nconst data = (state = {}, action) => {\r\n\tif ( !action.fieldName ) return state;\r\n\treturn {\r\n\t\t...state,\r\n\t\t[action.fieldName]: fieldData(state[action.fieldName], action)\r\n\t}\t\r\n}\r\n\r\nexport default data;","import reduceReducers from 'reduce-reducers';\r\nimport { combineReducers } from 'redux';\r\nimport formStateValid from 'formStateValid.json';\r\nimport formStateInvalid from 'formStateInvalid.json';\r\n\r\nimport approvable from './ApprovableInput/ApprovableInput.reducer';\r\nimport validateable from './ValidateableInput/ValidateableInput.reducer';\r\nimport passwordConfirmation from './PasswordConfirmation/PasswordConfirmation.reducer';\r\n\r\nimport { actionTypes } from './SignupForm.actions';\r\nimport { actionTypes as inputActionTypes } from './ValidateableInput/ValidateableInput.actions';\r\n\r\nconst status = (state = {}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.FORM_SUBMIT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: true,\r\n\t\t\t\texternalError: undefined\r\n\t\t\t}\r\n\t\tcase actionTypes.FORM_SUBMIT_RESPONSE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisRegistered: action.response.status === 'SUCCESS'\r\n\t\t\t}\r\n\t\tcase actionTypes.FORM_SUBMIT_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisRegistered: undefined,\r\n\t\t\t\texternalError: action.externalError\r\n\t\t\t}\r\n\t\tcase inputActionTypes.FIELD_EDITED:\r\n\t\t\tconst keyFields = \"lastname password passwordConfirmation email phone birthdate biography\".split(\" \");\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texternalError: undefined,\r\n\r\n\t\t\t\tcurrentAwaitingKeyField: ((previousValue) => {\r\n\t\t\t\t\tlet fieldNameIndex = keyFields.indexOf(action.fieldName);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Skip if the field is not a key field\r\n\t\t\t\t\tif ( ! ~ fieldNameIndex )\r\n\t\t\t\t\t\treturn previousValue;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Also skip if it's not the farthest\r\n\t\t\t\t\tif ( fieldNameIndex < keyFields.indexOf(previousValue) )\r\n\t\t\t\t\t\treturn previousValue;\r\n\r\n\t\t\t\t\t// If last edited key field is the final, return it\r\n\t\t\t\t\tif ( fieldNameIndex >= keyFields.length - 1 )\r\n\t\t\t\t\t\treturn action.fieldName;\r\n\r\n\t\t\t\t\t// Next key field in the list\r\n\t\t\t\t\treturn keyFields[fieldNameIndex + 1];\r\n\r\n\t\t\t\t})(state.currentAwaitingKeyField),\r\n\r\n\t\t\t\t// To determine the current step we check action.fieldName against an array of key fields\r\n\t\t\t\t// Step counter can only be increased, not the other way\r\n\t\t\t\tstep: keyFields.reduce( (previousValue, fieldName, index) => {\r\n\t\t\t\t\t\tif ( previousValue > index ) return previousValue;\r\n\t\t\t\t\t\treturn fieldName === action.fieldName\r\n\t\t\t\t\t\t\t? index + 1\r\n\t\t\t\t\t\t\t: previousValue\r\n\t\t\t\t\t}, state.step),\r\n\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\t\t\r\n\t}\r\n}\r\n\r\nconst data = reduceReducers(approvable, validateable, passwordConfirmation);\r\n\r\nconst signup = combineReducers({\r\n\tstatus,\r\n\tdata\r\n});\r\n\r\nconst formPopulate = (state = {}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.FORM_POPULATE_VALID:\r\n\t\t\treturn { ...formStateValid };\r\n\r\n\t\tcase actionTypes.FORM_POPULATE_INVALID:\r\n\t\t\treturn { ...formStateInvalid };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default reduceReducers(signup, formPopulate); ","import { PASSWORDS_CHECKED, E_PASSWORD_NOT_VALID } from './PasswordConfirmation.actions';\r\nimport { statusCodes } from './PasswordConfirmation.container';\r\nimport { PROPER_VALUE } from '../ValidateableInput/ValidateableInput.factory';\r\n\r\nexport default (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PASSWORDS_CHECKED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpasswordConfirmation: {\r\n\t\t\t\t\t...state.passwordConfirmation,\r\n\t\t\t\t\tisValid: action.areEqual,\r\n\t\t\t\t\tvalidityStatus: action.areEqual ? PROPER_VALUE : statusCodes.E_PASSWORDS_MISMATCH\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tcase E_PASSWORD_NOT_VALID:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpasswordConfirmation: {\r\n\t\t\t\t\t...state.passwordConfirmation,\r\n\t\t\t\t\tisValid: undefined,\r\n\t\t\t\t\tvalidityStatus: statusCodes.E_PASSWORD_NOT_VALID\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import { actionTypes } from './App.actions';\r\n\r\nconst userProfile = (state = {\r\n\tisPending: false,\r\n\tdata: undefined\r\n}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.DATA_FETCH_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: true,\r\n\t\t\t\tdata: undefined\r\n\t\t\t}\r\n\t\tcase actionTypes.DATA_FETCH_RESPONSE:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tdata: action.data\r\n\t\t\t}\r\n\t\tcase actionTypes.DATA_FETCH_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\texternalError: action.error,\r\n\t\t\t\tdata: undefined\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default userProfile;","import { combineReducers } from 'redux';\r\n\r\nimport i18n from './components/IntlProvider/IntlProvider.reducers';\r\nimport auth from './components/Auth/Auth.reducers';\r\nimport signup from './components/SignupForm/SignupForm.reducers';\r\nimport userProfile from './components/App/App.reducers';\r\n\r\nexport default combineReducers({\r\n\ti18n,\r\n\tauth,\r\n\tsignup,\r\n\tuserProfile,\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore(initialState, middleware) {\r\n\tmiddleware = applyMiddleware(middleware);\r\n\tmiddleware = composeEnhancers(middleware);\r\n\tconst store = createStore(rootReducer, initialState, middleware);\r\n\treturn store;\r\n}","import { IntlProvider } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport default connect(\r\n  // Connect React Intl with Redux to inject current locale data\r\n  ({ i18n }) => ({ ...i18n, key: i18n.locale })\r\n)(IntlProvider);","import 'sass/index.sass';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\nimport logicMiddleware from 'configureLogic';\nimport configureStore from 'configureStore';\nimport IntlProvider from 'components/IntlProvider';\nimport { addLocaleData } from 'react-intl';\nimport ru from 'react-intl/locale-data/ru';\nimport { hydrate } from 'utils';\nimport externalState from 'initialState.json';\n\n// Adding localization functions for different languages\naddLocaleData(ru);\n\n// Hydrate the app with the data stored locally\nconst initialState = hydrate(externalState);\n\n\nconst store = configureStore(initialState, logicMiddleware);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<IntlProvider>\n\t\t\t<App logicMiddleware={logicMiddleware} />\n\t\t</IntlProvider>\n\t</Provider>,\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}