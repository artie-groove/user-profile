{"version":3,"sources":["components/SubmitButton/SubmitButton.view.js","components/ErrorDisplay/ErrorDisplay.view.js","components/LoginForm/LoginForm.view.js","components/LoginForm/LoginForm.container.js","components/Auth/Auth.actions.js","components/LoginForm/LoginForm.redux.js","components/SignupForm/ValidateableInput/ValidateableInput.actions.js","components/SignupForm/ValidateableInput/ValidateableInput.view.js","components/SignupForm/ValidateableInput/ValidateableInput.utils.js","components/SignupForm/ValidateableInput/ValidateableInput.inputs.js","components/SignupForm/ValidateableInput/ValidateableInput.factory.js","components/SignupForm/ApprovableInput/ApprovableInput.view.js","components/SignupForm/ApprovableInput/ApprovableInput.factory.js","components/SignupForm/Username/Username.container.js","components/SignupForm/Username/Username.validator.js","components/SignupForm/Password/Password.container.js","components/SignupForm/Password/Password.validator.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.container.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.validator.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.redux.js","components/SignupForm/Email/Email.container.js","components/SignupForm/Email/Email.validator.js","components/SignupForm/Phone/Phone.container.js","components/SignupForm/Phone/Phone.validator.js","components/SignupForm/Birthdate/Birthdate.container.js","components/SignupForm/Birthdate/Birthdate.validator.js","components/SignupForm/Newsletters/Newsletters.container.js","components/SignupForm/Biography/Biography.container.js","components/SignupForm/Biography/Biography.validator.js","components/SignupForm/PersonalInformationProcessing/PersonalInformationProcessing.container.js","components/SignupForm/PersonalInformationProcessing/PersonalInformationProcessing.validator.js","components/SignupForm/Photo/Photo.view.js","components/SignupForm/Photo/Photo.container.js","components/SignupForm/Photo/Photo.redux.js","components/SignupForm/Photo/Photo.validator.js","components/SignupForm/Firstname/Firstname.container.js","components/SignupForm/Firstname/Firstname.validator.js","components/SignupForm/Lastname/Lastname.container.js","components/SignupForm/Lastname/Lastname.validator.js","components/SignupForm/SubmitButton/SubmitButton.redux.js","components/SignupForm/Demo/Demo.view.js","utils.js","components/SignupForm/Demo/Demo.utils.js","components/SignupForm/Demo/Demo.container.js","components/SignupForm/SignupForm.view.js","components/SignupForm/SignupForm.container.js","components/SignupForm/SignupForm.actions.js","components/SignupForm/SignupForm.redux.js","components/FullscreenSpinner/FullscreenSpinner.view.js","components/Dashboard/LogoutButton/LogoutButton.view.js","components/Dashboard/LogoutButton/LogoutButton.redux.js","components/Dashboard/Dashboard.view.js","components/Dashboard/Dashboard.utils.js","components/Dashboard/Dashboard.redux.js","components/Auth/Auth.redux.js","components/Auth/Auth.container.js","components/LocaleSwitcher/LocaleSwitcher.view.js","components/IntlProvider/IntlProvider.actions.js","components/LocaleSwitcher/LocaleSwitcher.redux.js","components/App/App.view.js","components/App/App.container.js","components/App/App.actions.js","components/App/App.redux.js","serviceWorker.js","components/Auth/Auth.logic.js","components/IntlProvider/IntlProvider.logic.js","components/SignupForm/ApprovableInput/ApprovableInput.actions.js","components/SignupForm/ApprovableInput/ApprovableInput.logic.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.logic.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.actions.js","components/SignupForm/SignupForm.utils.js","components/SignupForm/SignupForm.logic.js","components/App/App.logic.js","logic.js","configureLogic.js","components/IntlProvider/IntlProvider.reducers.js","components/Auth/Auth.reducers.js","components/SignupForm/ApprovableInput/ApprovableInput.reducer.js","components/SignupForm/ValidateableInput/ValidateableInput.reducer.js","components/SignupForm/SignupForm.reducers.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.reducer.js","components/App/App.reducers.js","reducers.js","configureStore.js","components/IntlProvider/IntlProvider.redux.js","index.js"],"names":["SubmitButton_SubmitButton_view","_ref","disabled","className","isPending","inProgressCaption","caption","react_default","a","createElement","Button","type","size","color","Fragment","Spinner","View","title","errorMsg","Alert","messages","defineMessages","formTitle","id","defaultMessage","formHint","usernameLabel","passwordLabel","submitButtonCaption","submitButtonInProgressCaption","authErrorTitle","msgNoAccountQuestion","signupLinkCaption","injectIntl","formatMessage","intl","externalError","isAuthenticated","onSubmit","onChange","lib_default","delay","es_Container","Row","Col","Card","body","CardTitle","LoginForm_view_messages","CardText","Form","FormGroup","Label","htmlFor","Input","name","defaultValue","ErrorDisplay_ErrorDisplay_view","FormText","react_router_dom","to","actionTypes","onAuthResponse","token","onLogout","connect","state","auth","dispatch","event","preventDefault","form","target","credentials","username","elements","value","password","sha256","data","fieldName","validityStatus","onBlur","getActions","label","inputType","isInvalid","isDisabled","isValid","validMsg","children","InputComponent","valid","invalid","FormFeedback","propTypes","PropTypes","string","isRequired","oneOf","bool","error","func","getErrorIntl","status","errorStrings","arguments","length","undefined","isTypingFinished","inProgressFilter","PROPER_VALUE","some","filteredStatus","shouldShowError","getEnhancedValidator","validate","errorCodes","keys","Object","i","getErrorCodes","validationResult","DefaultInput","AlternativeInput","_ref2","CustomInput","checked","ValidateableInput_factory","_ref$validate","_getActions","enhancedValidate","Component","ownProps","_state$signup$data$fi","signup","_ref2$isInvalid","_ref2$isValid","validMsgFormatted","isApproved","oneOfType","instanceOf","ApprovableInput_factory","approvedMsg","rejectedMsg","ValidateableInput","validateableInputFactory","_ref3","statusCodes","E_EMPTY","E_FIRST_LETTER","E_LAST_SYMBOL","E_INVALID_FORMAT","E_TOO_SHORT","E_TOO_LONG","resultStrings","rejected","approved","approvableInputFactory","test","charAt","E_INSUFFICIENT","format","concat","RegExp","E_PASSWORDS_MISMATCH","E_PASSWORD_NOT_VALID","resultMessages","_state$signup$data$pa","E_FIRST_SYMBOL","E_INVALID_CHARS","E_TOO_OLD","E_TOO_EARLY","tsBirthdate","Date","parse","isNaN","tsToday","now","E_IMPOSED","fileName","E_NOT_SELECTED","E_WRONG_EXTENTION","E_TOO_BIG","Container","fieldLabel","Photo_Photo_view","photoPickerButtonCaption","file","ext","split","pop","toLowerCase","acceptedExt","files","E_WRONG_ENDING","areAllApprovableFieldsApproved","fields","every","field","isFormFilledInCorrectly","formData","values","passwordConfirmation","item","onClick","sleeper","ms","Promise","resolve","setTimeout","serverConnectionError","somethingWentWrong","ajaxErrorParser","err","response","console","log","errorDetails","details","statusText","request","message","fetchStoredMessages","localeId","serializedLocale","localStorage","getItem","_JSON$parse","JSON","storedLocaleId","locale","simulateFormFillIn","_x","_x2","_simulateFormFillIn","apply","this","_callee","sequences","elementId","regenerator_default","wrap","_context","prev","next","t0","t1","done","runSequence","pauseDelayMultiplier","stop","inputEvent","Event","bubbles","blurEvent","focusEvent","fieldBlurDelayMultiplier","putTextInTextarea","element","simulateTypingTextarea","_callee2","sequence","_context2","abrupt","simulateTyping","simulateTypingInputElements","_callee3","_context3","setNativeValue","_callee4","strategy","_context4","slice","dispatchEvent","clickElement","click","putTextAtOnce","_callee5","_context5","document","getElementById","focus","valueSetter","getOwnPropertyDescriptor","set","prototype","getPrototypeOf","prototypeValueSetter","call","onDemo","asyncToGenerator","mark","firstname","lastname","email","newsletters","phone","birthdate","biography","Demo_Demo_view","signupFormTitle","signupFormHint","firstNameLabel","lastNameLabel","userIdLabel","userIdHint","passwordHint","passwordConfirmationLabel","passwordConfirmationHint","emailLabel","emailHint","newslettersLabel","newslettersHint","phoneLabel","phoneHint","birthdateLabel","birthdateHint","biographyLabel","photoLabel","photoHint","personalInformationProcessingLabel","personalInformationProcessingHint","signupErrorTitle","alreadySignedUp","loginLinkCaption","signupSuccessTitle","signupSuccessMessage","btnDemoCaption","isRegistered","steps","md","lg","xl","SignupForm_view_messages","Demo_container","Firstname_container","Lastname_container","Username_container","Password_container","PasswordConfirmation_redux","Email_container","Newsletters_container","Phone_container","Birthdate_container","Biography_container","Photo_redux","PersonalInformationProcessing_container","SubmitButton_redux","showProceedButton","intlShape","setVisibilityFilter","signupState","filter","step","push","currentKeyField","currentAwaitingKeyField","fieldValueIsProper","fieldIsNotPending","fieldIsBeingEdited","dataLoadingSpinnerMsg","dataLoadingErrorTitle","logoutButtonCaption","newslettersStatusIndicatorLabel","biographyBlockTitle","FullscreenSpinner_FullscreenSpinner_view","Dashboard_view_messages","sm","src","photo","LogoutButton_redux","age","defaultChecked","postProcessUserProfile","userProfileInfo","ageDiffMs","getTime","ageDate","Math","abs","getUTCFullYear","calculateAge","_state$userProfile","userProfile","updateReduxAuthState","updateReduxAuthStatem","useEffect","setItem","removeItem","switchTo","onSwitchLocaleRequest","onSwitchLocaleResponse","onSwitchLocaleFailure","onSwitchLocaleReset","e","localeSwitchErrorTitle","AppView","isLocaleSwitchPending","localeSwitchError","Auth_redux","App_view_messages","LocaleSwitcher_redux","react_router","App_view_LoginRoute","exact","path","component","SignupForm_redux","App_view_ProtectedRoute","Dashboard_redux","redirectTo","App_view_DefaultRoute","ProtectedRoute","actualComponent","render","DefaultRoute","LoginRoute","_ref4","LoginForm_redux","withRouter","fetchUserProfile","logicMiddleware","appContext","history","resetUI","addDeps","listen","location","action","App_App_view","i18n","Boolean","window","hostname","match","Auth_logic","createLogic","processOptions","successType","failType","process","_process","axios","url","params","sent","reject","IntlProvider_logic","allow","cookie","stringify","REQUEST_APPROVAL","RESPONSE_APPROVAL","RESPONSE_APPROVAL_ERROR","fieldApprovalLogic","validateableInputActionTypes","getState","ctx","requestApproval","responseApproval","responseApprovalError","assign","config","_x3","PasswordConfirmation_logic","passwordValidityStatus","passwordValue","passwordConfirmationValidityStatus","passwordConfirmationValue","areEqual","passwordsCheckedAction","_ref5","_ref6","exractFormData","originalFormData","refinedFormData","FormData","SignupForm_logic","method","headers","Content-Type","timeout","catch","toConsumableArray","passwordConfirmationLogic","notAuthorizedException","App_logic","Authorization","deps","logic","authLogic","switchLocaleLogic","signupFormLogic","dataFetchLogic","createLogicMiddleware","monitor$","subscribe","x","initialState","objectSpread","defineProperty","fieldData","reduceReducers","combineReducers","inputActionTypes","keyFields","previousValue","fieldNameIndex","indexOf","reduce","index","approvable","validateable","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","key","IntlProvider","addLocaleData","ru","middleware","get","hydrate","externalState","store","applyMiddleware","createStore","rootReducer","ReactDOM","es","IntlProvider_redux","App_redux","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f035713.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport './SubmitButton.view.sass';\r\n\r\nexport default ({\r\n\tdisabled, className, isPending, inProgressCaption, caption\r\n}) => pug`\r\n\tButton.btn-submit(\r\n\t\ttype=\"submit\"\r\n\t\tdisabled=disabled\r\n\t\tsize=\"lg\"\r\n\t\tcolor=\"primary\"\r\n\t\tclassName=className\r\n\t)\r\n\t\tif isPending\r\n\t\t\t| #{inProgressCaption}\r\n\r\n\t\t\t.spinner-wrapper\r\n\t\t\t\tSpinner(size=\"lg\" color=\"light\" type=\"grow\")\r\n\r\n\t\telse\r\n\t\t\t| #{caption}\r\n`;","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\nimport './ErrorDisplay.view.sass';\r\n\r\nconst View = ({\r\n\ttitle, errorMsg\r\n}) => pug`\r\n\tAlert.error-display(color=\"danger\")\r\n\t\th6.alert-heading= title\r\n\t\tp.mb-0= errorMsg\r\n`;\r\n\r\nexport default View;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Card, CardTitle, CardText, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport SubmitButton from 'components/SubmitButton';\r\nimport ErrorDisplay from '../ErrorDisplay';\r\nimport FadeIn from 'react-fade-in';\r\nimport { defineMessages } from 'react-intl'; \r\nimport './LoginForm.view.sass';\r\n\r\nconst messages = defineMessages({\r\n\tformTitle: \"Log in\",\r\n\tformHint: \"Please, enter your user name and password to get access to your profile\",\r\n\tusernameLabel: \"Username\",\r\n\tpasswordLabel: \"Password\",\r\n\tsubmitButtonCaption: \"Log in\",\r\n\tsubmitButtonInProgressCaption: \"Sending\",\r\n\tauthErrorTitle: \"Authentication error\",\r\n\tmsgNoAccountQuestion: \"No account?\",\r\n\tsignupLinkCaption: \"Register\"\r\n});\r\n\r\nexport default ({\r\n\tintl: { formatMessage }, isPending, isAuthenticated, externalError, onSubmit, onChange\r\n}) => pug`\r\n\t#LoginForm\r\n\t\tFadeIn(delay=500)\r\n\t\t\tContainer\r\n\t\t\t\tRow.align-items-center\r\n\t\t\t\t\tCol.mx-auto\r\n\t\t\t\t\t\tCard(body)\r\n\t\t\t\t\t\t\tCardTitle.mb-1 #{formatMessage(messages.formTitle)}\r\n\r\n\t\t\t\t\t\t\tCardText.d-block.text-muted.mt-0 #{formatMessage(messages.formHint)}\r\n\r\n\t\t\t\t\t\t\tForm(onSubmit=onSubmit)\r\n\t\t\t\t\t\t\t\tFormGroup\r\n\t\t\t\t\t\t\t\t\tLabel(for=\"username\") #{formatMessage(messages.usernameLabel)}\r\n\t\t\t\t\t\t\t\t\tInput(type=\"text\" name=\"username\" id=\"username\" onChange=onChange defaultValue=\"linus-torvalds\")\r\n\r\n\t\t\t\t\t\t\t\tFormGroup\r\n\t\t\t\t\t\t\t\t\tLabel(for=\"password\") #{formatMessage(messages.passwordLabel)}\r\n\t\t\t\t\t\t\t\t\tInput(type=\"password\" name=\"password\" id=\"password\" onChange=onChange defaultValue=\"linus-torvalds\")\r\n\r\n\t\t\t\t\t\t\t\t//FormGroup\r\n\t\t\t\t\t\t\t\t//\tCustomInput(type=\"checkbox\" id=\"remember\" label=\"Запомнить меня\")\r\n\r\n\t\t\t\t\t\t\t\tSubmitButton.d-block.w-100.mt-4(\r\n\t\t\t\t\t\t\t\t\tcaption=formatMessage(messages.submitButtonCaption)\r\n\t\t\t\t\t\t\t\t\tinProgressCaption=formatMessage(messages.submitButtonInProgressCaption)\r\n\t\t\t\t\t\t\t\t\tdisabled=isPending\r\n\t\t\t\t\t\t\t\t\tisPending=isPending\r\n\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\tif externalError\r\n\t\t\t\t\t\t\t\t\tErrorDisplay(title=formatMessage(messages.authErrorTitle) errorMsg=externalError)\r\n\r\n\t\t\t\t\t\t\t\tFormText.mt-3 #{formatMessage(messages.msgNoAccountQuestion)}\r\n\t\t\t\t\t\t\t\t\t| \r\n\t\t\t\t\t\t\t\t\tLink(to=\"/signup/\") #{formatMessage(messages.signupLinkCaption)}\r\n`;","import View from './LoginForm.view';\r\nimport { injectIntl } from 'react-intl';\r\nexport default injectIntl(View);","export const actionTypes = {\r\n\tAUTH_REQUEST: \t'AUTH_REQUEST',\r\n\tAUTH_RESPONSE: \t'AUTH_RESPONSE',\r\n\tAUTH_FAILURE: \t'AUTH_FAILURE',\r\n\tAUTH_LOGOUT: \t'AUTH_LOGOUT',\r\n\tAUTH_RESET: \t'AUTH_RESET'\r\n}\r\n\r\nexport const onAuthRequest = (data) => ({\r\n\ttype: actionTypes.AUTH_REQUEST,\r\n\tdata\r\n});\r\n\r\nexport const onAuthResponse = (token) => ({\r\n\ttype: actionTypes.AUTH_RESPONSE,\r\n\ttoken\r\n});\r\n\r\nexport const onAuthFailure = (error) => ({\r\n\ttype: actionTypes.AUTH_FAILURE,\r\n\terror\r\n});\r\n\r\nexport const onLogout = () => ({\r\n\ttype: actionTypes.AUTH_LOGOUT\r\n});\r\n\r\nexport const onAuthReset = () => ({\r\n\ttype: actionTypes.AUTH_RESET\r\n})\r\n\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport Form from './LoginForm.container';\r\nimport { onAuthRequest } from 'components/Auth/Auth.actions';\r\nimport { sha256 } from 'js-sha256';\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisPending: state.auth.isPending,\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\texternalError: state.auth.externalError,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tonSubmit: (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst form = event.target;\r\n\t\tconst credentials = {\r\n\t\t\tusername: form.elements['username'].value,\r\n\t\t\tpassword: sha256(form.elements['password'].value)\r\n\t\t};\r\n\t\tdispatch(onAuthRequest(credentials));\r\n\t}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","export const actionTypes = {\r\n\tVALUE_CHANGED: \t\t'VALUE_CHANGED',\r\n\tFIELD_EDITED: \t\t'FIELD_EDITED'\r\n}\r\n\r\nexport const onChange = (fieldName, value, validityStatus) => ({\r\n\ttype: actionTypes.VALUE_CHANGED,\r\n\tfieldName,\r\n\tvalue,\r\n\tvalidityStatus\r\n});\r\n\r\nexport const onBlur = (fieldName) => ({\r\n\ttype: actionTypes.FIELD_EDITED,\r\n\tfieldName\r\n});\r\n\r\n// Action factory\r\nexport function getActions(fieldName) {\r\n\tconst onChangeFixed = (value, validityStatus) => onChange(fieldName, value, validityStatus);\r\n\tconst onBlurFixed = () => onBlur(fieldName);\r\n\treturn {\r\n\t\tonChange: onChangeFixed,\r\n\t\tonBlur: onBlurFixed\r\n\t}\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormGroup, FormFeedback } from 'reactstrap';\r\n\r\nconst View = ({\r\n\t/* values */\r\n\t\tfieldName, value, label, inputType, isInvalid, errorMsg,\r\n\t\tisDisabled, isValid, validMsg, children, InputComponent,\r\n\t/* handlers */\r\n\t\tonChange, onBlur\r\n}) => pug`\r\n\tFormGroup\r\n\t\tInputComponent(\r\n\t\t\ttype=inputType\r\n\t\t\tname=fieldName\r\n\t\t\tid=fieldName\r\n\t\t\tlabel=label\r\n\t\t\tvalue=value\r\n\t\t\tvalid=isValid\r\n\t\t\tinvalid=isInvalid\r\n\t\t\tdisabled=isDisabled\r\n\t\t\tonChange=onChange\r\n\t\t\tonBlur=onBlur\r\n\t\t)\r\n\t\t\tFormFeedback(valid=true) #{validMsg}\r\n\r\n\t\t\tFormFeedback(valid=false)\r\n\t\t\t\tdiv #{errorMsg}\r\n\r\n\t\t\t= children\r\n`;\r\n\r\nView.propTypes = {\r\n\tfieldName: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string.isRequired,\r\n\tinputType: PropTypes.oneOf(['text', 'textarea','email', 'password', 'tel', 'date', 'checkbox', 'switch']),\r\n\tisInvalid: PropTypes.bool,\r\n\terror: PropTypes.string,\r\n\tisValid: PropTypes.bool,\r\n\tvalidMsg: PropTypes.string,\r\n\tonChange: PropTypes.func,\r\n\tonBlur: PropTypes.func,\r\n}\r\n\r\nexport default View;","import { PROPER_VALUE } from './ValidateableInput.factory'; \r\n\r\n// Three distinct rules for controlling error display:\r\n// 1. If the value is correct, no error\r\n// 2. If the value is incorrect and typing is finished, show the error\r\n// 3. If the value is incorrect, but the user is still typing, we use filter\r\n//    to suppress showing errors that can be temporary due to incomplete typing\r\nconst shouldShowError = (status, isTypingFinished, inProgressFilter = []) => {\r\n\t\r\n\t// The value completely complies with the format\r\n\tif ( ! status || status === PROPER_VALUE ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// User finished editing, allow displaying the error\r\n\tif ( isTypingFinished )\r\n\t\treturn true\r\n\r\n\t// If the user is still typing, postpone showing the errors defined by the filter\r\n\treturn inProgressFilter.some( filteredStatus => filteredStatus === status )\r\n\t\t? false\r\n\t\t: true;\r\n}\r\n\r\n// Get translated error message or empty string if the value\r\n// is correct or the error was temporarily suppressed\r\nexport const getErrorIntl = (intl, status, errorStrings = {}, isTypingFinished = true, inProgressFilter = []) => {\r\n\treturn shouldShowError(status, isTypingFinished, inProgressFilter)\r\n\t\t? intl.formatMessage(errorStrings[status])\r\n\t\t: '';\r\n}\r\n\r\n// Extract error codes from keys in the error strings object\r\n// and represent them an identitiy array: x[code] = code\r\nexport function getErrorCodes(errorStrings) {\r\n\tconst keys = Object.keys(errorStrings);\r\n\tlet errorCodes = {};\r\n\tfor ( let i = 0; i < keys.length; i++ ) {\r\n\t\terrorCodes[keys[i]] = keys[i];\r\n\t}\r\n\treturn errorCodes;\r\n}\r\n\r\n// If the value is correct a validator will return true\r\n// or validation error code instead.\r\n// The function returns a validator that utilizes original validator\r\n// to return PROPER_VALUE if the value is correct.\r\n// It will also inject error codes extracted from the error strings object\r\nexport function getEnhancedValidator(validate, errorStrings = {}) {\r\n\tconst errorCodes = getErrorCodes(errorStrings);\r\n\treturn (value) => {\r\n\t\tconst validationResult = validate(value, errorCodes);\r\n\t\treturn validationResult === true\r\n\t\t\t? PROPER_VALUE\r\n\t\t\t: validationResult;\r\n\t}\r\n}","import React from 'react';\r\nimport { CustomInput, Input, Label } from 'reactstrap';\r\n\r\nconst DefaultInput = ({\r\n\ttype, name, label, value, valid, invalid, disabled, onChange, onBlur, children\r\n}) => pug`\r\n\tdiv\r\n\t\tLabel(for=name) #{label}\r\n\r\n\t\tInput(\r\n\t\t\ttype=type\r\n\t\t\tname=name\r\n\t\t\tid=name\r\n\t\t\tvalue=value\r\n\t\t\tvalid=valid\r\n\t\t\tinvalid=invalid\r\n\t\t\tdisabled=disabled\r\n\t\t\tonChange=onChange\r\n\t\t\tonBlur=onBlur\r\n\t\t)\r\n\r\n\t\t= children\r\n`;\r\n\r\nconst AlternativeInput = ({\r\n\ttype, name, label, value, valid, invalid, disabled, onChange, children\r\n}) => pug`\r\n\tCustomInput(\r\n\t\ttype=type\r\n\t\tname=name\r\n\t\tid=name\r\n\t\tlabel=label\r\n\t\tchecked=value\r\n\t\tvalid=valid\r\n\t\tinvalid=invalid\r\n\t\tdisabled=disabled\r\n\t\tonChange=onChange\r\n\t)\r\n\t\t= children\r\n`;\r\n\r\nexport { DefaultInput, AlternativeInput };","import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'; \r\nimport { getActions } from './ValidateableInput.actions';\r\nimport View from './ValidateableInput.view';\r\nimport { getErrorIntl, getEnhancedValidator } from './ValidateableInput.utils';\r\nimport { DefaultInput, AlternativeInput } from './ValidateableInput.inputs';\r\n\r\nexport const PROPER_VALUE = 'PROPER_VALUE';\r\n\r\nexport default ({\r\n\t/* values */\tfieldName, inputType, errorStrings, inProgressFilter, validMsg,\r\n\t/* handlers */ \tvalidate = () => true // by default the value is considered correct\r\n}) => {\r\n\tconst mapStateToProps = (state, ownProps) => {\r\n\t\tconst { validityStatus, isTypingFinished, value } = state.signup.data[fieldName];\r\n\t\tconst errorMsg = ownProps.errorMsg\r\n\t\t\t? ownProps.errorMsg\r\n\t\t\t: getErrorIntl(ownProps.intl, validityStatus, errorStrings, isTypingFinished, inProgressFilter);\r\n\t\treturn {\r\n\t\t\tisInvalid: !!errorMsg,\r\n\t\t\terrorMsg,\r\n\t\t\tvalue\r\n\t\t}\r\n\t};\r\n\r\n\t// Getting pre-configured action handlers for the input\r\n\tconst { onChange, onBlur } = getActions(fieldName);\r\n\r\n\t// Transforming supplied validation function and provided error strings object\r\n\t// into a function that utilizes both to return the correct result code\r\n\tconst enhancedValidate = getEnhancedValidator(validate, errorStrings);\r\n\r\n\t// Wrapping view component with Redux\r\n\tconst mapDispatchToProps = dispatch => ({\r\n\t\tonChange: event => {\r\n\t\t\tconst target = event.target;\r\n\t\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\r\n\t\t\tconst validityStatus = enhancedValidate(value);\r\n\t\t\tdispatch(onChange(value, validityStatus));\r\n\t\t},\r\n\t\tonBlur: () => dispatch(onBlur())\r\n\t});\r\n\r\n\tlet Component = connect(\r\n\t  mapStateToProps,\r\n\t  mapDispatchToProps\r\n\t)(View);\r\n\r\n\t// Setting properties' type contstraints\r\n\tComponent.propTypes = {\r\n\t\tfieldName: PropTypes.string.isRequired,\r\n\t\tinputType: PropTypes.oneOf(['text', 'textarea', 'email', 'password', 'tel', 'date', 'checkbox', 'switch']).isRequired\r\n\t}\r\n\r\n\t// Picking specific input component depending on the type\r\n\tlet InputComponent;\r\n\tswitch ( inputType ) {\r\n\t\tcase 'checkbox':\r\n\t\tcase 'switch':\r\n\t\t\tInputComponent = AlternativeInput\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tInputComponent = DefaultInput\r\n\t}\r\n\r\n\t// Finally, assemblying the configured input component\r\n\tconst Container = ({\r\n\t\tisDisabled, isInvalid = false, isValid = false, errorMsg, children, label, intl\r\n\t}) => {\r\n\t\tconst validMsgFormatted = validMsg\r\n\t\t\t? intl.formatMessage(validMsg)\r\n\t\t\t: null;\r\n\t\treturn pug`\r\n\t\t\tComponent(\r\n\t\t\t\tfieldName=fieldName\r\n\t\t\t\tinputType=inputType\r\n\t\t\t\tlabel=label\r\n\t\t\t\tisInvalid=isInvalid\r\n\t\t\t\terrorMsg=errorMsg\r\n\t\t\t\tisValid=isValid\r\n\t\t\t\tvalidMsg=validMsgFormatted\r\n\t\t\t\tInputComponent=InputComponent\r\n\t\t\t\tintl=intl\r\n\t\t\t)\r\n\t\t\t\t= children\r\n\t\t`;\r\n\t}\r\n\r\n\treturn injectIntl(Container);\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst View = ({\r\n\t/* values */ \tisInvalid, isPending, isApproved, label,\r\n\t/* values */\terrorMsg, InputComponent\r\n}) => pug`\r\n\tInputComponent(\r\n\t\tisDisabled=isPending\r\n\t\tisInvalid=isInvalid\r\n\t\tisValid=isApproved\r\n\t\terrorMsg=errorMsg\r\n\t\tlabel=label\r\n\t)\r\n\t\tif isPending\r\n\t\t\tSpinner(size=\"sm\" color=\"primary\")\r\n`;\r\n\r\nView.propTypes = {\r\n\tisInvalid: PropTypes.bool,\r\n\tisPending: PropTypes.bool,\r\n\tisValid: PropTypes.oneOfType([\r\n\t\t\tPropTypes.bool,\r\n\t\t\tPropTypes.instanceOf('undefined')\r\n\t\t]),\r\n\terrorMsg: PropTypes.string,\r\n}\r\n\r\nexport default View;","import React from 'react';\r\nimport { connect } from 'react-redux'; \r\nimport { injectIntl } from 'react-intl';\r\nimport validateableInputFactory from '../ValidateableInput';\r\nimport View from './ApprovableInput.view';\r\n\r\nexport default ({\r\n\t/* values */\tfieldName, inputType, approvedMsg, rejectedMsg, children, externalError, errorStrings, inProgressFilter,\r\n\t/* handlers */ \tvalidate,\r\n}) => {\r\n\tconst mapStateToProps = (state, ownProps) => {\r\n\t\tconst { externalError, isTypingFinished, isPending, isApproved } = state.signup.data[fieldName] || {};\r\n\t\tlet errorMsg = '';\r\n\t\tif ( externalError )\r\n\t\t\terrorMsg = externalError;\r\n\t\telse if ( isTypingFinished && isApproved === false )\r\n\t\t\terrorMsg = ownProps.intl.formatMessage(rejectedMsg);\r\n\t\treturn {\r\n\t\t\tisInvalid: !!errorMsg,\r\n\t\t\terrorMsg,\r\n\t\t\tisPending,\r\n\t\t\t// isPending: isTypingFinished && !isApproved && !externalError && status === statusCodes.PROPER,\r\n\t\t\tisApproved: isApproved && isTypingFinished,\r\n\t\t\t// isDisapproved: isTypingFinished && isApproved === false,\r\n\t\t}\r\n\t};\r\n\r\n\tlet Component = connect(\r\n\t  mapStateToProps\r\n\t)(View);\r\n\r\n\tComponent = injectIntl(Component);\r\n\r\n\tconst ValidateableInput = validateableInputFactory({\r\n\t\tfieldName,\r\n\t\tinputType,\r\n\t\tvalidMsg: approvedMsg,\r\n\t\tvalidate,\r\n\t\terrorStrings,\r\n\t\tinProgressFilter\r\n\t});\r\n\r\n\treturn ({ label }) => pug`\r\n\t\tComponent(\r\n\t\t\tInputComponent=ValidateableInput\r\n\t\t\tlabel=label\r\n\t\t)\r\n\t`;\r\n}","import approvableInputFactory from '../ApprovableInput';\r\nimport validate from './Username.validator';\r\nimport { defineMessages } from 'react-intl'; \r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_FIRST_LETTER: \t'E_FIRST_LETTER',\r\n\tE_LAST_SYMBOL: \t\t'E_LAST_SYMBOL',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_SHORT: \t\t'E_TOO_SHORT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, come up with a username\",\r\n\tE_FIRST_LETTER: \t\"Username should begin with a lowercase latin character\",\r\n\tE_LAST_SYMBOL: \t\t\"Name should end in a letter or a digit\",\r\n\tE_INVALID_FORMAT: \t\"The name contains illegal characters. Please, adhere to the specified format\",\r\n\tE_TOO_SHORT: \t\t\"Name should be at least 5 characters long\",\r\n\tE_TOO_LONG: \t\t\"Name shouldn't be longer than 30 characters\"\r\n})\r\n\r\nconst resultStrings = defineMessages({\r\n\trejected: \"Unfortunately, this name has already been taken. Please, come up with another one\",\r\n\tapproved: \"Great, this is a suitable name!\",\r\n})\r\n\r\nexport default approvableInputFactory({\r\n\tfieldName: \"username\",\r\n\tinputType: \"text\",\r\n\tvalidate,\r\n\tresultStrings,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_TOO_SHORT, statusCodes.E_LAST_SYMBOL],\r\n\trejectedMsg: resultStrings.rejected,\r\n\tapprovedMsg: resultStrings.approved\r\n});","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Empty string\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Maximium 30 characters \r\n\tif ( value.length > 30 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// First character should be a letter\r\n\tconst firstLetterRegex = /^[a-z]$/;\r\n\tlet isValid = firstLetterRegex.test(value.charAt(0));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_FIRST_LETTER;\r\n\t}\t\t\r\n\t\r\n\t// Name should comply with the format \r\n\tconst usernameRegex = /^[-a-z0-9]+$/;\r\n\tisValid = usernameRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\t// Minimum 5 characters\r\n\tif ( value.length < 5 ) \r\n\t\treturn statusCodes.E_TOO_SHORT;\r\n\r\n\t// Last character must be a letter or a digit\r\n\tconst lastLetterRegex = /^[a-z0-9]$/;\r\n\tisValid = lastLetterRegex.test(value.charAt(value.length - 1));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_LAST_SYMBOL;\r\n\t}\t\t\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Password.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_INSUFFICIENT: \t'E_INSUFFICIENT',\r\n\tE_TOO_SHORT: \t\t'E_TOO_SHORT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This is a requried field. Please, enter a password\",\r\n\tE_INVALID_FORMAT:\t\"The password contains illegal symbols. Please, adhere to the specified format\",\r\n\tE_INSUFFICIENT: \t\"Please, use at least 2 symbol groups: letters, digits or special characters\",\r\n\tE_TOO_SHORT:\t\t\"Password should be at least 8 symbols long\",\r\n\tE_TOO_LONG: \t\t\"Password should be less that 128 symbols long. Please, use a shorter password\"\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"password\",\r\n\tinputType: \"password\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_TOO_SHORT, statusCodes.E_INSUFFICIENT]\r\n})","export default function validate(value, statusCodes) {\r\n\r\n\t// Empty string\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Maximum 128 characters \r\n\tif ( value.length > 128 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\tconst grpLetters = \"[a-zA-Z]\";\r\n\tconst grpDigits = \"[0-9]\";\r\n\tconst grpSymbols = \"\";\r\n\tconst format = `(?:${grpLetters}?${grpDigits}?${grpSymbols}?)+`;\r\n\tlet regexp = new RegExp(format);\r\n\tregexp = /^(?:[a-zA-Z]|[0-9]|[-_,.'><=+&%$#@!* )(~\\]/\\\\{}])+$/;\r\n\tlet isValid = regexp.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\t// Password must contain at least two character groups\r\n\t// 1) Latin letters\r\n\t// 2) Digits\r\n\t// 3) Special characters\r\n\tregexp = /[a-zA-Z]/;\r\n\tconst hasLetters = regexp.test(value);\r\n\r\n\tregexp = /[0-9]/;\r\n\tconst hasDigits = regexp.test(value);\r\n\r\n\tregexp = /[-_,.'><=+&%$#@!* )(~\\]/\\\\{}]/;\r\n\tconst hasSymbols = regexp.test(value);\r\n\r\n\tif ( hasLetters + hasDigits + hasSymbols < 2 )\r\n\t\treturn statusCodes.E_INSUFFICIENT;\r\n\r\n\t// Minimum 8 characters\r\n\tif ( value.length < 8 )\r\n\t\treturn statusCodes.E_TOO_SHORT;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './PasswordConfirmation.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t\t'E_EMPTY',\r\n\tE_PASSWORD_NOT_VALID: \t'E_PASSWORD_NOT_VALID',\r\n\tE_PASSWORDS_MISMATCH: \t'E_PASSWORDS_MISMATCH'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\t\"This field is required. Please, confirm the above entered password\",\r\n\tE_PASSWORDS_MISMATCH: \t\"Passwords don't match\",\r\n\tE_PASSWORD_NOT_VALID: \t\"Please, make sure both passwords follow the specified format\"\r\n})\r\n\r\nconst resultMessages = defineMessages({\r\n\tvalid: \"Passwords match\"\r\n})\r\n\r\nconst Component = validateableInputFactory({\r\n\tfieldName: \"passwordConfirmation\",\r\n\tinputType: \"password\",\r\n\tvalidMsg: resultMessages.valid,\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY]\r\n});\r\n\r\nexport default Component;","export default function validate(value, statusCodes) {\r\n\t// Empty string\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\treturn true;\r\n}","import Component from './PasswordConfirmation.container';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tconst { isValid, isTypingFinished } = state.signup.data['passwordConfirmation'];\r\n\treturn {\r\n\t\tisValid: isValid && isTypingFinished,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Component);\r\n","import approvableInputFactory from '../ApprovableInput';\r\nimport validate from './Email.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your email\",\r\n\tE_TOO_LONG: \t\t\"We don't accept emails longer than 128 symbols. PLease, use a shorter address\",\r\n\tE_INVALID_FORMAT: \t\"Email doesn't comply with the format. Please, make sure you typed the address correctly\"\r\n})\r\n\r\nconst resultMessages = defineMessages({\r\n\trejected: \"The address has already been taken by somebody. Please, use another one\",\r\n\tapproved: \"This email address is fine!\"\r\n})\r\n\r\nexport default approvableInputFactory({\r\n\tfieldName: \"email\",\r\n\tinputType: \"email\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_INVALID_FORMAT],\r\n\trejectedMsg: resultMessages.rejected,\r\n\tapprovedMsg: resultMessages.approved\r\n})","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Empty string\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Maximum 128 characters\r\n\tif ( value.length > 128 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\r\n\t// Most sane addresses will comply to this format\t\r\n\t// https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\r\n\tconst emailRegex = /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/;\r\n\tlet isValid = emailRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\treturn true;\r\n}","import { defineMessages } from 'react-intl';\r\nimport approvableInputFactory from '../ApprovableInput';\r\nimport validate from './Phone.validator';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_FIRST_SYMBOL: \t'E_FIRST_SYMBOL',\r\n\tE_INVALID_CHARS: \t'E_INVALID_CHARS',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_SHORT: \t\t'E_TOO_SHORT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your phone number\",\r\n\tE_FIRST_SYMBOL: \t\"The first character should be a plus symbol (+)\",\r\n\tE_TOO_SHORT: \t\t\"Phone number should be more than 10 characters long. Please, make sure you entered it correctly\",\r\n\tE_TOO_LONG: \t\t\"The phone number is too long. Please, use a shorter number\",\r\n\tE_INVALID_CHARS: \t\"Phone number can only contain digits, spaces or hyphens and a plus sign. Please, check for typos\",\r\n\tE_INVALID_FORMAT: \t\"The phone number doesn't comply with the format. Please, check if you typed it correctly\"\r\n})\r\n\r\nconst resultMessages = defineMessages({\r\n\trejected: \"This phone number has already been in use. Please, choose another one\",\r\n\tapproved: \"This phone number will work!\"\r\n})\r\n\r\nexport default approvableInputFactory({\r\n\tfieldName: \"phone\",\r\n\tinputType: \"tel\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_TOO_SHORT, statusCodes.E_INVALID_FORMAT],\r\n\trejectedMsg: resultMessages.rejected,\r\n\tapprovedMsg: resultMessages.approved,\r\n});","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Empty string\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Maximum 20 characters\r\n\tif ( value.length > 20 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// First character must be a letter\r\n\tconst firstSymbolRegex = /^\\+/;\r\n\tlet isValid = firstSymbolRegex.test(value.charAt(0));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_FIRST_SYMBOL;\r\n\t}\r\n\r\n\t// Only valid characters\r\n\tconst phoneLexisRegex = /^[-+ 0-9]+$/;\r\n\tisValid = phoneLexisRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_CHARS;\r\n\t}\r\n\t\r\n\t// Phone number should comply with the format\r\n\tconst phoneGrammarRegex = /^\\+[0-9]{1,3}(?:(?:[- ][0-9]{2,4}){3,4}|[- ]?[0-9]{5,10})$/;\r\n\tisValid = phoneGrammarRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\t// Minimum 10 characters\r\n\tif ( value.length < 10 ) \r\n\t\treturn statusCodes.E_TOO_SHORT;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Birthdate.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_TOO_OLD: \t\t\t'E_TOO_OLD',\r\n\tE_TOO_EARLY: \t\t'E_TOO_EARLY',\r\n\tE_INVALID_FORMAT:  \t'E_INVALID_FORMAT'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your date of birth\",\r\n\tE_TOO_OLD: \t\t\t\"We accept that a human can live longer than 150 years. If that's your case, please contact us via phone or email. We will consider your application in exceptional order\",\r\n\tE_TOO_EARLY: \t\t\"Only dates from the past are accepted\",\r\n\tE_INVALID_FORMAT: \t\"Wrong data format. Please, make sure you enter the date in YYYY-MM-DD format\",\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"birthdate\",\r\n\tinputType: \"date\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_TOO_OLD, statusCodes.E_TOO_EARLY, statusCodes.E_INVALID_FORMAT]\r\n})","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Empty string\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Incorrect format\r\n\tconst dateFormat = /^[0-9]{4}-(?:0[1-9]|1[012])-(?:0[1-9]|[12][0-9]|3[01])$/;\r\n\tconst isCorrect = dateFormat.test(value);\r\n\tif ( !isCorrect )\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\r\n\t// Still incorrect\r\n\tconst tsBirthdate = Date.parse(value);\r\n\tif ( isNaN(tsBirthdate) )\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\r\n\tconst tsToday = Date.now();\r\n\t\r\n\r\n\t// Future date\r\n\tif ( tsBirthdate > tsToday )\r\n\t\treturn statusCodes.E_TOO_EARLY;\r\n\t\r\n\t// Maximum age: 150 years\r\n\tif ( tsToday - tsBirthdate > 150 * 365 * 24 * 60 * 60 * 1000 )\r\n\t\treturn statusCodes.E_TOO_OLD;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"newsletters\",\r\n\tinputType: \"switch\"\r\n})","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Biography.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_TOO_LONG: 'E_TOO_LONG',\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_TOO_LONG: \"Please, shorten your biography to 4000 symbols\",\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"biography\",\r\n\tinputType: \"textarea\",\r\n\tvalidate,\r\n\terrorStrings\r\n});","export default function validate(value, statusCodes = {})\r\n{\r\n\t// No more than 4000 characters\r\n\tif ( value && value.length > 4000 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './PersonalInformationProcessing.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_IMPOSED: 'E_IMPOSED',\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_IMPOSED: \"Consent to personal information processing is required to sign up to our serivce\",\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"personal-information-processing\",\r\n\tinputType: \"checkbox\",\r\n\tvalidate,\r\n\terrorStrings\r\n})","export default function validate(value, statusCodes = {}) {\r\n\treturn value\r\n\t\t? true\r\n\t\t: statusCodes.E_IMPOSED;\r\n}","import React from 'react';\r\nimport { FormGroup, FormFeedback, CustomInput, Label, Input } from 'reactstrap';\r\nimport './Photo.view.sass';\r\n\r\nconst View = ({\r\n\t/* values */\r\n\t\tfieldName, fileName, label, invalid, errorMsg,\r\n\t\tisDisabled, valid, validMsg, children,\r\n\t/* handlers */\r\n\t\tonChange\r\n}) => pug`\r\n\tFormGroup\r\n\t\tLabel(for=fieldName) #{label}\r\n\r\n\t\tCustomInput(\r\n\t\t\ttype=\"file\"\r\n\t\t\tname=fieldName\r\n\t\t\tid=fieldName\r\n\t\t\tlabel=fileName\r\n\t\t\tvalid=valid\r\n\t\t\tinvalid=invalid\r\n\t\t\tdisabled=isDisabled\r\n\t\t\tonChange=onChange\r\n\t\t)\r\n\r\n\t\tInput(\r\n\t\t\ttype=\"hidden\"\r\n\t\t\tvalid=valid\r\n\t\t\tinvalid=invalid\r\n\t\t)\r\n\t\t\r\n\t\tFormFeedback(valid=true) #{validMsg}\r\n\r\n\t\tFormFeedback(valid=false)\r\n\t\t\tdiv #{errorMsg}\r\n\r\n\t\t= children\r\n`;\r\n\r\nexport default View;","import React from 'react';\r\nimport View from './Photo.view';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_NOT_SELECTED: \t'E_NOT_SELECTED',\r\n\tE_WRONG_EXTENTION: \t'E_WRONG_EXTENTION',\r\n\tE_TOO_BIG: \t\t\t'E_TOO_BIG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_NOT_SELECTED: \t\"Please, choose a photo for your profile\",\r\n\tE_WRONG_EXTENTION: \t\"We only support files of JPG and PNG formats\",\r\n\tE_TOO_BIG: \t\t\t\"File size shouldn't exceed 5 MB\",\r\n})\r\n\r\nconst Container = ({\r\n\t/* values */\r\n\t\tfieldName, fieldLabel, isInvalid, errorMsg,\r\n\t\tisDisabled, isValid, validMsg, fileName, label,\r\n\t/* handlers */\r\n\t\tonChange\r\n}) => pug`\r\n\tView(\r\n\t\tfieldName=\"photo\"\r\n\t\tlabel=label\r\n\t\tfileName=fileName\r\n\t\tinvalid=isInvalid\r\n\t\terrorMsg=errorMsg\r\n\t\tisDisabled=isDisabled\r\n\t\tvalid=isValid\r\n\t\tvalidMsg=validMsg\r\n\t\tonChange=onChange\r\n\t)\r\n`;\r\n\r\nexport default Container;","import { connect } from 'react-redux'; \r\nimport { defineMessages, injectIntl } from 'react-intl';\r\nimport Container from './Photo.container';\r\nimport validate from './Photo.validator';\r\nimport { onChange } from '../ValidateableInput/ValidateableInput.actions';\r\nimport { getErrorIntl, getEnhancedValidator } from '../ValidateableInput/ValidateableInput.utils';\r\nimport { errorStrings } from './Photo.container';\r\n\r\nconst fieldName = 'photo';\r\n\r\nconst messages = defineMessages({\r\n\tphotoPickerButtonCaption: \"Pick a photo\"\r\n})\r\n\r\nconst enhancedValidate = getEnhancedValidator(validate, errorStrings);\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tconst { validityStatus, value } = state.signup.data[fieldName];\r\n\tconst fileName = value.name || ownProps.intl.formatMessage(messages.photoPickerButtonCaption);\r\n\tconst errorMsg = ownProps.errorMsg\r\n\t\t? ownProps.errorMsg\r\n\t\t: getErrorIntl(ownProps.intl, validityStatus, errorStrings);\r\n\treturn {\r\n\t\tisInvalid: !!errorMsg,\r\n\t\terrorMsg,\r\n\t\tfileName\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tonChange: event => {\r\n\t\tconst file = event.target.files[0];\r\n\t\tif ( ! file ) return false;\r\n\t\tconst validityStatus = enhancedValidate(file);\r\n\t\tdispatch(onChange(fieldName, file, validityStatus));\r\n\t}\r\n});\r\n\r\nlet Component = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Container);\r\n\r\nexport default injectIntl(Component);","export default function validate(file, statusCodes = {}) {\r\n\t// Empty string\r\n\tif ( ! file )\r\n\t\treturn statusCodes.E_NOT_SELECTED;\r\n\r\n\t// Only JPG and PNG\r\n\tconst ext = file.name.split('.').pop().toLowerCase();\r\n\tconst isValidExtention = ['jpg', 'png'].some( acceptedExt => acceptedExt === ext );\r\n\tif ( ! isValidExtention )\r\n\t\treturn statusCodes.E_WRONG_EXTENTION;\r\n\r\n\t// Maximum size: 5 MB\r\n\tif ( file.size > 5 * 1024 * 1024 )\r\n\t\treturn statusCodes.E_TOO_BIG;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Firstname.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_FIRST_LETTER: \t'E_FIRST_LETTER',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your name\",\r\n\tE_FIRST_LETTER: \t\"Name should begin with a captial letter\",\r\n\tE_INVALID_FORMAT: \t\"The name contains illegal characters. Please, adhere to the specified format\",\r\n\tE_TOO_LONG: \t\t\"Name shouldn't exceed 40 characters\"\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"firstname\",\r\n\tinputType: \"text\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY]\r\n});","export default function validate(value, statusCodes = {})\r\n{\r\n\t// Empty string\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Maximum 40 characters\r\n\tif ( value.length > 40 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// First character must be a capital letter\r\n\tconst firstLetterRegex = /^[A-ZА-ЯЁ]$/;\r\n\tlet isValid = firstLetterRegex.test(value.charAt(0));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_FIRST_LETTER;\r\n\t}\t\t\r\n\t\r\n\t// Name should comply with the format\r\n\tconst nameRegex = /^.[a-zа-яё]*$/;\r\n\tisValid = nameRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\t\t\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Lastname.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_FIRST_LETTER: \t'E_FIRST_LETTER',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG',\r\n\tE_LAST_SYMBOL: \t\t'E_LAST_SYMBOL',\r\n\tE_WRONG_ENDING: \t'E_WRONG_ENDING'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your family name\",\r\n\tE_FIRST_LETTER: \t\"Family name should start with captial letter\",\r\n\tE_INVALID_FORMAT: \t\"The family name doesn't follow the format. Please, use only letters and a hyphen\",\r\n\tE_TOO_LONG: \t\t\"Family name shouldn't exceed 50 characters\",\r\n\tE_LAST_SYMBOL: \t\t\"Family name should end in lowercase letter\",\r\n\tE_WRONG_ENDING: \t\"Minimum 2 letters after a hyphen\",\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"lastname\",\r\n\tinputType: \"text\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_LAST_SYMBOL, statusCodes.E_WRONG_ENDING]\r\n});","export default function validate(value, statusCodes = {})\r\n{\r\n\t// Empty string\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Maximum 50 characters \r\n\tif ( value.length > 50 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// First character must be a capital letter\r\n\tconst firstLetterRegex = /^[A-ZА-ЯЁ]$/;\r\n\tlet isValid = firstLetterRegex.test(value.charAt(0));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_FIRST_LETTER;\r\n\t}\r\n\r\n\t// Last character must be a letter\r\n\tconst lastLetterRegex = /^[a-zа-яё]$/;\r\n\tisValid = lastLetterRegex.test(value.charAt(value.length-1));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_LAST_SYMBOL;\r\n\t}\r\n\r\n\t// Minimum two letters after a hyphen\r\n\tconst endingRegex = /-[a-zа-яё]$/;\r\n\tisValid = endingRegex.test(value);\r\n\tif ( isValid ) {\r\n\t\treturn statusCodes.E_WRONG_ENDING;\r\n\t}\t\t\r\n\t\r\n\t// Surname should comply with the format\r\n\tconst nameRegex = /^[A-ZА-ЯЁ][-a-zа-яё]*$/;\r\n\tisValid = nameRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\treturn true;\r\n}","import { connect } from 'react-redux';\r\nimport { PROPER_VALUE } from '../ValidateableInput/ValidateableInput.factory';\r\nimport Component from 'components/SubmitButton';\r\n\r\n// Field values are valid if they adhere to the field format\r\nconst areAllFieldsValid = (fields) => fields.every(field => field.validityStatus === PROPER_VALUE);\r\n\r\n// Field values approval is marked in 'isApproved' property\r\nconst areAllApprovableFieldsApproved = (fields) => fields.every(field => field.isApproved !== false );\r\n\r\n// Ultimate check of the form data\r\nconst isFormFilledInCorrectly = (state) => {\r\n\tconst formData = state.signup.data;\r\n\tconst indicators = [\r\n\t\tareAllFieldsValid(Object.values(formData)),\r\n\t\tareAllApprovableFieldsApproved(Object.values(formData)),\r\n\t\tformData.password.value === formData.passwordConfirmation.value\r\n\t]\r\n\treturn indicators.every( item => item );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tdisabled: !isFormFilledInCorrectly(state) || state.signup.status.isPending,\r\n\tisPending: state.signup.status.isPending\r\n});\r\n\r\nexport default connect(mapStateToProps)(Component);","import React from 'react';\r\nimport './Demo.view.sass';\r\n\r\nconst View = ({\r\n\tonClick, caption\r\n}) => pug`\r\n\t#FormDemo\r\n\t\ta(onClick=onClick) #{caption}\r\n\t\t.arrow-wrapper\r\n\t\t\t.arrow\r\n\t\t\t\t.pointer\r\n`;\r\n\r\nexport default View;","import { defineMessages } from 'react-intl';\r\nimport cookie from 'js-cookie';\r\n\r\n// Helper to delay execution to imitate long-running operations\r\n// like fetching data\r\nexport function sleeper(ms) {\r\n\treturn new Promise(resolve => setTimeout(() => resolve(), ms));\r\n}\r\n\r\n// Intl messages definition for ajaxErrorParser()\r\nconst messages = defineMessages({\r\n\tserverConnectionError: \"Couldn't connect to server: \\\"{errorMsg}\\\". Please, try again later. If you can't submit the form, please contact us. We bring our apologies for the inconvenience.\",\r\n\tsomethingWentWrong: \"Something went wrong. Probably, due to a server fault or connection problems. Please, try again later. If you can't submit the form, please contact us. We bring our apologies for the inconvenience\"\r\n});\r\n\r\n// A callback for parsing and formatting AJAX errors\r\nexport function ajaxErrorParser(error, intl) {\r\n\tlet err;\r\n\tif ( error.response ) {\r\n\t\t// The request was made and the server responded with a status code\r\n\t\t// that falls out of the range of 2xx\r\n\t\tconsole.log(intl);\r\n\t\tconst errorDetails = error.response.data.details\r\n\t\t\t|| intl.formatMessage(messages.somethingWentWrong);\r\n\r\n\t\terr = `${errorDetails}. ${error.response.status} ${error.response.statusText}`;\r\n\t}\r\n\telse if ( error.request ) {\r\n\t\t// The request was made but no response was received\r\n\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n\t\t// http.ClientRequest in node.js\r\n\t\terr = intl.formatMessage(\r\n\t\t\tmessages.serverConnectionError,\r\n\t\t\t{ errorMsg: error.message }\r\n\t\t);\r\n\t}\r\n\telse {\r\n\t\t// Something happened in setting up the request that triggered an Error\r\n\t\terr = error.message;\r\n\t}\r\n\treturn err;\r\n}\r\n\r\n// Fetch localized messages stored in localStorage\r\nexport function fetchStoredMessages(localeId) {\r\n\t// First, check if there's a 'locale' value in the local storage\r\n\tconst serializedLocale = localStorage.getItem('locale');\r\n\tif ( ! serializedLocale ) return null;\r\n\t\r\n\t// If it's there, check if the data is for the requested locale \r\n\tconst { locale: storedLocaleId, messages } = JSON.parse(serializedLocale);\r\n\tif ( storedLocaleId !== localeId )\r\n\t\treturn null;\r\n\r\n\treturn messages;\r\n}\r\n\r\n\r\n// Init Redux store with locally available data\r\nexport function hydrate(initialState = {}) {\r\n\t// Check if the localized messages are already in the storage\r\n\tconst locale = cookie.get('locale') || 'en';\r\n\tconst messages = fetchStoredMessages(locale);\r\n\r\n\t// Set the cookie for subsequent responses to server\r\n\tcookie.set('locale', locale);\r\n\r\n\tinitialState.i18n = {\r\n\t\t...initialState.i18n,\r\n\t\tlocale,\r\n\t\tmessages\r\n\t}\r\n\r\n\treturn initialState;\r\n}\r\n\r\n\r\n/*\r\n// Scrolls the viewport to put focused element in the middle\r\n// Probably, not the best idea to intervene in user scrolling contols\r\n// so I commented it out\r\n\r\nexport async function scrollIntoElement(e) {\r\n\tconst element = e.target;\r\n\tconst rect = element.getBoundingClientRect();\r\n\tconst viewportHeight = document.documentElement.clientHeight;\r\n\r\n\t// Required offset from the top for the element to be in the center\r\n\tconst offsetY = (viewportHeight - rect.height) / 2;\r\n\t\r\n\t// Difference between needed offset and actual relative position from the top\r\n\tconst deltaY = Math.floor(rect.top - offsetY);\r\n\r\n\tconst transitionTime = 500;\r\n\tconst stepDelay = 5;\r\n\tconst stepsTotal = transitionTime / stepDelay;\r\n\tconst stepSize = Math.ceil(deltaY / stepsTotal);\r\n\r\n\t// console.log(`Total: ${stepsTotal}. Size: ${stepSize}. Initial top: ${rect.top}. Target: ${offsetY}. Initial delta: ${deltaY}`);\r\n\r\n\tsetTimeout( function step(stepsLeft) {\r\n\t\tif ( stepsLeft === 0 ) return;\r\n\t\twindow.scrollBy(0, stepSize);\r\n\t\tsetTimeout(step, stepDelay, --stepsLeft);\r\n\r\n\t\t// const progress = Math.floor(element.getBoundingClientRect().top);\r\n\t\t// const target = Math.floor(offsetY);\r\n\t\t// const delta = Math.floor(element.getBoundingClientRect().top - offsetY);\r\n\t\t// console.log(`Top: ${progress}. Delta: ${delta} (${stepsLeft})`);\r\n\r\n\t}, 0, stepsTotal);\r\n}\r\n*/","import { sleeper } from 'utils'; \r\n\r\n// Fill in the form programmatically one-by-one, typing in\r\n// the characters with a delay\r\nexport async function simulateFormFillIn(sequences, delay) {\r\n\tfor ( let elementId in sequences ) {\r\n\t\tawait runSequence(elementId, sequences[elementId], delay);\r\n\t\tawait sleeper(delay * pauseDelayMultiplier);\r\n\t}\r\n}\r\n\r\n// --- Internals ---\r\n\r\nconst inputEvent = new Event('input', {bubbles: true});\r\nconst blurEvent = new Event('blur', {bubbles: true});\r\nconst focusEvent = new Event('focus', {bubbles: false});\r\nconst fieldBlurDelayMultiplier = 2;\r\nconst pauseDelayMultiplier = 10;\r\n\r\n\r\nfunction putTextInTextarea(element, value) {\r\n\telement.value = value;\r\n}\r\n\r\nasync function simulateTypingTextarea(element, sequence, delay) {\r\n\treturn simulateTyping(putTextInTextarea, element, sequence, delay);\r\n} \r\n\r\nasync function simulateTypingInputElements(element, sequence, delay) {\r\n\treturn simulateTyping(setNativeValue, element, sequence, delay);\r\n}\r\n\r\nasync function simulateTyping(strategy, element, sequence, delay) {\r\n\tfor ( let i = 0; i < sequence.length; i++ ) {\r\n\t\tstrategy(element, sequence.slice(0, i+1));\r\n\t\telement.dispatchEvent(inputEvent);\r\n\t\tawait sleeper(delay);\r\n\t}\r\n}\r\n\r\nfunction clickElement(element) {\r\n\telement.click();\r\n}\r\n\r\nfunction putTextAtOnce(element, value) {\r\n\tsetNativeValue(element, value);\r\n\telement.dispatchEvent(inputEvent);\r\n}\r\n\r\nasync function runSequence(elementId, sequence, delay) {\r\n\tconst element = document.getElementById(elementId);\r\n\r\n\tlet strategy = null;\r\n\tswitch ( sequence.type ) {\r\n\t\tcase \"click\":\r\n\t\t\tstrategy = clickElement;\r\n\t\t\tsequence = null;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"instant\":\r\n\t\t\tstrategy = putTextAtOnce;\r\n\t\t\tsequence = sequence.value;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"textarea\":\r\n\t\t\tstrategy = simulateTypingTextarea;\r\n\t\t\tsequence = sequence.value;\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tstrategy = simulateTypingInputElements;\r\n\t}\r\n\r\n\telement.dispatchEvent(focusEvent);\r\n\telement.focus();\r\n\tawait sleeper(1000);\r\n\tawait strategy(element, sequence, delay);\r\n\tawait sleeper(delay * fieldBlurDelayMultiplier);\r\n\telement.dispatchEvent(blurEvent);\r\n}\r\n\r\nfunction setNativeValue(element, value) {\r\n\tconst valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\r\n\tconst prototype = Object.getPrototypeOf(element);\r\n\tconst prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, 'value').set;\r\n\r\n\tif ( valueSetter && valueSetter !== prototypeValueSetter ) {\r\n\t\tprototypeValueSetter.call(element, value);\r\n\t} else {\r\n\t\tvalueSetter.call(element, value);\r\n\t}\r\n}\r\n\r\n","import React from 'react';\r\nimport View from './Demo.view';\r\nimport { simulateFormFillIn } from './Demo.utils';\r\n\r\nconst Container = ({\r\n\tcaption\r\n}) => {\r\n\tconst onDemo = async () => {\r\n\t\t// Data to fill in\r\n\t\tconst formData = {\r\n\t\t\t\"firstname\": \"Linus\",\r\n\t\t\t\"lastname\": \"Torvalds\",\r\n\t\t\t\"username\": \"linus-torvalds\",\r\n\t\t\t\"password\": \"linus-torvalds\",\r\n\t\t\t\"passwordConfirmation\": \"linus-torvalds\",\r\n\t\t\t\"email\": \"torvalds@linux.org\",\r\n\t\t\t\"newsletters\": {\r\n\t\t\t\ttype: \"click\"\r\n\t\t\t},\r\n\t\t\t\"phone\": \"+1 702-355-88-92\",\r\n\t\t\t\"birthdate\": {\r\n\t\t\t\ttype: \"instant\",\r\n\t\t\t\tvalue: \"1969-12-28\"\r\n\t\t\t},\r\n\t\t\t\"biography\": {\r\n\t\t\t\ttype: \"textarea\",\r\n\t\t\t\tvalue: \"That's interesting, how did you manage to make it do that?\"\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst characterTypingDelay = 100;\r\n\r\n\t\tawait simulateFormFillIn(formData, characterTypingDelay);\r\n\t}\r\n\r\n\treturn pug`\r\n\t\tView(\r\n\t\t\tonClick=onDemo\r\n\t\t\tcaption=caption\r\n\t\t)\r\n\t`;\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FadeIn from 'react-fade-in';\r\nimport { Container, Row, Col, Card, CardTitle, CardText, Form, FormText, Alert } from 'reactstrap';\r\nimport './SignupForm.view.sass';\r\n\r\n// Form inputs\r\nimport Username from './Username';\r\nimport Password from './Password';\r\nimport PasswordConfirmation from './PasswordConfirmation';\r\nimport Email from './Email';\r\nimport Phone from './Phone';\r\nimport Birthdate from './Birthdate';\r\nimport Newsletters from './Newsletters';\r\nimport Biography from './Biography';\r\nimport PersonalInformationProcessing from './PersonalInformationProcessing';\r\nimport Photo from './Photo';\r\nimport Firstname from './Firstname';\r\nimport Lastname from './Lastname';\r\n\r\n// Other controls\r\nimport SubmitButton from './SubmitButton';\r\nimport ErrorDisplay from '../ErrorDisplay';\r\nimport Demo from './Demo';\r\n\r\nimport { defineMessages } from 'react-intl';\r\n\r\nconst messages = defineMessages({\r\n\tsignupFormTitle: \"Sign Up\",\r\n\tsignupFormHint: \"You need to provide some personal information. Please, fill in the form below\",\r\n\tfirstNameLabel: \"Given name\",\r\n\tlastNameLabel: \"Family name\",\r\n\tuserIdLabel: \"Username\",\r\n\tuserIdHint: \"User identifier. Has to be composed of lowercase latin letters and/or digits. Нyphen is allowed. Should start with a letter and end with a letter or a digit. Minimim - 5 symbols. For example, 'giant-66'\",\r\n\tpasswordLabel: \"Password\",\r\n\tpasswordHint: \"Only latin letters, digits and special characters (for example, :, ', >, <, =, +, ., &, %, $, #, @, !, *, ), (, -, ~, [, ], /, \\\\\\\\, \\\\{, \\\\}, _, ^). Minimum 8 characters. At least two character types should be used\",\r\n\tpasswordConfirmationLabel: \"Password confirmation\",\r\n\tpasswordConfirmationHint: \"Please, confirm the above entered password\",\r\n\temailLabel: \"Email\",\r\n\temailHint: \"We use the email for password restoration and critical notifications. No unnecessary newsletters\",\r\n\tnewslettersLabel: \"Newsletters\",\r\n\tnewslettersHint: \"Switch on if you want to keep up with us\",\r\n\tphoneLabel: \"Phone number\",\r\n\tphoneHint: \"Phone number in the following format: <country code> <number>, for example, +7 926-840-55-49. Minimum 5 characters\",\r\n\tbirthdateLabel: \"Birthdate\",\r\n\tbirthdateHint: \"Please, choose the date from the popup calendar\",\r\n\tbiographyLabel: \"Short biography\",\r\n\tphotoLabel: \"Photo\",\r\n\tphotoHint: \"PNG and JPEG files only. Maximum size - 5 MB\",\r\n\tpersonalInformationProcessingLabel: \"I give my consent to process my personal data\",\r\n\tpersonalInformationProcessingHint: \"According to Russia's federal law from 27/07/2006 number 152-FZ 'On personal data'\",\r\n\tsubmitButtonCaption: \"Sign up\",\r\n\tsubmitButtonInProgressCaption: \"Sending\",\r\n\tsignupErrorTitle: \"Sign up error\",\r\n\talreadySignedUp: \"Already signed up?\",\r\n\tloginLinkCaption: \"Log in\",\r\n\tsignupSuccessTitle: \"Signed up successfully!\",\r\n\tsignupSuccessMessage: \"You're registered. Please, log in to your account\",\r\n\tbtnDemoCaption: \"Demo\",\r\n});\r\n\r\nconst View = ({\r\n\tintl: { formatMessage }, onSubmit, isPending, externalError, isRegistered, steps\r\n}) => pug`\r\n\t#SignupForm\r\n\t\tFadeIn(delay=500)\r\n\t\t\tContainer\r\n\t\t\t\tRow\r\n\t\t\t\t\tCol.mx-auto\r\n\t\t\t\t\t\tif ! isRegistered\r\n\t\t\t\t\t\t\tDemo(caption=formatMessage(messages.btnDemoCaption))\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tCard(body)\r\n\t\t\t\t\t\t\t\tCardTitle.mb-1 #{formatMessage(messages.signupFormTitle)}\r\n\r\n\t\t\t\t\t\t\t\tCardText.d-block.text-muted.mt-0.mb-5 #{formatMessage(messages.signupFormHint)}\r\n\r\n\t\t\t\t\t\t\t\tForm(onSubmit=onSubmit)\r\n\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\tCol(md=6).mb-5.mb-md-0\r\n\t\t\t\t\t\t\t\t\t\t\tFirstname(label=formatMessage(messages.firstNameLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\tLastname(label=formatMessage(messages.lastNameLabel))\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[0])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tUsername(label=formatMessage(messages.userIdLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.userIdHint)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPassword(label=formatMessage(messages.passwordLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.passwordHint)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[1])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPasswordConfirmation(label=formatMessage(messages.passwordConfirmationLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.passwordConfirmationHint)}\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[2])\r\n\t\t\t\t\t\t\t\t\t\tRow#field-email\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tEmail(label=formatMessage(messages.emailLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.emailHint)}\r\n\r\n\t\t\t\t\t\t\t\t\t\tRow#field-newsletters\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tNewsletters(label=formatMessage(messages.newslettersLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.newslettersHint)} \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[3])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPhone(label=formatMessage(messages.phoneLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.phoneHint)}\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[4])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tBirthdate(label=formatMessage(messages.birthdateLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.birthdateHint)}\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[5])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol\r\n\t\t\t\t\t\t\t\t\t\t\t\tBiography(label=formatMessage(messages.biographyLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[6])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPhoto(label=formatMessage(messages.photoLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.photoHint)} \r\n\r\n\t\t\t\t\t\t\t\t\t\tRow#field-personal-information-processing\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPersonalInformationProcessing(label=formatMessage(messages.personalInformationProcessingLabel))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.personalInformationProcessingHint)}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t#SubmitButton\r\n\t\t\t\t\t\t\t\t\t\t\tSubmitButton.d-block.w-100(\r\n\t\t\t\t\t\t\t\t\t\t\t\tisPending=true\r\n\t\t\t\t\t\t\t\t\t\t\t\tcaption=formatMessage(messages.submitButtonCaption)\r\n\t\t\t\t\t\t\t\t\t\t\t\tinProgressCaption=formatMessage(messages.submitButtonInProgressCaption)\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps.showProceedButton)\r\n\t\t\t\t\t\t\t\t\t\ta.proceedBtn &darr;\r\n\r\n\t\t\t\t\t\t\t\t\tif externalError\r\n\t\t\t\t\t\t\t\t\t\tErrorDisplay(title=formatMessage(messages.signupErrorTitle) errorMsg=externalError)\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tFormText.mt-3.float-right #{formatMessage(messages.alreadySignedUp)}\r\n\t\t\t\t\t\t\t\t\t\t| \r\n\t\t\t\t\t\t\t\t\t\tLink(to=\"/login/\") #{formatMessage(messages.loginLinkCaption)}\r\n\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\tCol(md=8 lg=6 xl=5).mx-auto\r\n\t\t\t\t\t\t\t\t\tAlert.p-5(color=\"primary\")\r\n\t\t\t\t\t\t\t\t\t\th4.alert-heading #{formatMessage(messages.signupSuccessTitle)}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tp #{formatMessage(messages.signupSuccessMessage)}\r\n\r\n\t\t\t\t\t\t\t\t\t\tLink.btn.btn-lg.btn-primary.w-100(to=\"/\") #{formatMessage(messages.loginLinkCaption)}\t\t\t\t\t\t\r\n`;\r\n\r\nexport default View;","import View from './SignupForm.view';\r\nimport { intlShape, injectIntl } from 'react-intl';\r\n\r\nView.propTypes = {\r\n\tintl: intlShape.isRequired\r\n}\r\n\r\nexport default injectIntl(View);\r\n\r\n","export const actionTypes = {\r\n\tFORM_SUBMIT: \t\t\t'FORM_SUBMIT',\r\n\tFORM_SUBMIT_RESPONSE: \t'FORM_SUBMIT_RESPONSE',\r\n\tFORM_SUBMIT_FAILURE: \t'FORM_SUBMIT_FAILURE',\r\n\tFORM_RESET: \t\t\t'FORM_RESET', \r\n}\r\n\r\nexport const onSubmit = () => ({\r\n\ttype: actionTypes.FORM_SUBMIT\r\n});\r\n\r\nexport const onSubmitResponse = (response) => ({\r\n\ttype: actionTypes.FORM_SUBMIT_RESPONSE,\r\n\tresponse: response.data\r\n});\r\n\r\nexport const onSubmitFailure = (error) => ({\r\n\ttype: actionTypes.FORM_SUBMIT_FAILURE,\r\n\texternalError: error\r\n});\r\n\r\nexport const onSubmitFormReset = () => ({\r\n\ttype: actionTypes.FORM_RESET\r\n});\r\n\r\n","import { connect } from 'react-redux';\r\nimport Form from './SignupForm.container';\r\nimport { onSubmit } from './SignupForm.actions';\r\n\r\nfunction setVisibilityFilter(signupState) {\r\n\tlet filter = [];\r\n\tfor ( let i = 0; i < signupState.status.step; i++ ) {\r\n\t\tfilter.push('revealed');\r\n\t}\r\n\tconst currentKeyField = signupState.data[signupState.status.currentAwaitingKeyField];\r\n\tconst fieldValueIsProper = currentKeyField.validityStatus === \"PROPER_VALUE\";\r\n\tconst fieldIsNotPending = ! currentKeyField.isPending === true;\r\n\tconst fieldIsBeingEdited = ! currentKeyField.isTypingFinished;\r\n\r\n\tfilter.showProceedButton = fieldValueIsProper && fieldIsNotPending && fieldIsBeingEdited ? 'revealed' : '';\r\n\r\n\treturn filter;\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisPending: state.signup.status.isPending,\r\n\tisRegistered: state.signup.status.isRegistered,\r\n\texternalError: state.signup.status.externalError,\r\n\tsteps: setVisibilityFilter(state.signup)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tonSubmit: (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tdispatch(onSubmit());\r\n\t},\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import React from 'react';\r\nimport { Spinner } from 'reactstrap';\r\nimport './FullscreenSpinner.view.sass';\r\n\r\nconst View = ({\r\n\tcaption\r\n}) => pug`\r\n\t#FullscreenSpinner\r\n\t\tSpinner(size=\"lg\" color=\"primary\" type=\"grow\")\r\n\t\t.caption.w-100.text-center.text-primary #{caption}\r\n`;\r\n\r\nexport default View;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './LogoutButton.view.sass';\r\n\r\nconst View = ({\r\n\tonLogout, caption\r\n}) => pug`\r\n\t#LogoutButton\r\n\t\tButton(onClick=onLogout) #{caption}\r\n`;\r\n\r\nexport default View;","import { connect } from 'react-redux';\r\nimport View from './LogoutButton.view';\r\nimport { onLogout } from 'components/Auth/Auth.actions';\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tonLogout: () => dispatch(onLogout())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(View);","import React from 'react';\r\nimport { Container, Row, Col, Card, CardTitle, CardText, CustomInput } from 'reactstrap';\r\nimport FadeIn from 'react-fade-in';\r\nimport FullscreenSpinner from 'components/FullscreenSpinner';\r\nimport ErrorDisplay from 'components/ErrorDisplay';\r\nimport LogoutButton from './LogoutButton';\r\nimport './Dashboard.view.sass';\r\nimport { injectIntl, defineMessages } from 'react-intl';\r\n\r\nconst messages = defineMessages({\r\n\tdataLoadingSpinnerMsg: \"Loading data...\",\r\n\tdataLoadingErrorTitle: \"Error loading profile data\",\r\n\tlogoutButtonCaption: \"Log out\",\r\n\tnewslettersStatusIndicatorLabel: \"Newsletters\",\r\n\tbiographyBlockTitle: \"Short biography\",\r\n\tbirthdate: \"{birthdate, date, medium} ({age, plural, offset: 1 =0 {infant} other {{age, number} years old}})\"\r\n});\r\n\r\nconst View = ({\r\n\tintl: { formatMessage }, data, isPending, externalError\r\n}) => pug`\r\n\t#Dashboard\r\n\t\tif isPending\r\n\t\t\tFullscreenSpinner(caption=formatMessage(messages.dataLoadingSpinnerMsg))\r\n\r\n\t\telse if externalError\r\n\t\t\tContainer\r\n\t\t\t\tRow\r\n\t\t\t\t\tCol(sm=8 xl=6).mx-auto\r\n\t\t\t\t\t\tErrorDisplay(title=formatMessage(messages.dataLoadingErrorTitle) errorMsg=externalError)\r\n\r\n\t\telse if data\r\n\t\t\tFadeIn(delay=500)\r\n\t\t\t\tContainer\r\n\t\t\t\t\tRow\r\n\t\t\t\t\t\tCol(md=6 lg=4)\r\n\t\t\t\t\t\t\t.photo.proportional.proportional-square\r\n\t\t\t\t\t\t\t\t.proportional-inner.rounded-circle\r\n\t\t\t\t\t\t\t\t\timg(src=data.photo)\r\n\r\n\t\t\t\t\t\t\tLogoutButton(caption=formatMessage(messages.logoutButtonCaption))\r\n\r\n\t\t\t\t\t\tCol(md=6 lg=4)\r\n\t\t\t\t\t\t\t.infoblock\r\n\t\t\t\t\t\t\t\tCard\r\n\t\t\t\t\t\t\t\t\tCardTitle #{data.firstname} #{data.lastname}\r\n\t\t\t\t\t\t\t\t\tCardText #{formatMessage(messages.birthdate, {birthdate: data.birthdate, age: data.age})}\r\n\r\n\t\t\t\t\t\t\t\tCard\r\n\t\t\t\t\t\t\t\t\tCardText #{data.phone}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tCard\r\n\t\t\t\t\t\t\t\t\tCardText #{data.email}\r\n\t\t\t\t\t\t\t\t\tdiv\r\n\t\t\t\t\t\t\t\t\t\tCustomInput(\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"switch\"\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultChecked=data.newsletters\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=formatMessage(messages.newslettersStatusIndicatorLabel))\r\n\r\n\t\t\t\t\t\tif data.biography\r\n\t\t\t\t\t\t\tCol(lg=4)\r\n\t\t\t\t\t\t\t\tCard.biography.infoblock\r\n\t\t\t\t\t\t\t\t\tCardTitle #{formatMessage(messages.biographyBlockTitle)}\r\n\t\t\t\t\t\t\t\t\tCardText #{data.biography}\r\n`;\r\n\r\nexport default injectIntl(View);","export function postProcessUserProfile(userProfileInfo)\r\n{\r\n\t// Create the Date object\r\n\tuserProfileInfo.birthdate = new Date(userProfileInfo.birthdate);\r\n\t\r\n\t// Calculate user's age\r\n\tuserProfileInfo.age = calculateAge(userProfileInfo.birthdate);\r\n\t\r\n\treturn userProfileInfo;\r\n}\r\n\r\nfunction calculateAge(birthdate) {\r\n\tconst ageDiffMs = Date.now() - birthdate.getTime();\r\n\tconst ageDate = new Date(ageDiffMs);\r\n\treturn Math.abs(ageDate.getUTCFullYear() - 1970);\r\n}","import { connect } from 'react-redux';\r\nimport View from './Dashboard.view';\r\nimport { postProcessUserProfile } from './Dashboard.utils';\r\n\r\nconst mapStateToProps = (state) => {\r\n\tlet { data: userProfile, isPending, externalError } = state.userProfile;\r\n\tif ( userProfile ) {\r\n\t\tuserProfile = postProcessUserProfile(userProfile);\r\n\t}\r\n\treturn {\r\n\t\tdata: userProfile,\r\n\t\tisPending,\r\n\t\texternalError\r\n\t};\r\n}\r\n\r\nexport default connect(mapStateToProps)(View);","import { connect } from 'react-redux';\r\nimport Component from './Auth.container';\r\nimport { onAuthResponse } from './Auth.actions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\ttoken: state.auth.token\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tupdateReduxAuthState: (token) => {\r\n\t\tdispatch(onAuthResponse(token));\r\n\t}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","import { useEffect } from 'react';\r\n\r\nexport default ({\r\n\tisAuthenticated, token,\r\n\tupdateReduxAuthStatem\r\n}) => {\t\r\n\tuseEffect(() => {\r\n\t\t// Store the token locally when authenticated \r\n\t\tif ( isAuthenticated && token ) {\r\n\t\t\tlocalStorage.setItem('jwt', token);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Remove token otherwise (logout requested)\r\n\t\t\tlocalStorage.removeItem('jwt');\r\n\t\t}\r\n\t}, [isAuthenticated, token]);\r\n\r\n\treturn null;\r\n}","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './LocaleSwitcher.view.sass';\r\n\r\nconst View = ({\r\n\ttitle, switchTo, onClick\r\n}) => pug`\r\n\t#LocaleSwitcher\r\n\t\tButton(type=\"text\" value=switchTo, onClick=onClick) #{title}\r\n`;\r\n\r\nexport default View;","export const actionTypes = {\r\n\tSWITCH_LOCALE_REQUEST: \t\"SWITCH_LOCALE_REQUEST\",\r\n\tSWITCH_LOCALE_RESPONSE: \"SWITCH_LOCALE_RESPONSE\",\r\n\tSWITCH_LOCALE_FAILURE: \t\"SWITCH_LOCALE_FAILURE\",\r\n\tSWITCH_LOCALE_RESET: \t\"SWITCH_LOCALE_RESET\"\r\n}\r\n\r\nexport const onSwitchLocaleRequest = (localeId) => ({\r\n\ttype: actionTypes.SWITCH_LOCALE_REQUEST,\r\n\tlocaleId\r\n});\r\n\r\nexport const onSwitchLocaleResponse = (data) => ({\r\n\ttype: actionTypes.SWITCH_LOCALE_RESPONSE,\r\n\tdata\r\n});\r\n\r\nexport const onSwitchLocaleFailure = (error) => ({\r\n\ttype: actionTypes.SWITCH_LOCALE_FAILURE,\r\n\terror\r\n});\r\n\r\nexport const onSwitchLocaleReset = () => ({\r\n\ttype: actionTypes.SWITCH_LOCALE_RESET\r\n});\r\n\r\nexport default {\r\n\tonSwitchLocaleRequest,\r\n\tonSwitchLocaleResponse,\r\n\tonSwitchLocaleFailure,\r\n\tonSwitchLocaleReset\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport View from \"./LocaleSwitcher.view\";\r\nimport { onSwitchLocaleRequest } from 'components/IntlProvider/IntlProvider.actions';\r\n\r\nconst mapStateToProps = state => {\r\n\tconst { locale } = state['i18n'];\r\n\treturn {\r\n\t\ttitle: locale === 'en' ? 'На русском' : 'Switch to English',\r\n\t\tswitchTo: locale === 'en' ? 'ru' : 'en'\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tonClick: (e) => dispatch(onSwitchLocaleRequest(e.target.value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(View);","import React from 'react';\nimport { defineMessages } from 'react-intl';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport LoginForm from \"components/LoginForm\";\nimport SignupForm from \"components/SignupForm\";\nimport Dashboard from \"components/Dashboard\";\nimport ErrorDisplay from 'components/ErrorDisplay';\nimport Auth from \"components/Auth\";\nimport LocaleSwitcher from \"components/LocaleSwitcher\";\nimport FullscreenSpinner from 'components/FullscreenSpinner';\nimport { Container, Row, Col } from \"reactstrap\";\nimport './App.view.sass';\n\nconst messages = defineMessages({\n\tlocaleSwitchErrorTitle: \"Couldn't switch locale\"\n});\n\nconst AppView = ({\n\tintl,\n\tisAuthenticated,\n\tisLocaleSwitchPending,\n\tlocaleSwitchError,\n}) => pug`\n\t#app\n\t\tAuth\n\n\t\tif isLocaleSwitchPending\n\t\t\tFullscreenSpinner\n\n\t\telse\n\t\t\t.localeSwitchWrapper\n\t\t\t\tContainer\n\t\t\t\t\tRow\n\t\t\t\t\t\tCol\n\t\t\t\t\t\t\tif localeSwitchError\n\t\t\t\t\t\t\t\tErrorDisplay(title=intl.formatMessage(messages.localeSwitchErrorTitle) errorMsg=localeSwitchError)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t.d-flex.justify-content-end\n\t\t\t\t\t\t\t\t\tLocaleSwitcher\n\n\t\t\tSwitch\n\t\t\t\tLoginRoute(exact=true path=\"/login/\" isAuthenticated=isAuthenticated)\n\n\t\t\t\tRoute(exact=true path=\"/signup/\" component=SignupForm)\n\t\t\t\t\n\t\t\t\tProtectedRoute(exact=true path=\"/dashboard/\" component=Dashboard isAuthenticated=isAuthenticated redirectTo=\"/login\")\n\t\t\t\t\n\t\t\t\tDefaultRoute(isAuthenticated=isAuthenticated)\n`;\n\nexport default AppView;\n\nconst ProtectedRoute = ({\n\tcomponent: Component,\n\texact, path, isAuthenticated, redirectTo\n}) => {\n\tconst actualComponent = isAuthenticated\n\t\t? () => pug`Component()`\n\t\t: () => pug`Redirect(to=redirectTo)`;\n\treturn pug`\n\t\tRoute(exact=exact path=path render=actualComponent)\n\t`\n};\n\nconst DefaultRoute = ({isAuthenticated}) => {\n\tconst actualComponent = isAuthenticated\n\t\t? () => pug`Redirect(to=\"/dashboard\")`\n\t\t: () => pug`Redirect(to=\"/login\")`;\n\treturn pug`\n\t\tRoute(exact=true path=\"/\" render=actualComponent)\n\t`;\n}\n\nconst LoginRoute = ({\n\tisAuthenticated, exact, path\n}) => {\n\tconst actualComponent = isAuthenticated\n\t\t? () => pug`Redirect(to=\"/dashboard\")`\n\t\t: () => pug`LoginForm`;\n\treturn pug`\n\t\tRoute(exact=exact path=path render=actualComponent)\n\t`;\n}","import React, { useEffect } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { withRouter } from 'react-router';\r\nimport View from './App.view';\r\n\r\nconst Container = ({\r\n\tisAuthenticated,\r\n\tisLocaleSwitchPending,\r\n\tlocaleSwitchError,\r\n\tfetchUserProfile,\r\n\tlogicMiddleware,\r\n\tappContext,\r\n\tintl,\r\n\thistory,\r\n\tresetUI,\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\t// Utilize the global 'appContext' variable from the root module\r\n\t\t// to pass changing 'intl' to redux-logic 'process()' handler\r\n\t\t// to enable translations in utility functions outside components\r\n\t\tlogicMiddleware.addDeps({ appContext });\r\n\t\tappContext.intl = intl;\r\n\t}, [appContext, intl, logicMiddleware]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Pull out the user profile data right after the user authenticated\r\n\t\tif ( isAuthenticated ) {\r\n\t\t\tfetchUserProfile();\r\n\t\t}\r\n\t}, [isAuthenticated, fetchUserProfile]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// Subscribe to URL change events to reset UI every time\r\n\t\t// user travels through screens\r\n\t\tconst unsubscribe = history.listen( (location, action) => {\r\n\t\t\tresetUI();\r\n\t\t});\r\n\t\treturn unsubscribe;\r\n\t}, [history, resetUI]);\r\n\t\r\n\treturn pug`\r\n\t\tView(\r\n\t\t\tisAuthenticated=isAuthenticated\r\n\t\t\tisLocaleSwitchPending=isLocaleSwitchPending\r\n\t\t\tlocaleSwitchError=localeSwitchError\r\n\t\t\tintl=intl\r\n\t\t)\r\n\t`;\r\n}\r\n\r\nexport default injectIntl(withRouter(Container));","export const actionTypes = {\r\n\t'DATA_FETCH_REQUEST': 'DATA_FETCH_REQUEST',\r\n\t'DATA_FETCH_RESPONSE': 'DATA_FETCH_RESPONSE',\r\n\t'DATA_FETCH_FAILURE': 'DATA_FETCH_FAILURE',\r\n\t'UI_RESET': 'UI_RESET'\r\n}\r\n\r\nexport const onDataFetchRequest = () => ({\r\n\ttype: actionTypes.DATA_FETCH_REQUEST,\r\n});\r\n\r\nexport const onDataFetchResponse = (data) => ({\r\n\ttype: actionTypes.DATA_FETCH_RESPONSE,\r\n\tdata\r\n});\r\n\r\nexport const onDataFetchFailure = (error) => ({\r\n\ttype: actionTypes.DATA_FETCH_FAILURE,\r\n\terror\r\n});\r\n\r\nexport const onUiReset = () => ({\r\n\ttype: actionTypes.UI_RESET,\r\n});","import { connect } from 'react-redux';\r\nimport Component from './App.container';\r\nimport { onDataFetchRequest, onUiReset } from './App.actions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\tisLocaleSwitchPending: state.i18n.isPending,\r\n\tlocaleSwitchError: state.i18n.error,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tfetchUserProfile: () => {\r\n\t\tdispatch(onDataFetchRequest());\r\n\t},\r\n\tresetUI: () => {\r\n\t\tdispatch(onUiReset());\r\n\t}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createLogic } from 'redux-logic';\r\nimport { actionTypes, onAuthResponse, onAuthFailure } from './Auth.actions';\r\nimport axios from 'axios';\r\nimport { sleeper, ajaxErrorParser } from 'utils.js';\r\n\r\nconst authLogic = createLogic({\r\n\ttype: actionTypes.AUTH_REQUEST,\r\n\tprocessOptions: {\r\n\t\tsuccessType: \tonAuthResponse,\r\n\t\tfailType: \t\tonAuthFailure\r\n\t},\r\n\tasync process({ action,  appContext: { intl } }) {\r\n\t\tawait sleeper(1000);\r\n\t\ttry {\r\n\t\t\tconst response = await axios({\r\n\t\t\t\turl: \"/api/auth\",\r\n\t\t\t\tparams: action.data\t\t\t\r\n\t\t\t});\r\n\t\t\treturn response.data.data;\r\n\t\t}\r\n\t\tcatch ( error ) {\r\n\t\t\treturn Promise.reject(ajaxErrorParser(error, intl));\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tauthLogic\r\n];","import { createLogic } from 'redux-logic';\r\nimport { actionTypes, onSwitchLocaleResponse, onSwitchLocaleFailure } from './IntlProvider.actions';\r\nimport { sleeper, ajaxErrorParser, fetchStoredMessages } from 'utils';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\n\r\nconst localeSwitchLogic = createLogic({\r\n\ttype: actionTypes.SWITCH_LOCALE_REQUEST,\r\n\tvalidate({ action }, allow, reject) {\r\n\t\t// For English we just alter the locale value in cookies;\r\n\t\t// default messages will be used and locale data is built-in \r\n\t\tif ( action.localeId === 'en' ) {\r\n\t\t\tcookie.set('locale', 'en');\r\n\t\t\tlocalStorage.removeItem('locale');\r\n\t\t\treturn reject(onSwitchLocaleResponse({ locale: 'en' }));\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Also, check if messages are already stored locally\r\n\t\t\tconst messages = fetchStoredMessages(action.localeId);\r\n\t\t\tif ( messages ) {\r\n\t\t\t\tcookie.set('locale', action.localeId);\r\n\t\t\t\treturn reject(onSwitchLocaleResponse({ locale: action.localeId, messages }));\r\n\t\t\t}\r\n\t\t}\r\n\t\tallow(action);\r\n\t},\r\n\tprocessOptions: {\r\n\t\tsuccessType: \tonSwitchLocaleResponse,\r\n\t\tfailType: \t\tonSwitchLocaleFailure\r\n\t},\r\n\tasync process({ action, appContext: { intl } }) {\r\n\t\tawait sleeper(1000);\r\n\t\ttry {\r\n\t\t\tconst response = await axios({\r\n\t\t\t\turl: \"/api/get-locale\",\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tid: action.localeId\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// Save fetched locale locally and yield the data\r\n\t\t\tconst data = response.data.data;\r\n\t\t\tconst serializedLocale = JSON.stringify(data);\r\n\t\t\tlocalStorage.setItem('locale', serializedLocale);\r\n\t\t\treturn Promise.resolve(data);\r\n\t\t}\r\n\t\tcatch ( error ) {\r\n\t\t\treturn Promise.reject(ajaxErrorParser(error, intl));\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tlocaleSwitchLogic,\r\n];","export const actionTypes = {\r\n\tREQUEST_APPROVAL: \t\t\t'REQUEST_APPROVAL',\r\n\tRESPONSE_APPROVAL: \t\t\t'RESPONSE_APPROVAL',\r\n\tRESPONSE_APPROVAL_ERROR: \t'RESPONSE_APPROVAL_ERROR'\r\n}\r\n\r\nexport function getActions(fieldName)\r\n{\r\n\tconst requestApproval = () => ({\r\n\t\ttype: actionTypes.REQUEST_APPROVAL,\r\n\t\tfieldName\r\n\t});\r\n\r\n\tconst responseApproval = response => ({\r\n\t\ttype: actionTypes.RESPONSE_APPROVAL,\r\n\t\tfieldName,\r\n\t\tresponse\r\n\t});\r\n\r\n\tconst responseApprovalError = errorMsg => ({\r\n\t\ttype: actionTypes.RESPONSE_APPROVAL_ERROR,\r\n\t\tfieldName,\r\n\t\texternalError: errorMsg\r\n\t});\r\n\r\n\treturn {\r\n\t\trequestApproval,\r\n\t\tresponseApproval,\r\n\t\tresponseApprovalError,\r\n\t}\r\n}","import { createLogic } from 'redux-logic';\r\nimport { PROPER_VALUE } from '../ValidateableInput/ValidateableInput.factory';\r\nimport { getActions } from './ApprovableInput.actions';\r\nimport { actionTypes as validateableInputActionTypes } from '../ValidateableInput/ValidateableInput.actions';\r\nimport axios from 'axios';\r\nimport { sleeper, ajaxErrorParser } from 'utils';\r\n\r\nconst fieldApprovalLogic = createLogic({\r\n\ttype: validateableInputActionTypes.FIELD_EDITED,\r\n\tvalidate({ getState, action, ctx }, allow, reject)\r\n\t{\r\n\t\t// Only apply the logic for the following fields\r\n\t\tconst approvableFields = [\r\n\t\t\t'username',\r\n\t\t\t'email',\r\n\t\t\t'phone',\r\n\t\t];\r\n\t\tconst fieldName = action.fieldName;\r\n\t\tif ( ! approvableFields.some( field => field === fieldName ) ) {\r\n\t\t\treturn reject(action);\r\n\t\t}\r\n\t\tconst state = getState();\r\n\t\tconst { validityStatus, value } = state.signup.data[fieldName];\r\n\t\t\r\n\t\t// If the field is filled in properly:\t\t\r\n\t\tif ( validityStatus === PROPER_VALUE )\r\n\t\t{\r\n\t\t\t// 1. Get action creators for the field from a factory,\r\n\t\t\t//    because field's name needs to be sticked to\r\n\t\t\t//    the action by design\r\n\t\t\tconst { requestApproval, responseApproval, responseApprovalError } = getActions(fieldName);\r\n\t\t\t\r\n\t\t\t// 2. Pass that data to the 'ctx' variable to use it\r\n\t\t\t//    later in process() handler\r\n\t\t\tObject.assign(ctx, { requestApproval, responseApproval, responseApprovalError, fieldName, value });\r\n\t\t\t\r\n\t\t\t// Allow processing the action and forward it to the next middleware\r\n\t\t\tallow(action);\r\n\t\t}\r\n\t\telse reject(action); // bypass process() handler, skip to next middleware\r\n\t},\r\n\tasync process({ ctx, appContext: { intl } }, dispatch, done)\r\n\t{\r\n\t\tdispatch(ctx.requestApproval());\r\n\t\tconst config = {\r\n\t\t\turl: \"/api/check-uniqueness\",\r\n\t\t\tparams: {\r\n\t\t\t\tname: ctx.fieldName,\r\n\t\t\t\tvalue: ctx.value\r\n\t\t\t}\r\n\t\t};\r\n\t\tawait sleeper(1000);\r\n\t\ttry {\r\n\t\t\tconst response = await axios(config);\r\n\t\t\tdispatch(ctx.responseApproval(response.data));\r\n\t\t}\r\n\t\tcatch ( error ) {\r\n\t\t\tconst err = ajaxErrorParser(error, intl); \r\n\t\t\tdispatch(ctx.responseApprovalError(err));\r\n\t\t}\r\n\t\tdone();\r\n\t}\r\n});\r\n\r\nexport default fieldApprovalLogic;","import { createLogic } from 'redux-logic';\r\nimport { PROPER_VALUE } from '../ValidateableInput/ValidateableInput.factory';\r\nimport { statusCodes } from './PasswordConfirmation.container';\r\nimport { passwordsCheckedAction, passwordValidityError } from './PasswordConfirmation.actions';\r\nimport { actionTypes as validateableInputActionTypes, getActions } from '../ValidateableInput/ValidateableInput.actions';\r\n\r\nconst comparePasswordsOnFinishedEditing = createLogic({\r\n\ttype: validateableInputActionTypes.FIELD_EDITED,\r\n\tvalidate({ getState, action }, allow, reject) {\r\n\t\tif ( action.fieldName === 'passwordConfirmation' ) {\r\n\t\t\t// Don't touch an empty field\r\n\t\t\tconst { value } = getState().signup.data['passwordConfirmation'] || {};\r\n\t\t\tif ( value && value.length ) {\r\n\t\t\t\tallow(action);\r\n\t\t\t}\r\n\t\t}\r\n\t\treject(action);\r\n\t},\r\n\tprocess({ getState, action }) {\r\n\t\tconst state = getState();\r\n\t\t// Getting the values and statuses for password and its confirmation\r\n\t\tconst { validityStatus: passwordValidityStatus, value: passwordValue } = state.signup.data['password'];\r\n\t\tconst { validityStatus: passwordConfirmationValidityStatus, value: passwordConfirmationValue } = state.signup.data['passwordConfirmation'] || {};\r\n\t\t// If the both password fields are filled in correctly\r\n\t\tif \t(\r\n\t\t\t\tpasswordValidityStatus === PROPER_VALUE \r\n\t\t\t\t&&\r\n\t\t\t\tpasswordConfirmationValidityStatus === PROPER_VALUE\r\n\t\t\t) {\r\n\t\t\tconst areEqual = passwordValue === passwordConfirmationValue;\r\n\t\t\treturn passwordsCheckedAction(areEqual);\r\n\t\t}\r\n\t\telse return passwordValidityError();\r\n\t}\r\n});\r\n\r\nconst clearFieldOnPasswordChange = createLogic({\r\n\ttype: validateableInputActionTypes.VALUE_CHANGED,\r\n\tvalidate({ getState, action }, allow, reject) {\r\n\t\taction.fieldName === 'password'\r\n\t\t\t? allow(action)\r\n\t\t\t: reject(action);\r\n\t},\r\n\tprocess({ getState, action }, dispatch, done) {\r\n\t\tconst { onChange } = getActions('passwordConfirmation');\r\n\t\tdispatch(onChange('', statusCodes.E_EMPTY));\r\n\t\tdone();\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tcomparePasswordsOnFinishedEditing,\r\n\tclearFieldOnPasswordChange\r\n];","export const PASSWORDS_CHECKED \t\t= 'PASSWORDS_CHECKED';\r\nexport const E_PASSWORD_NOT_VALID \t= 'E_PASSWORD_NOT_VALID';\r\n\r\nconst passwordsCheckedAction = areEqual => ({\r\n\ttype: PASSWORDS_CHECKED,\r\n\tareEqual\r\n});\r\n\r\nconst passwordValidityError = () => ({\r\n\ttype: E_PASSWORD_NOT_VALID\r\n});\r\n\r\nexport {\r\n\tpasswordsCheckedAction,\r\n\tpasswordValidityError\r\n}","import { sha256 } from 'js-sha256';\r\n\r\n// Preprocesses form data obtained from Redux store\r\n// to be submitted to the server\r\nexport function exractFormData(originalFormData)\r\n{\r\n\t// Fields to extract, except the 'photo' field\r\n\tconst fields = [\r\n\t\t'username',\r\n\t\t'email',\r\n\t\t'phone',\r\n\t\t'newsletters',\r\n\t\t'birthdate',\r\n\t\t'biography',\r\n\t\t'firstname',\r\n\t\t'lastname'\r\n\t];\r\n\r\n\t// Browser's native way to store form data in the \"multipart/form-data\" encoding\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/FormData\r\n\tlet refinedFormData = new FormData();\r\n\tfields.every( item => {\r\n\t\trefinedFormData.set(item, originalFormData[item].value);\r\n\t\treturn true;\r\n\t});\r\n\t\r\n\t// Hashing the password\r\n\trefinedFormData.set('password', sha256(originalFormData['password'].value));\r\n\t\r\n\t// If the user provided a photo, add it to FormData\r\n\tconst photo = originalFormData['photo'].value;\r\n\tif ( photo ) {\r\n\t\trefinedFormData.set('photo', photo);\r\n\t}\r\n\r\n\treturn refinedFormData;\r\n}","import fieldApprovalLogic from './ApprovableInput/ApprovableInput.logic';\r\nimport passwordConfirmationLogic from './PasswordConfirmation/PasswordConfirmation.logic';\r\n\r\nimport { createLogic } from 'redux-logic';\r\nimport { actionTypes, onSubmitResponse, onSubmitFailure } from './SignupForm.actions';\r\nimport axios from 'axios';\r\nimport { exractFormData } from './SignupForm.utils';\r\nimport { sleeper, ajaxErrorParser } from 'utils';\r\n\r\nconst formSubmissionLogic = createLogic({\r\n\ttype: actionTypes.FORM_SUBMIT,\r\n\tprocessOptions: {\r\n\t\tsuccessType: \tonSubmitResponse,\r\n\t\tfailType: \t\tonSubmitFailure\r\n\t},\r\n\tasync process({ getState, appContext: { intl } }) {\r\n\t\tconst data = exractFormData(getState().signup.data);\r\n\t\tawait sleeper(1000);\r\n\t\treturn axios({\r\n\t\t\t\tmethod: \"post\",\r\n\t\t\t\turl: \"/api/put-user-profile\",\r\n\t\t\t\tdata,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\r\n\t\t\t\t},\r\n\t\t\t\ttimeout: 30000\r\n\t\t\t})\r\n\t\t\t.catch( error => Promise.reject(ajaxErrorParser(error, intl)) );\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tformSubmissionLogic,\r\n\tfieldApprovalLogic,\r\n\t...passwordConfirmationLogic\r\n];","import { createLogic } from 'redux-logic';\r\nimport { actionTypes, onDataFetchResponse, onDataFetchFailure } from './App.actions';\r\nimport { sleeper, ajaxErrorParser } from 'utils';\r\nimport { defineMessages } from 'react-intl';\r\nimport axios from 'axios';\r\nimport { onAuthReset, onLogout } from 'components/Auth/Auth.actions';\r\nimport { onSubmitFormReset } from 'components/SignupForm/SignupForm.actions';\r\nimport { onSwitchLocaleReset } from 'components/IntlProvider/IntlProvider.actions';\r\n\r\nconst messages = defineMessages({\r\n\tnotAuthorizedException: \"Not authorized. Probably due to an application error. Try logging in again\"\r\n});\r\n\r\nconst dataFetchLogic = createLogic({\r\n\ttype: actionTypes.DATA_FETCH_REQUEST,\r\n\tasync process({ action, getState, appContext: { intl }}, dispatch, done) \r\n\t{\r\n\t\tconst { token } = getState().auth;\r\n\t\tif ( ! token ) {\r\n\t\t\treturn Promise.reject(intl.formatMessage(messages.notAuthorizedException));\r\n\t\t}\r\n\t\tawait sleeper(3000);\r\n\t\ttry {\r\n\t\t\tconst response = await axios({\r\n\t\t\t\turl: \"/api/get-user-profile\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `Bearer ${token}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdispatch(onDataFetchResponse(response.data.data));\r\n\t\t}\r\n\t\tcatch ( error ) {\r\n\t\t\tdispatch(onDataFetchFailure(ajaxErrorParser(error, intl)));\r\n\t\t\tawait sleeper(3000);\r\n\t\t\tdispatch(onLogout());\r\n\t\t}\r\n\t\tdone();\r\n\t}\r\n});\r\n\r\nconst uiResetLogic = createLogic({\r\n\ttype: actionTypes.UI_RESET,\r\n\tprocess(deps, dispatch, done) {\r\n\t\tdispatch(onAuthReset());\r\n\t\tdispatch(onSubmitFormReset());\r\n\t\tdispatch(onSwitchLocaleReset());\r\n\t\tdone();\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tdataFetchLogic,\r\n\tuiResetLogic\r\n];","import authLogic from 'components/Auth/Auth.logic';\r\nimport switchLocaleLogic from 'components/IntlProvider/IntlProvider.logic';\r\nimport signupFormLogic from 'components/SignupForm/SignupForm.logic';\r\nimport dataFetchLogic from 'components/App/App.logic';\r\n\r\nexport default [\r\n\t...authLogic,\r\n\t...switchLocaleLogic,\r\n\t...signupFormLogic,\r\n\t...dataFetchLogic,\r\n];","import { createLogicMiddleware } from 'redux-logic';\r\nimport logic from './logic';\r\n\r\nconst logicMiddleware = createLogicMiddleware(logic);\r\n\r\n// Output events in the logic to browser's console\r\nlogicMiddleware.monitor$.subscribe(\r\n\tx => console.log(x)\r\n);\r\n\r\n\r\nexport default logicMiddleware;","import { actionTypes } from './IntlProvider.actions'; \r\n\r\nconst initialState = {\r\n\tlocale: 'en',\r\n\tmessages: null,\r\n\tisPending: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch ( action.type )\r\n\t{\r\n\t\tcase actionTypes.SWITCH_LOCALE_REQUEST:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: true\r\n\t\t\t}\r\n\t\t\r\n\t\tcase actionTypes.SWITCH_LOCALE_RESPONSE:\r\n\t\t\treturn {\r\n\t\t\t\t...action.data,\r\n\t\t\t\tisPending: false\r\n\t\t\t}\r\n\t\t\r\n\t\tcase actionTypes.SWITCH_LOCALE_FAILURE:\r\n\t\tcase actionTypes.SWITCH_LOCALE_RESET:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\terror: action.error\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { actionTypes } from './Auth.actions';\r\n\r\nconst auth = (state = {\r\n\tisAuthenticated: !!localStorage.getItem('jwt'),\r\n\ttoken: localStorage.getItem('jwt')\r\n}, action) => {\r\n\tswitch ( action.type )\r\n\t{\r\n\t\tcase actionTypes.AUTH_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: true\r\n\t\t\t}\r\n\r\n\t\tcase actionTypes.AUTH_RESPONSE:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\r\n\t\tcase actionTypes.AUTH_FAILURE:\t\t\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisAuthenticated: undefined,\r\n\t\t\t\texternalError: action.error,\r\n\t\t\t\ttoken: undefined\r\n\t\t\t}\r\n\r\n\t\tcase actionTypes.AUTH_LOGOUT:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisAuthenticated: false\r\n\t\t\t}\r\n\r\n\t\tcase actionTypes.AUTH_RESET:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texternalError: action.error\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth;","import { actionTypes } from './ApprovableInput.actions';\r\n\r\n// Single field reducer\r\nconst fieldData = (state = {}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.REQUEST_APPROVAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: true\r\n\t\t\t}\r\n\t\tcase actionTypes.RESPONSE_APPROVAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisApproved: action.response.status === 'APPROVED'\r\n\t\t\t}\r\n\t\tcase actionTypes.RESPONSE_APPROVAL_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisApproved: undefined,\r\n\t\t\t\texternalError: action.externalError\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\t\t\r\n\t}\r\n}\r\n\r\n// Universal (any field) reducer that uses\r\n// previously defined single-field reducer\r\nconst data = (state = {}, action) => {\r\n\tif ( !action.fieldName )\r\n\t\treturn state;\r\n\t\r\n\treturn {\r\n\t\t...state,\r\n\t\t[action.fieldName]: fieldData(state[action.fieldName], action)\r\n\t}\t\r\n}\r\n\r\nexport default data;","import { actionTypes } from './ValidateableInput.actions';\r\n\r\n// Single field reducer\r\nconst fieldData = (state = {}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.VALUE_CHANGED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisTypingFinished: false,\r\n\t\t\t\tvalue: action.value,\r\n\t\t\t\tvalidityStatus: action.validityStatus,\r\n\t\t\t\tisApproved: undefined,\r\n\t\t\t\texternalError: ''\r\n\t\t\t}\r\n\t\tcase actionTypes.FIELD_EDITED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisTypingFinished: true\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\t\t\r\n\t}\r\n}\r\n\r\n// Universal (any field) reducer that uses\r\n// previously defined single-field reducer\r\nconst data = (state = {}, action) => {\r\n\tif ( !action.fieldName ) return state;\r\n\treturn {\r\n\t\t...state,\r\n\t\t[action.fieldName]: fieldData(state[action.fieldName], action)\r\n\t}\t\r\n}\r\n\r\nexport default data;","import reduceReducers from 'reduce-reducers';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport approvable from './ApprovableInput/ApprovableInput.reducer';\r\nimport validateable from './ValidateableInput/ValidateableInput.reducer';\r\nimport passwordConfirmation from './PasswordConfirmation/PasswordConfirmation.reducer';\r\n\r\nimport { actionTypes } from './SignupForm.actions';\r\nimport { actionTypes as inputActionTypes } from './ValidateableInput/ValidateableInput.actions';\r\n\r\nimport initialState from 'initialState.json';\r\n\r\nconst status = (state = {}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.FORM_SUBMIT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: true,\r\n\t\t\t\texternalError: undefined\r\n\t\t\t}\r\n\t\tcase actionTypes.FORM_SUBMIT_RESPONSE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisRegistered: action.response.status === 'SUCCESS'\r\n\t\t\t}\r\n\t\tcase actionTypes.FORM_SUBMIT_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisRegistered: undefined,\r\n\t\t\t\texternalError: action.externalError\r\n\t\t\t}\r\n\t\tcase inputActionTypes.FIELD_EDITED:\r\n\t\t\tconst keyFields = \"lastname password passwordConfirmation email phone birthdate biography\".split(\" \");\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texternalError: undefined,\r\n\r\n\t\t\t\tcurrentAwaitingKeyField: ((previousValue) => {\r\n\t\t\t\t\tlet fieldNameIndex = keyFields.indexOf(action.fieldName);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Skip if the field is not a key field\r\n\t\t\t\t\tif ( ! ~ fieldNameIndex )\r\n\t\t\t\t\t\treturn previousValue;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Also skip if it's not the farthest\r\n\t\t\t\t\tif ( fieldNameIndex < keyFields.indexOf(previousValue) )\r\n\t\t\t\t\t\treturn previousValue;\r\n\r\n\t\t\t\t\t// If last edited key field is the final, return it\r\n\t\t\t\t\tif ( fieldNameIndex >= keyFields.length - 1 )\r\n\t\t\t\t\t\treturn action.fieldName;\r\n\r\n\t\t\t\t\t// Next key field in the list\r\n\t\t\t\t\treturn keyFields[fieldNameIndex + 1];\r\n\r\n\t\t\t\t})(state.currentAwaitingKeyField),\r\n\r\n\t\t\t\t// To determine the current step we check action.fieldName against an array of key fields\r\n\t\t\t\t// Step counter can only be increased, not the other way\r\n\t\t\t\tstep: keyFields.reduce( (previousValue, fieldName, index) => {\r\n\t\t\t\t\t\tif ( previousValue > index ) return previousValue;\r\n\t\t\t\t\t\treturn fieldName === action.fieldName\r\n\t\t\t\t\t\t\t? index + 1\r\n\t\t\t\t\t\t\t: previousValue\r\n\t\t\t\t\t}, state.step),\r\n\r\n\t\t\t}\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state;\t\t\r\n\t}\r\n}\r\n\r\nconst signupReset = (state, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.FORM_RESET:\r\n\t\t\treturn initialState.signup;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst signup = reduceReducers(\r\n\tcombineReducers({\r\n\t\tstatus,\r\n\t\tdata: reduceReducers(\r\n\t\t\tapprovable,\r\n\t\t\tvalidateable,\r\n\t\t\tpasswordConfirmation\r\n\t\t)\r\n\t}),\r\n\tsignupReset\r\n);\r\n\r\nexport default signup;","import { PASSWORDS_CHECKED, E_PASSWORD_NOT_VALID } from './PasswordConfirmation.actions';\r\nimport { statusCodes } from './PasswordConfirmation.container';\r\nimport { PROPER_VALUE } from '../ValidateableInput/ValidateableInput.factory';\r\n\r\nexport default (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PASSWORDS_CHECKED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpasswordConfirmation: {\r\n\t\t\t\t\t...state.passwordConfirmation,\r\n\t\t\t\t\tisValid: action.areEqual,\r\n\t\t\t\t\tvalidityStatus: action.areEqual ? PROPER_VALUE : statusCodes.E_PASSWORDS_MISMATCH\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tcase E_PASSWORD_NOT_VALID:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpasswordConfirmation: {\r\n\t\t\t\t\t...state.passwordConfirmation,\r\n\t\t\t\t\tisValid: undefined,\r\n\t\t\t\t\tvalidityStatus: statusCodes.E_PASSWORD_NOT_VALID\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import { actionTypes } from './App.actions';\r\n\r\nconst userProfile = (state = {\r\n\tisPending: false,\r\n\tdata: undefined\r\n}, action) => {\r\n\tswitch ( action.type )\r\n\t{\r\n\t\tcase actionTypes.DATA_FETCH_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: true,\r\n\t\t\t\tdata: undefined\r\n\t\t\t}\r\n\t\tcase actionTypes.DATA_FETCH_RESPONSE:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tdata: action.data\r\n\t\t\t}\r\n\t\tcase actionTypes.DATA_FETCH_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\texternalError: action.error,\r\n\t\t\t\tdata: undefined\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default userProfile;","import { combineReducers } from 'redux';\r\n\r\nimport i18n from './components/IntlProvider/IntlProvider.reducers';\r\nimport auth from './components/Auth/Auth.reducers';\r\nimport signup from './components/SignupForm/SignupForm.reducers';\r\nimport userProfile from './components/App/App.reducers';\r\n\r\nexport default combineReducers({\r\n\ti18n,\r\n\tauth,\r\n\tsignup,\r\n\tuserProfile,\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\n// To enable Redux DevTools Extension\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore(initialState, middleware)\r\n{\r\n\t// Get a store enhancer that applies the given middleware\r\n\t// https://redux.js.org/api/applymiddleware\r\n\tmiddleware = applyMiddleware(middleware);\r\n\r\n\t// Apply several store enhancers in a row\r\n\t// https://redux.js.org/api/compose#composefunctions\r\n\tmiddleware = composeEnhancers(middleware);\r\n\r\n\t// Finally, create the store\r\n\t// https://redux.js.org/api/createstore\r\n\tconst store = createStore(rootReducer, initialState, middleware);\r\n\treturn store;\r\n}","import { IntlProvider } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport default connect(\r\n  // Connect React Intl with Redux to inject current locale data\r\n  ({ i18n }) => ({ ...i18n, key: i18n.locale })\r\n)(IntlProvider);","import 'sass/index.sass';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\nimport logicMiddleware from 'configureLogic';\nimport configureStore from 'configureStore';\nimport IntlProvider from 'components/IntlProvider';\nimport { addLocaleData } from 'react-intl';\nimport ru from 'react-intl/locale-data/ru';\nimport { hydrate } from 'utils';\nimport externalState from 'initialState.json';\n\n// Adding localization functions for different languages\naddLocaleData(ru);\n\n// Hydrate the app with the data stored locally\nconst initialState = hydrate(externalState);\n\n// Create a store initialized with the state and middleware\nconst store = configureStore(initialState, logicMiddleware);\n\n// Since redux-logic doesn't allow changing dependencies in runtime\n// this object can be used as a dependency to pass 'intl' object\n// as its property. Value is assinged in App.container.js upon\n// changes in 'intl' (initially and after user changes locale)\nlet appContext = {};\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<IntlProvider>\n\t\t\t<Router>\n\t\t\t\t<App logicMiddleware={logicMiddleware} appContext={appContext} />\n\t\t\t</Router>\n\t\t</IntlProvider>\n\t</Provider>,\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}