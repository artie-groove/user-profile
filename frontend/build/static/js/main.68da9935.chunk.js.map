{"version":3,"sources":["components/SubmitButton/SubmitButton.view.js","components/ErrorDisplay/ErrorDisplay.view.js","components/LoginForm/LoginForm.view.js","components/LoginForm/LoginForm.container.js","components/Auth/Auth.actions.js","components/LoginForm/LoginForm.actions.js","components/SignupForm/SignupForm.actions.js","components/LoginForm/LoginForm.redux.js","components/SignupForm/ValidateableInput/ValidateableInput.actions.js","components/SignupForm/ValidateableInput/ValidateableInput.view.js","components/SignupForm/ValidateableInput/ValidateableInput.utils.js","components/SignupForm/ValidateableInput/ValidateableInput.inputs.js","components/SignupForm/ValidateableInput/ValidateableInput.factory.js","components/SignupForm/ApprovableInput/ApprovableInput.view.js","components/SignupForm/ApprovableInput/ApprovableInput.factory.js","components/SignupForm/Username/Username.container.js","components/SignupForm/Username/Username.validator.js","components/SignupForm/Password/Password.container.js","components/SignupForm/Password/Password.validator.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.container.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.validator.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.redux.js","components/SignupForm/Email/Email.container.js","components/SignupForm/Email/Email.validator.js","components/SignupForm/Phone/Phone.container.js","components/SignupForm/Phone/Phone.validator.js","components/SignupForm/Birthdate/Birthdate.container.js","components/SignupForm/Birthdate/Birthdate.validator.js","components/SignupForm/Newsletters/Newsletters.container.js","components/SignupForm/Biography/Biography.container.js","components/SignupForm/Biography/Biography.validator.js","components/SignupForm/PersonalInformationProcessing/PersonalInformationProcessing.container.js","components/SignupForm/PersonalInformationProcessing/PersonalInformationProcessing.validator.js","components/SignupForm/Photo/Photo.view.js","components/SignupForm/Photo/Photo.container.js","components/SignupForm/Photo/Photo.redux.js","components/SignupForm/Photo/Photo.validator.js","components/SignupForm/Firstname/Firstname.container.js","components/SignupForm/Firstname/Firstname.validator.js","components/SignupForm/Lastname/Lastname.container.js","components/SignupForm/Lastname/Lastname.validator.js","components/SignupForm/SubmitButton/SubmitButton.redux.js","components/SignupForm/Demo/Demo.view.js","utils.js","components/SignupForm/Demo/Demo.utils.js","components/SignupForm/Demo/Demo.container.js","components/SignupForm/SignupForm.view.js","components/SignupForm/SignupForm.container.js","components/SignupForm/SignupForm.redux.js","components/FullscreenSpinner/FullscreenSpinner.view.js","components/Dashboard/LogoutButton/LogoutButton.view.js","components/Dashboard/LogoutButton/LogoutButton.redux.js","components/Dashboard/Dashboard.view.js","components/Dashboard/Dashboard.utils.js","components/Dashboard/Dashboard.redux.js","components/Auth/Auth.redux.js","components/Auth/Auth.container.js","components/LocaleSwitcher/LocaleSwitcher.view.js","components/IntlProvider/IntlProvider.actions.js","components/LocaleSwitcher/LocaleSwitcher.redux.js","components/App/App.view.js","components/App/App.container.js","components/App/App.actions.js","components/App/App.redux.js","serviceWorker.js","components/Auth/Auth.logic.js","components/IntlProvider/IntlProvider.logic.js","components/SignupForm/ApprovableInput/ApprovableInput.actions.js","components/SignupForm/ApprovableInput/ApprovableInput.logic.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.logic.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.actions.js","components/SignupForm/SignupForm.utils.js","components/SignupForm/SignupForm.logic.js","components/App/App.logic.js","rootLogic.js","configureLogic.js","components/IntlProvider/IntlProvider.reducers.js","components/Auth/Auth.reducers.js","components/LoginForm/LoginForm.reducers.js","components/SignupForm/ApprovableInput/ApprovableInput.reducer.js","components/SignupForm/ValidateableInput/ValidateableInput.reducer.js","components/SignupForm/SignupForm.reducers.js","components/SignupForm/PasswordConfirmation/PasswordConfirmation.reducer.js","components/App/App.reducers.js","reducers.js","configureStore.js","components/IntlProvider/IntlProvider.redux.js","index.js"],"names":["SubmitButton_SubmitButton_view","_ref","disabled","className","isPending","inProgressCaption","caption","react_default","a","createElement","Button","type","size","color","Fragment","Spinner","View","title","errorMsg","Alert","messages","defineMessages","formTitle","id","defaultMessage","formHint","usernameLabel","passwordLabel","submitButtonCaption","submitButtonInProgressCaption","authErrorTitle","msgNoAccountQuestion","signupLinkCaption","injectIntl","formatMessage","intl","externalError","isAuthenticated","onSubmit","onChange","signupLinkClick","lib_default","delay","es_Container","Row","Col","Card","body","CardTitle","LoginForm_view_messages","CardText","Form","FormGroup","Label","htmlFor","Input","name","defaultValue","ErrorDisplay_ErrorDisplay_view","FormText","react_router_dom","to","onClick","actionTypes","onAuthResponse","token","FORM_SUBMIT","FORM_SUBMIT_RESPONSE","FORM_SUBMIT_FAILURE","FORM_RESET","connect","state","auth","dispatch","event","preventDefault","form","target","credentials","username","elements","value","password","sha256","data","fieldName","validityStatus","onBlur","getActions","label","inputType","isInvalid","isDisabled","isValid","validMsg","children","InputComponent","valid","invalid","FormFeedback","propTypes","PropTypes","string","isRequired","oneOf","bool","error","func","getErrorIntl","status","errorStrings","arguments","length","undefined","isTypingFinished","inProgressFilter","PROPER_VALUE","some","filteredStatus","shouldShowError","getEnhancedValidator","validate","errorCodes","keys","Object","i","getErrorCodes","validationResult","DefaultInput","AlternativeInput","_ref2","CustomInput","checked","ValidateableInput_factory","_ref$validate","_getActions","enhancedValidate","Component","ownProps","_state$signup$data$fi","signup","_ref2$isInvalid","_ref2$isValid","validMsgFormatted","isApproved","oneOfType","instanceOf","ApprovableInput_factory","approvedMsg","rejectedMsg","ValidateableInput","validateableInputFactory","_ref3","statusCodes","E_EMPTY","E_FIRST_LETTER","E_LAST_SYMBOL","E_INVALID_FORMAT","E_TOO_SHORT","E_TOO_LONG","resultStrings","rejected","approved","approvableInputFactory","test","charAt","E_INSUFFICIENT","format","concat","RegExp","E_PASSWORDS_MISMATCH","E_PASSWORD_NOT_VALID","resultMessages","_state$signup$data$pa","E_FIRST_SYMBOL","E_INVALID_CHARS","E_TOO_OLD","E_TOO_EARLY","tsBirthdate","Date","parse","isNaN","tsToday","now","E_IMPOSED","fileName","E_NOT_SELECTED","E_WRONG_EXTENTION","E_TOO_BIG","Container","fieldLabel","Photo_Photo_view","photoPickerButtonCaption","file","ext","split","pop","toLowerCase","acceptedExt","files","E_WRONG_ENDING","areAllApprovableFieldsApproved","fields","every","field","isFormFilledInCorrectly","formData","values","passwordConfirmation","item","serverConnectionError","sleeper","ms","Promise","resolve","setTimeout","ajaxErrorParser","err","response","details","statusText","request","console","log","message","fetchStoredMessages","localeId","serializedLocale","localStorage","getItem","_JSON$parse","JSON","storedLocaleId","locale","simulateFormFillIn","_x","_x2","_simulateFormFillIn","apply","this","_callee","sequences","elementId","regenerator_default","wrap","_context","prev","next","t0","t1","done","runSequence","pauseDelayMultiplier","stop","inputEvent","Event","bubbles","blurEvent","focusEvent","fieldBlurDelayMultiplier","putTextInTextarea","element","simulateTypingTextarea","_callee2","sequence","_context2","abrupt","simulateTyping","simulateTypingInputElements","_callee3","_context3","setNativeValue","_callee4","strategy","_context4","slice","dispatchEvent","clickElement","click","putTextAtOnce","_callee5","_context5","document","getElementById","focus","valueSetter","getOwnPropertyDescriptor","set","prototype","getPrototypeOf","prototypeValueSetter","call","onDemo","asyncToGenerator","mark","firstname","lastname","email","newsletters","phone","birthdate","biography","Demo_Demo_view","signupFormTitle","signupFormHint","firstNameLabel","lastNameLabel","userIdLabel","userIdHint","passwordHint","passwordConfirmationLabel","passwordConfirmationHint","emailLabel","emailHint","newslettersLabel","newslettersHint","phoneLabel","phoneHint","birthdateLabel","birthdateHint","biographyLabel","photoLabel","photoHint","personalInformationProcessingLabel","personalInformationProcessingHint","signupErrorTitle","alreadySignedUp","loginLinkCaption","signupSuccessTitle","signupSuccessMessage","btnDemoCaption","isRegistered","steps","onPopulateValidClick","onPopulateInvalidClick","onFocus","md","lg","xl","SignupForm_view_messages","Demo_container","Firstname_container","Lastname_container","Username_container","Password_container","PasswordConfirmation_redux","Email_container","Newsletters_container","Phone_container","Birthdate_container","Biography_container","Photo_redux","PersonalInformationProcessing_container","SubmitButton_redux","showProceedButton","intlShape","setVisibilityFilter","signupState","filter","step","push","currentKeyField","currentAwaitingKeyField","fieldValueIsProper","fieldIsNotPending","fieldIsBeingEdited","onLogout","dataLoadingSpinnerMsg","dataLoadingErrorTitle","logoutButtonCaption","newslettersStatusIndicatorLabel","biographyBlockTitle","FullscreenSpinner_FullscreenSpinner_view","Dashboard_view_messages","sm","src","photo","LogoutButton_redux","age","defaultChecked","postProcessUserProfile","userProfileInfo","ageDiffMs","getTime","ageDate","Math","abs","getUTCFullYear","calculateAge","_state$userProfile","userProfile","updateReduxAuthState","updateReduxAuthStatem","useEffect","setItem","removeItem","switchTo","onSwitchLocaleRequest","onSwitchLocaleResponse","onSwitchLocaleFailure","e","localeSwitchErrorTitle","AppView","isLocaleSwitchPending","localeSwitchError","Auth_redux","App_view_messages","LocaleSwitcher_redux","react_router","App_view_LoginRoute","exact","path","component","SignupForm_redux","App_view_ProtectedRoute","Dashboard_redux","redirectTo","App_view_DefaultRoute","ProtectedRoute","actualComponent","render","DefaultRoute","LoginRoute","_ref4","LoginForm_redux","fetchUserProfile","logicMiddleware","addDeps","App_App_view","i18n","Boolean","window","location","hostname","match","Auth_logic","createLogic","processOptions","successType","failType","process","_process","action","axios","url","params","then","catch","reject","IntlProvider_logic","allow","cookie","stringify","REQUEST_APPROVAL","RESPONSE_APPROVAL","RESPONSE_APPROVAL_ERROR","fieldApprovalLogic","validateableInputActionTypes","getState","ctx","requestApproval","responseApproval","responseApprovalError","assign","config","PasswordConfirmation_logic","passwordValidityStatus","passwordValue","_ref5","passwordConfirmationValidityStatus","passwordConfirmationValue","areEqual","passwordsCheckedAction","_ref6","_ref7","exractFormData","originalFormData","refinedFormData","FormData","append","SignupForm_logic","method","headers","Content-Type","timeout","toConsumableArray","passwordConfirmationLogic","notAuthorizedException","App_logic","Authorization","rootLogic","authLogic","switchLocaleLogic","signupFormLogic","dataFetchLogic","createLogicMiddleware","logic","monitor$","subscribe","x","initialState","authErrorCleaner","objectSpread","defineProperty","fieldData","reduceReducers","combineReducers","inputActionTypes","keyFields","previousValue","fieldNameIndex","indexOf","reduce","index","approvable","validateable","FORM_POPULATE_VALID","formStateValid","FORM_POPULATE_INVALID","formStateInvalid","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","key","IntlProvider","addLocaleData","ru","middleware","get","hydrate","externalState","store","applyMiddleware","createStore","rootReducer","ReactDOM","es","IntlProvider_redux","App_redux","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68da9935.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport './SubmitButton.view.sass';\r\n\r\nexport default ({\r\n\tdisabled, className, isPending, inProgressCaption, caption\r\n}) => pug`\r\n\tButton.btn-submit(\r\n\t\ttype=\"submit\"\r\n\t\tdisabled=disabled\r\n\t\tsize=\"lg\"\r\n\t\tcolor=\"primary\"\r\n\t\tclassName=className\r\n\t)\r\n\t\tif isPending\r\n\t\t\t| #{inProgressCaption}\r\n\r\n\t\t\t.spinner-wrapper\r\n\t\t\t\tSpinner(size=\"lg\" color=\"light\" type=\"grow\")\r\n\r\n\t\telse\r\n\t\t\t| #{caption}\r\n`;","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\nimport './ErrorDisplay.view.sass';\r\n\r\nconst View = ({\r\n\ttitle, errorMsg\r\n}) => pug`\r\n\tAlert.error-display(color=\"danger\")\r\n\t\th6.alert-heading= title\r\n\t\tp.mb-0= errorMsg\r\n`;\r\n\r\nexport default View;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Card, CardTitle, CardText, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport SubmitButton from 'components/SubmitButton';\r\nimport ErrorDisplay from '../ErrorDisplay';\r\nimport FadeIn from 'react-fade-in';\r\nimport { defineMessages } from 'react-intl'; \r\nimport './LoginForm.view.sass';\r\n\r\nconst messages = defineMessages({\r\n\tformTitle: \"Log in\",\r\n\tformHint: \"Please, enter your user name and password to get access to your profile\",\r\n\tusernameLabel: \"Username\",\r\n\tpasswordLabel: \"Password\",\r\n\tsubmitButtonCaption: \"Log in\",\r\n\tsubmitButtonInProgressCaption: \"Sending\",\r\n\tauthErrorTitle: \"Authentication error\",\r\n\tmsgNoAccountQuestion: \"No account?\",\r\n\tsignupLinkCaption: \"Register\"\r\n});\r\n\r\nexport default ({\r\n\tintl: { formatMessage }, isPending, isAuthenticated, externalError, onSubmit, onChange, signupLinkClick\r\n}) => pug`\r\n\t#LoginForm\r\n\t\tFadeIn(delay=500)\r\n\t\t\tContainer\r\n\t\t\t\tRow.align-items-center\r\n\t\t\t\t\tCol.mx-auto\r\n\t\t\t\t\t\tCard(body)\r\n\t\t\t\t\t\t\tCardTitle.mb-1 #{formatMessage(messages.formTitle)}\r\n\r\n\t\t\t\t\t\t\tCardText.d-block.text-muted.mt-0 #{formatMessage(messages.formHint)}\r\n\r\n\t\t\t\t\t\t\tForm(onSubmit=onSubmit)\r\n\t\t\t\t\t\t\t\tFormGroup\r\n\t\t\t\t\t\t\t\t\tLabel(for=\"username\") #{formatMessage(messages.usernameLabel)}\r\n\t\t\t\t\t\t\t\t\tInput(type=\"text\" name=\"username\" id=\"username\" onChange=onChange defaultValue=\"linus-torvalds\")\r\n\r\n\t\t\t\t\t\t\t\tFormGroup\r\n\t\t\t\t\t\t\t\t\tLabel(for=\"password\") #{formatMessage(messages.passwordLabel)}\r\n\t\t\t\t\t\t\t\t\tInput(type=\"password\" name=\"password\" id=\"password\" onChange=onChange defaultValue=\"linus-torvalds\")\r\n\r\n\t\t\t\t\t\t\t\t//FormGroup\r\n\t\t\t\t\t\t\t\t//\tCustomInput(type=\"checkbox\" id=\"remember\" label=\"Запомнить меня\")\r\n\r\n\t\t\t\t\t\t\t\tSubmitButton.d-block.w-100.mt-4(\r\n\t\t\t\t\t\t\t\t\tcaption=formatMessage(messages.submitButtonCaption)\r\n\t\t\t\t\t\t\t\t\tinProgressCaption=formatMessage(messages.submitButtonInProgressCaption)\r\n\t\t\t\t\t\t\t\t\tdisabled=isPending\r\n\t\t\t\t\t\t\t\t\tisPending=isPending\r\n\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\tif externalError\r\n\t\t\t\t\t\t\t\t\tErrorDisplay(title=formatMessage(messages.authErrorTitle) errorMsg=externalError)\r\n\r\n\t\t\t\t\t\t\t\tFormText.mt-3 #{formatMessage(messages.msgNoAccountQuestion)}\r\n\t\t\t\t\t\t\t\t\t| \r\n\t\t\t\t\t\t\t\t\tLink(to=\"/signup/\" onClick=signupLinkClick) #{formatMessage(messages.signupLinkCaption)}\r\n`;","// import React, { useState } from 'react';\r\n// import View from './LoginForm.view';\r\n\r\n// const Component = () => {\r\n// \tconst [ state, setState ] = useState({\r\n// \t\tusername: '',\r\n// \t\tpassword: ''\r\n// \t});\r\n// \tconst onInputFieldChange = (event) => {\r\n// \t\tconsole.log(event.target.id, event.target.value);\r\n// \t\tsetState({\r\n// \t\t\t...state,\r\n// \t\t\t[event.target.id]: event.target.value\r\n// \t\t});\r\n// \t};\r\n// \treturn pug`\r\n// \t\tView(\r\n// \t\t\tonChange=onInputFieldChange\r\n// \t\t)\r\n// \t`\r\n// };\r\n\r\n// export default Component;\r\n\r\nimport View from './LoginForm.view';\r\nimport { injectIntl } from 'react-intl';\r\nexport default injectIntl(View);","export const actionTypes = {\r\n\tAUTH_REQUEST: \t'AUTH_REQUEST',\r\n\tAUTH_RESPONSE: \t'AUTH_RESPONSE',\r\n\tAUTH_FAILURE: \t'AUTH_FAILURE',\r\n\tAUTH_LOGOUT: \t'AUTH_LOGOUT',\r\n}\r\n\r\nexport const onAuthRequest = (data) => ({\r\n\ttype: actionTypes.AUTH_REQUEST,\r\n\tdata\r\n});\r\n\r\nexport const onAuthResponse = (token) => ({\r\n\ttype: actionTypes.AUTH_RESPONSE,\r\n\ttoken\r\n});\r\n\r\nexport const onAuthFailure = (error) => ({\r\n\ttype: actionTypes.AUTH_FAILURE,\r\n\terror\r\n});\r\n\r\nexport const onLogout = () => ({\r\n\ttype: actionTypes.AUTH_LOGOUT\r\n})\r\n\r\n\r\n\r\n","export const actionTypes = {\r\n\tSIGNUP_LINK_CLICK: 'SIGNUP_LINK_CLICK',\r\n}\r\n\r\nexport const onSignupLinkClick = () => ({\r\n\ttype: actionTypes.SIGNUP_LINK_CLICK\r\n});\r\n\r\n\r\n","export const actionTypes = {\r\n\tFORM_SUBMIT: \t\t\t'FORM_SUBMIT',\r\n\tFORM_SUBMIT_RESPONSE: \t'FORM_SUBMIT_RESPONSE',\r\n\tFORM_SUBMIT_FAILURE: \t'FORM_SUBMIT_FAILURE',\r\n\tFORM_RESET: \t\t\t'FORM_RESET', \r\n}\r\n\r\nexport const onSubmit = () => ({\r\n\ttype: actionTypes.FORM_SUBMIT\r\n});\r\n\r\nexport const onSubmitResponse = (response) => ({\r\n\ttype: actionTypes.FORM_SUBMIT_RESPONSE,\r\n\tresponse: response.data\r\n});\r\n\r\nexport const onSubmitFailure = (error) => ({\r\n\ttype: actionTypes.FORM_SUBMIT_FAILURE,\r\n\texternalError: error\r\n});\r\n\r\nexport const onFormReset = () => ({\r\n\ttype: actionTypes.FORM_RESET\r\n});\r\n\r\n","import { connect } from 'react-redux';\r\nimport Form from './LoginForm.container';\r\nimport { onAuthRequest } from '../Auth/Auth.actions';\r\nimport { onSignupLinkClick } from './LoginForm.actions';\r\nimport { onFormReset } from '../SignupForm/SignupForm.actions';\r\nimport { sha256 } from 'js-sha256';\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisPending: state.auth.isPending,\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\texternalError: state.auth.externalError,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tonSubmit: (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst form = event.target;\r\n\t\tconst credentials = {\r\n\t\t\tusername: form.elements['username'].value,\r\n\t\t\tpassword: sha256(form.elements['password'].value)\r\n\t\t};\r\n\t\tdispatch(onAuthRequest(credentials));\r\n\t},\r\n\tsignupLinkClick: () => {\r\n\t\tdispatch(onSignupLinkClick());\r\n\t\tdispatch(onFormReset());\r\n\t}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","export const actionTypes = {\r\n\tVALUE_CHANGED: \t\t'VALUE_CHANGED',\r\n\tFIELD_EDITED: \t\t'FIELD_EDITED'\r\n}\r\n\r\nexport const onChange = (fieldName, value, validityStatus) => ({\r\n\ttype: actionTypes.VALUE_CHANGED,\r\n\tfieldName,\r\n\tvalue,\r\n\tvalidityStatus\r\n});\r\n\r\nexport const onBlur = (fieldName) => ({\r\n\ttype: actionTypes.FIELD_EDITED,\r\n\tfieldName\r\n});\r\n\r\nexport function getActions(fieldName) {\r\n\tconst onChangeFixed = (value, validityStatus) => onChange(fieldName, value, validityStatus);\r\n\tconst onBlurFixed = () => onBlur(fieldName);\r\n\treturn {\r\n\t\tonChange: onChangeFixed,\r\n\t\tonBlur: onBlurFixed\r\n\t}\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormGroup, FormFeedback } from 'reactstrap';\r\n\r\nconst View = ({\r\n\t/* values */\r\n\t\tfieldName, value, label, inputType, isInvalid, errorMsg,\r\n\t\tisDisabled, isValid, validMsg, children, InputComponent,\r\n\t/* handlers */\r\n\t\tonChange, onBlur\r\n}) => pug`\r\n\tFormGroup\r\n\t\tInputComponent(\r\n\t\t\ttype=inputType\r\n\t\t\tname=fieldName\r\n\t\t\tid=fieldName\r\n\t\t\tlabel=label\r\n\t\t\tvalue=value\r\n\t\t\tvalid=isValid\r\n\t\t\tinvalid=isInvalid\r\n\t\t\tdisabled=isDisabled\r\n\t\t\tonChange=onChange\r\n\t\t\tonBlur=onBlur\r\n\t\t)\r\n\t\t\tFormFeedback(valid=true) #{validMsg}\r\n\r\n\t\t\tFormFeedback(valid=false)\r\n\t\t\t\tdiv #{errorMsg}\r\n\r\n\t\t\t= children\r\n`;\r\n\r\nView.propTypes = {\r\n\tfieldName: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string.isRequired,\r\n\tinputType: PropTypes.oneOf(['text', 'textarea','email', 'password', 'tel', 'date', 'checkbox', 'switch']),\r\n\tisInvalid: PropTypes.bool,\r\n\terror: PropTypes.string,\r\n\tisValid: PropTypes.bool,\r\n\tvalidMsg: PropTypes.string,\r\n\tonChange: PropTypes.func,\r\n\tonBlur: PropTypes.func,\r\n}\r\n\r\nexport default View;","import { PROPER_VALUE } from './ValidateableInput.factory'; \r\n\r\nconst shouldShowError = (status, isTypingFinished, inProgressFilter = []) => {\r\n\t// Имя полностью соответствует формату\r\n\tif ( ! status || status === PROPER_VALUE ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Пользователь завершил редактирование, показывем ошибку\r\n\tif ( isTypingFinished )\r\n\t\treturn true\r\n\r\n\t// Если пользователь ещё в процессе набора, молчим про ошибки, определяемые фильтром\r\n\treturn inProgressFilter.some( filteredStatus => filteredStatus === status )\r\n\t\t? false\r\n\t\t: true;\r\n}\r\n\r\nexport const getErrorIntl = (intl, status, errorStrings = {}, isTypingFinished = true, inProgressFilter = []) => {\r\n\treturn shouldShowError(status, isTypingFinished, inProgressFilter)\r\n\t\t? intl.formatMessage(errorStrings[status])\r\n\t\t: '';\r\n}\r\n\r\nexport function getErrorCodes(errorStrings) {\r\n\tconst keys = Object.keys(errorStrings);\r\n\tlet errorCodes = {};\r\n\tfor ( let i = 0; i < keys.length; i++ ) {\r\n\t\terrorCodes[keys[i]] = keys[i];\r\n\t}\r\n\treturn errorCodes;\r\n}\r\n\r\nexport function getEnhancedValidator(validate, errorStrings = {}) {\r\n\tconst errorCodes = getErrorCodes(errorStrings);\r\n\treturn (value) => {\r\n\t\tconst validationResult = validate(value, errorCodes);\r\n\t\treturn validationResult === true\r\n\t\t\t? PROPER_VALUE\r\n\t\t\t: validationResult;\r\n\t}\r\n}","import React from 'react';\r\nimport { CustomInput, Input, Label } from 'reactstrap';\r\n\r\nconst DefaultInput = ({\r\n\ttype, name, label, value, valid, invalid, disabled, onChange, onBlur, children\r\n}) => pug`\r\n\tdiv\r\n\t\tLabel(for=name) #{label}\r\n\r\n\t\tInput(\r\n\t\t\ttype=type\r\n\t\t\tname=name\r\n\t\t\tid=name\r\n\t\t\tvalue=value\r\n\t\t\tvalid=valid\r\n\t\t\tinvalid=invalid\r\n\t\t\tdisabled=disabled\r\n\t\t\tonChange=onChange\r\n\t\t\tonBlur=onBlur\r\n\t\t)\r\n\r\n\t\t= children\r\n`;\r\n\r\nconst AlternativeInput = ({\r\n\ttype, name, label, value, valid, invalid, disabled, onChange, children\r\n}) => pug`\r\n\tCustomInput(\r\n\t\ttype=type\r\n\t\tname=name\r\n\t\tid=name\r\n\t\tlabel=label\r\n\t\tchecked=value\r\n\t\tvalid=valid\r\n\t\tinvalid=invalid\r\n\t\tdisabled=disabled\r\n\t\tonChange=onChange\r\n\t)\r\n\t\t= children\r\n`;\r\n\r\nexport { DefaultInput, AlternativeInput };","import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'; \r\nimport { getActions } from './ValidateableInput.actions';\r\nimport View from './ValidateableInput.view';\r\nimport { getErrorIntl, getEnhancedValidator } from './ValidateableInput.utils';\r\nimport { DefaultInput, AlternativeInput } from './ValidateableInput.inputs';\r\n\r\nexport const PROPER_VALUE = 'PROPER_VALUE';\r\n\r\nexport default ({\r\n\t/* values */\tfieldName, inputType, errorStrings, inProgressFilter, validMsg,\r\n\t/* handlers */ \tvalidate = () => true\r\n}) => {\r\n\tconst mapStateToProps = (state, ownProps) => {\r\n\t\tconst { validityStatus, isTypingFinished, value } = state.signup.data[fieldName];\r\n\t\tconst errorMsg = ownProps.errorMsg\r\n\t\t\t? ownProps.errorMsg\r\n\t\t\t: getErrorIntl(ownProps.intl, validityStatus, errorStrings, isTypingFinished, inProgressFilter);\r\n\t\treturn {\r\n\t\t\tisInvalid: !!errorMsg,\r\n\t\t\terrorMsg,\r\n\t\t\tvalue\r\n\t\t}\r\n\t};\r\n\r\n\tconst { onChange, onBlur } = getActions(fieldName);\r\n\r\n\tconst enhancedValidate = getEnhancedValidator(validate, errorStrings);\r\n\r\n\tconst mapDispatchToProps = dispatch => ({\r\n\t\tonChange: event => {\r\n\t\t\tconst target = event.target;\r\n\t\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\r\n\t\t\tconst validityStatus = enhancedValidate(value);\r\n\t\t\tdispatch(onChange(value, validityStatus));\r\n\t\t},\r\n\t\tonBlur: () => dispatch(onBlur())\r\n\t});\r\n\r\n\tlet Component = connect(\r\n\t  mapStateToProps,\r\n\t  mapDispatchToProps\r\n\t)(View);\r\n\r\n\r\n\tComponent.propTypes = {\r\n\t\tfieldName: PropTypes.string.isRequired,\r\n\t\tinputType: PropTypes.oneOf(['text', 'textarea', 'email', 'password', 'tel', 'date', 'checkbox', 'switch']).isRequired\r\n\t}\r\n\r\n\tlet InputComponent;\r\n\r\n\tswitch ( inputType ) {\r\n\t\tcase 'checkbox':\r\n\t\tcase 'switch':\r\n\t\t\tInputComponent = AlternativeInput\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tInputComponent = DefaultInput\r\n\t}\r\n\r\n\tconst Container = ({\r\n\t\tisDisabled, isInvalid = false, isValid = false, errorMsg, children, label, intl\r\n\t}) => {\r\n\t\tconst validMsgFormatted = validMsg\r\n\t\t\t? intl.formatMessage(validMsg)\r\n\t\t\t: null;\r\n\t\treturn pug`\r\n\t\t\tComponent(\r\n\t\t\t\tfieldName=fieldName\r\n\t\t\t\tinputType=inputType\r\n\t\t\t\tlabel=label\r\n\t\t\t\tisInvalid=isInvalid\r\n\t\t\t\terrorMsg=errorMsg\r\n\t\t\t\tisValid=isValid\r\n\t\t\t\tvalidMsg=validMsgFormatted\r\n\t\t\t\tInputComponent=InputComponent\r\n\t\t\t\tintl=intl\r\n\t\t\t)\r\n\t\t\t\t= children\r\n\t\t`;\r\n\t}\r\n\r\n\treturn injectIntl(Container);\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst View = ({\r\n\t/* values */ \tisInvalid, isPending, isApproved, label,\r\n\t/* values */\terrorMsg, InputComponent\r\n}) => pug`\r\n\tInputComponent(\r\n\t\tisDisabled=isPending\r\n\t\tisInvalid=isInvalid\r\n\t\tisValid=isApproved\r\n\t\terrorMsg=errorMsg\r\n\t\tlabel=label\r\n\t)\r\n\t\tif isPending\r\n\t\t\tSpinner(size=\"sm\" color=\"primary\")\r\n`;\r\n\r\nView.propTypes = {\r\n\tisInvalid: PropTypes.bool,\r\n\tisPending: PropTypes.bool,\r\n\tisValid: PropTypes.oneOfType([\r\n\t\t\tPropTypes.bool,\r\n\t\t\tPropTypes.instanceOf('undefined')\r\n\t\t]),\r\n\terrorMsg: PropTypes.string,\r\n}\r\n\r\nexport default View;","import React from 'react';\r\nimport { connect } from 'react-redux'; \r\nimport { injectIntl } from 'react-intl';\r\nimport validateableInputFactory from '../ValidateableInput';\r\nimport View from './ApprovableInput.view';\r\n\r\nexport default ({\r\n\t/* values */\tfieldName, inputType, approvedMsg, rejectedMsg, children, externalError, errorStrings, inProgressFilter,\r\n\t/* handlers */ \tvalidate,\r\n}) => {\r\n\tconst mapStateToProps = (state, ownProps) => {\r\n\t\tconst { externalError, isTypingFinished, isPending, isApproved } = state.signup.data[fieldName] || {};\r\n\t\tlet errorMsg = '';\r\n\t\tif ( externalError )\r\n\t\t\terrorMsg = externalError;\r\n\t\telse if ( isTypingFinished && isApproved === false )\r\n\t\t\terrorMsg = ownProps.intl.formatMessage(rejectedMsg);\r\n\t\treturn {\r\n\t\t\tisInvalid: !!errorMsg,\r\n\t\t\terrorMsg,\r\n\t\t\tisPending,\r\n\t\t\t// isPending: isTypingFinished && !isApproved && !externalError && status === statusCodes.PROPER,\r\n\t\t\tisApproved: isApproved && isTypingFinished,\r\n\t\t\t// isDisapproved: isTypingFinished && isApproved === false,\r\n\t\t}\r\n\t};\r\n\r\n\tlet Component = connect(\r\n\t  mapStateToProps\r\n\t)(View);\r\n\r\n\tComponent = injectIntl(Component);\r\n\r\n\tconst ValidateableInput = validateableInputFactory({\r\n\t\tfieldName,\r\n\t\tinputType,\r\n\t\tvalidMsg: approvedMsg,\r\n\t\tvalidate,\r\n\t\terrorStrings,\r\n\t\tinProgressFilter\r\n\t});\r\n\r\n\treturn ({ label }) => pug`\r\n\t\tComponent(\r\n\t\t\tInputComponent=ValidateableInput\r\n\t\t\tlabel=label\r\n\t\t)\r\n\t`;\r\n}","import approvableInputFactory from '../ApprovableInput';\r\nimport validate from './Username.validator';\r\nimport { defineMessages } from 'react-intl'; \r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_FIRST_LETTER: \t'E_FIRST_LETTER',\r\n\tE_LAST_SYMBOL: \t\t'E_LAST_SYMBOL',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_SHORT: \t\t'E_TOO_SHORT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, come up with a username\",\r\n\tE_FIRST_LETTER: \t\"Username should begin with a lowercase latin character\",\r\n\tE_LAST_SYMBOL: \t\t\"Name should end in a letter or a digit\",\r\n\tE_INVALID_FORMAT: \t\"The name contains illegal characters. Please, adhere to the specified format\",\r\n\tE_TOO_SHORT: \t\t\"Name should be at least 5 characters long\",\r\n\tE_TOO_LONG: \t\t\"Name shouldn't be longer than 30 characters\"\r\n})\r\n\r\nconst resultStrings = defineMessages({\r\n\trejected: \"Unfortunately, this name has already been taken. Please, come up with another one\",\r\n\tapproved: \"Great, this is a suitable name!\",\r\n})\r\n\r\nexport default approvableInputFactory({\r\n\tfieldName: \"username\",\r\n\tinputType: \"text\",\r\n\tvalidate,\r\n\tresultStrings,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_TOO_SHORT, statusCodes.E_LAST_SYMBOL],\r\n\trejectedMsg: resultStrings.rejected,\r\n\tapprovedMsg: resultStrings.approved\r\n});","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Максимум - 30 символов \r\n\tif ( value.length > 30 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// Первый символ должен быть буквой\r\n\tconst firstLetterRegex = /^[a-z]$/;\r\n\tlet isValid = firstLetterRegex.test(value.charAt(0));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_FIRST_LETTER;\r\n\t}\t\t\r\n\t\r\n\t// Имя должно соответствовать формату\t\r\n\tconst usernameRegex = /^[-a-z0-9]+$/;\r\n\tisValid = usernameRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\t// Минимум - 5 символов\r\n\tif ( value.length < 5 ) \r\n\t\treturn statusCodes.E_TOO_SHORT;\r\n\r\n\t// Последний символ - буква или цифра\r\n\tconst lastLetterRegex = /^[a-z0-9]$/;\r\n\tisValid = lastLetterRegex.test(value.charAt(value.length - 1));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_LAST_SYMBOL;\r\n\t}\t\t\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Password.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_INSUFFICIENT: \t'E_INSUFFICIENT',\r\n\tE_TOO_SHORT: \t\t'E_TOO_SHORT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This is a requried field. Please, enter a password\",\r\n\tE_INVALID_FORMAT:\t\"The password contains illegal symbols. Please, adhere to the specified format\",\r\n\tE_INSUFFICIENT: \t\"Please, use at least 2 symbol groups: letters, digits or special characters\",\r\n\tE_TOO_SHORT:\t\t\"Password should be at least 8 symbols long\",\r\n\tE_TOO_LONG: \t\t\"Password should be less that 128 symbols long. Please, use a shorter password\"\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"password\",\r\n\tinputType: \"password\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_TOO_SHORT, statusCodes.E_INSUFFICIENT]\r\n})","export default function validate(value, statusCodes) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Максимум - 128 символов \r\n\tif ( value.length > 128 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\tconst grpLetters = \"[a-zA-Z]\";\r\n\tconst grpDigits = \"[0-9]\";\r\n\tconst grpSymbols = \"\";\r\n\tconst format = `(?:${grpLetters}?${grpDigits}?${grpSymbols}?)+`;\r\n\tlet regexp = new RegExp(format);\r\n\tregexp = /^(?:[a-zA-Z]|[0-9]|[-_,.'><=+&%$#@!* )(~\\]/\\\\{}])+$/;\r\n\tlet isValid = regexp.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\t// Пароль должен содержать как минимум две группы символов\r\n\t// 1) буквы латинского алфавита\r\n\t// 2) цифры\r\n\t// 3) спецсимволы\r\n\tregexp = /[a-zA-Z]/;\r\n\tconst hasLetters = regexp.test(value);\r\n\r\n\tregexp = /[0-9]/;\r\n\tconst hasDigits = regexp.test(value);\r\n\r\n\tregexp = /[-_,.'><=+&%$#@!* )(~\\]/\\\\{}]/;\r\n\tconst hasSymbols = regexp.test(value);\r\n\r\n\tif ( hasLetters + hasDigits + hasSymbols < 2 )\r\n\t\treturn statusCodes.E_INSUFFICIENT;\r\n\r\n\tif ( value.length < 8 )\r\n\t\treturn statusCodes.E_TOO_SHORT;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './PasswordConfirmation.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t\t'E_EMPTY',\r\n\tE_PASSWORD_NOT_VALID: \t'E_PASSWORD_NOT_VALID',\r\n\tE_PASSWORDS_MISMATCH: \t'E_PASSWORDS_MISMATCH'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\t\"This field is required. Please, confirm the above entered password\",\r\n\tE_PASSWORDS_MISMATCH: \t\"Passwords don't match\",\r\n\tE_PASSWORD_NOT_VALID: \t\"Please, make sure both passwords follow the specified format\"\r\n})\r\n\r\nconst resultMessages = defineMessages({\r\n\tvalid: \"Passwords match\"\r\n})\r\n\r\nconst Component = validateableInputFactory({\r\n\tfieldName: \"passwordConfirmation\",\r\n\tinputType: \"password\",\r\n\tvalidMsg: resultMessages.valid,\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY]\r\n});\r\n\r\nexport default Component;","export default function validate(value, statusCodes) {\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\treturn true;\r\n}","import Component from './PasswordConfirmation.container';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tconst { isValid, isTypingFinished } = state.signup.data['passwordConfirmation'];\r\n\treturn {\r\n\t\tisValid: isValid && isTypingFinished,\r\n\t}\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(Component);\r\n","import approvableInputFactory from '../ApprovableInput';\r\nimport validate from './Email.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your email\",\r\n\tE_TOO_LONG: \t\t\"We don't accept emails longer than 128 symbols. PLease, use a shorter address\",\r\n\tE_INVALID_FORMAT: \t\"Email doesn't comply with the format. Please, make sure you typed the address correctly\"\r\n})\r\n\r\nconst resultMessages = defineMessages({\r\n\trejected: \"The address has already been taken by somebody. Please, use another one\",\r\n\tapproved: \"This email address is fine!\"\r\n})\r\n\r\nexport default approvableInputFactory({\r\n\tfieldName: \"email\",\r\n\tinputType: \"email\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_INVALID_FORMAT],\r\n\trejectedMsg: resultMessages.rejected,\r\n\tapprovedMsg: resultMessages.approved\r\n})","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Максимум - 100 символов \r\n\tif ( value.length > 128 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// Большинство разумных адресов удовлетворят этому формату\r\n\t// https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\r\n\tconst emailRegex = /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/;\r\n\tlet isValid = emailRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\treturn true;\r\n}","import { defineMessages } from 'react-intl';\r\nimport approvableInputFactory from '../ApprovableInput';\r\nimport validate from './Phone.validator';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_FIRST_SYMBOL: \t'E_FIRST_SYMBOL',\r\n\tE_INVALID_CHARS: \t'E_INVALID_CHARS',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_SHORT: \t\t'E_TOO_SHORT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your phone number\",\r\n\tE_FIRST_SYMBOL: \t\"The first character should be a plus symbol (+)\",\r\n\tE_TOO_SHORT: \t\t\"Phone number should be more than 10 characters long. Please, make sure you entered it correctly\",\r\n\tE_TOO_LONG: \t\t\"The phone number is too long. Please, use a shorter number\",\r\n\tE_INVALID_CHARS: \t\"Phone number can only contain digits, spaces or hyphens and a plus sign. Please, check for typos\",\r\n\tE_INVALID_FORMAT: \t\"The phone number doesn't comply with the format. Please, check if you typed it correctly\"\r\n})\r\n\r\nconst resultMessages = defineMessages({\r\n\trejected: \"This phone number has already been in use. Please, choose another one\",\r\n\tapproved: \"This phone number will work!\"\r\n})\r\n\r\nexport default approvableInputFactory({\r\n\tfieldName: \"phone\",\r\n\tinputType: \"tel\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_TOO_SHORT, statusCodes.E_INVALID_FORMAT],\r\n\trejectedMsg: resultMessages.rejected,\r\n\tapprovedMsg: resultMessages.approved,\r\n});","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Максимум - 30 символов \r\n\tif ( value.length > 30 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// Первый символ должен быть буквой\r\n\tconst firstSymbolRegex = /^\\+/;\r\n\tlet isValid = firstSymbolRegex.test(value.charAt(0));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_FIRST_SYMBOL;\r\n\t}\r\n\r\n\t// Only valid characters\r\n\tconst phoneLexisRegex = /^[-+ 0-9]+$/;\r\n\tisValid = phoneLexisRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_CHARS;\r\n\t}\r\n\t\r\n\t// Номер должен соответствовать формату\t\r\n\tconst phoneGrammarRegex = /^\\+[0-9]{1,3}(?:(?:[- ][0-9]{2,4}){3,4}|[- ]?[0-9]{5,10})$/;\r\n\tisValid = phoneGrammarRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\t// Минимум - 5 символов\r\n\tif ( value.length < 10 ) \r\n\t\treturn statusCodes.E_TOO_SHORT;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Birthdate.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_TOO_OLD: \t\t\t'E_TOO_OLD',\r\n\tE_TOO_EARLY: \t\t'E_TOO_EARLY',\r\n\tE_INVALID_FORMAT:  \t'E_INVALID_FORMAT'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your date of birth\",\r\n\tE_TOO_OLD: \t\t\t\"We accept that a human can live longer than 150 years. If that's your case, please contact us via phone or email. We will consider your application in exceptional order\",\r\n\tE_TOO_EARLY: \t\t\"Only dates from the past are accepted\",\r\n\tE_INVALID_FORMAT: \t\"Wrong data format. Please, make sure you enter the date in YYYY-MM-DD format\",\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"birthdate\",\r\n\tinputType: \"date\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_TOO_OLD, statusCodes.E_TOO_EARLY, statusCodes.E_INVALID_FORMAT]\r\n})","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Неверный формат\r\n\tconst dateFormat = /^[0-9]{4}-(?:0[1-9]|1[012])-(?:0[1-9]|[12][0-9]|3[01])$/;\r\n\tconst isCorrect = dateFormat.test(value);\r\n\tif ( !isCorrect )\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\r\n\tconst tsBirthdate = Date.parse(value);\r\n\tif ( isNaN(tsBirthdate) )\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\r\n\tconst tsToday = Date.now();\r\n\t\r\n\t// Дата из будущего\r\n\tif ( tsBirthdate > tsToday )\r\n\t\treturn statusCodes.E_TOO_EARLY;\r\n\t\r\n\t// Максимум - 150 лет \r\n\tif ( tsToday - tsBirthdate > 150 * 365 * 24 * 60 * 60 * 1000 )\r\n\t\treturn statusCodes.E_TOO_OLD;\r\n\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"newsletters\",\r\n\tinputType: \"switch\"\r\n})","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Biography.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_TOO_LONG: 'E_TOO_LONG',\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_TOO_LONG: \"Please, shorten your biography to 4000 symbols\",\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"biography\",\r\n\tinputType: \"textarea\",\r\n\tvalidate,\r\n\terrorStrings\r\n});","export default function validate(value, statusCodes = {}) {\r\n\t// ограничиваем объём текста\r\n\tif ( value && value.length > 4000 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './PersonalInformationProcessing.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_IMPOSED: 'E_IMPOSED',\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_IMPOSED: \"Consent to personal information processing is required to sign up to our serivce\",\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"personal-information-processing\",\r\n\tinputType: \"checkbox\",\r\n\tvalidate,\r\n\terrorStrings\r\n})","export default function validate(value, statusCodes = {}) {\r\n\treturn value\r\n\t\t? true\r\n\t\t: statusCodes.E_IMPOSED;\r\n}","import React from 'react';\r\nimport { FormGroup, FormFeedback, CustomInput, Label, Input } from 'reactstrap';\r\nimport './Photo.view.sass';\r\n\r\nconst View = ({\r\n\t/* values */\r\n\t\tfieldName, fileName, label, invalid, errorMsg,\r\n\t\tisDisabled, valid, validMsg, children,\r\n\t/* handlers */\r\n\t\tonChange\r\n}) => pug`\r\n\tFormGroup\r\n\t\tLabel(for=fieldName) #{label}\r\n\r\n\t\tCustomInput(\r\n\t\t\ttype=\"file\"\r\n\t\t\tname=fieldName\r\n\t\t\tid=fieldName\r\n\t\t\tlabel=fileName\r\n\t\t\tvalid=valid\r\n\t\t\tinvalid=invalid\r\n\t\t\tdisabled=isDisabled\r\n\t\t\tonChange=onChange\r\n\t\t)\r\n\r\n\t\tInput(\r\n\t\t\ttype=\"hidden\"\r\n\t\t\tvalid=valid\r\n\t\t\tinvalid=invalid\r\n\t\t)\r\n\t\t\r\n\t\tFormFeedback(valid=true) #{validMsg}\r\n\r\n\t\tFormFeedback(valid=false)\r\n\t\t\tdiv #{errorMsg}\r\n\r\n\t\t= children\r\n`;\r\n\r\nexport default View;","import React from 'react';\r\nimport View from './Photo.view';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_NOT_SELECTED: \t'E_NOT_SELECTED',\r\n\tE_WRONG_EXTENTION: \t'E_WRONG_EXTENTION',\r\n\tE_TOO_BIG: \t\t\t'E_TOO_BIG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_NOT_SELECTED: \t\"Please, choose a photo for your profile\",\r\n\tE_WRONG_EXTENTION: \t\"We only support files of JPG and PNG formats\",\r\n\tE_TOO_BIG: \t\t\t\"File size shouldn't exceed 5 MB\",\r\n})\r\n\r\nconst Container = ({\r\n\t/* values */\r\n\t\tfieldName, fieldLabel, isInvalid, errorMsg,\r\n\t\tisDisabled, isValid, validMsg, fileName, label,\r\n\t/* handlers */\r\n\t\tonChange\r\n}) => pug`\r\n\tView(\r\n\t\tfieldName=\"photo\"\r\n\t\tlabel=label\r\n\t\tfileName=fileName\r\n\t\tinvalid=isInvalid\r\n\t\terrorMsg=errorMsg\r\n\t\tisDisabled=isDisabled\r\n\t\tvalid=isValid\r\n\t\tvalidMsg=validMsg\r\n\t\tonChange=onChange\r\n\t)\r\n`;\r\n\r\nexport default Container;","import { connect } from 'react-redux'; \r\nimport { defineMessages, injectIntl } from 'react-intl';\r\nimport Container from './Photo.container';\r\nimport validate from './Photo.validator';\r\nimport { onChange } from '../ValidateableInput/ValidateableInput.actions';\r\nimport { getErrorIntl, getEnhancedValidator } from '../ValidateableInput/ValidateableInput.utils';\r\nimport { errorStrings } from './Photo.container';\r\n\r\nconst fieldName = 'photo';\r\n\r\nconst messages = defineMessages({\r\n\tphotoPickerButtonCaption: \"Pick a photo\"\r\n})\r\n\r\nconst enhancedValidate = getEnhancedValidator(validate, errorStrings);\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tconst { validityStatus, value } = state.signup.data[fieldName];\r\n\tconst fileName = value.name || ownProps.intl.formatMessage(messages.photoPickerButtonCaption);\r\n\tconst errorMsg = ownProps.errorMsg\r\n\t\t? ownProps.errorMsg\r\n\t\t: getErrorIntl(ownProps.intl, validityStatus, errorStrings);\r\n\treturn {\r\n\t\tisInvalid: !!errorMsg,\r\n\t\terrorMsg,\r\n\t\tfileName\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tonChange: event => {\r\n\t\tconst file = event.target.files[0];\r\n\t\tif ( ! file ) return false;\r\n\t\tconst validityStatus = enhancedValidate(file);\r\n\t\tdispatch(onChange(fieldName, file, validityStatus));\r\n\t}\r\n});\r\n\r\nlet Component = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Container);\r\n\r\nexport default injectIntl(Component);","export default function validate(file, statusCodes = {}) {\r\n\t// Пустая строка\r\n\tif ( ! file )\r\n\t\treturn statusCodes.E_NOT_SELECTED;\r\n\r\n\t// Только JPG и PNG\r\n\tconst ext = file.name.split('.').pop().toLowerCase();\r\n\tconst isValidExtention = ['jpg', 'png'].some( acceptedExt => acceptedExt === ext );\r\n\tif ( ! isValidExtention )\r\n\t\treturn statusCodes.E_WRONG_EXTENTION;\r\n\r\n\t// Максимум - 5 МБ\r\n\tif ( file.size > 5 * 1024 * 1024 )\r\n\t\treturn statusCodes.E_TOO_BIG;\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Firstname.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_FIRST_LETTER: \t'E_FIRST_LETTER',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your name\",\r\n\tE_FIRST_LETTER: \t\"Name should begin with a captial letter\",\r\n\tE_INVALID_FORMAT: \t\"The name contains illegal characters. Please, adhere to the specified format\",\r\n\tE_TOO_LONG: \t\t\"Name shouldn't exceed 40 characters\"\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"firstname\",\r\n\tinputType: \"text\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY]\r\n});","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Максимум - 40 символов \r\n\tif ( value.length > 40 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// Первый символ должен быть заглавной буквой\r\n\tconst firstLetterRegex = /^[A-ZА-ЯЁ]$/;\r\n\tlet isValid = firstLetterRegex.test(value.charAt(0));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_FIRST_LETTER;\r\n\t}\t\t\r\n\t\r\n\t// Имя должно соответствовать формату\t\r\n\tconst nameRegex = /^.[a-zа-яё]*$/;\r\n\tisValid = nameRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\t\t\r\n\r\n\treturn true;\r\n}","import validateableInputFactory from '../ValidateableInput';\r\nimport validate from './Lastname.validator';\r\nimport { defineMessages } from 'react-intl';\r\n\r\nexport const statusCodes = {\r\n\tE_EMPTY: \t\t\t'E_EMPTY',\r\n\tE_FIRST_LETTER: \t'E_FIRST_LETTER',\r\n\tE_INVALID_FORMAT: \t'E_INVALID_FORMAT',\r\n\tE_TOO_LONG: \t\t'E_TOO_LONG',\r\n\tE_LAST_SYMBOL: \t\t'E_LAST_SYMBOL',\r\n\tE_WRONG_ENDING: \t'E_WRONG_ENDING'\r\n}\r\n\r\nexport const errorStrings = defineMessages({\r\n\tE_EMPTY: \t\t\t\"This field is required. Please, enter your family name\",\r\n\tE_FIRST_LETTER: \t\"Family name should start with captial letter\",\r\n\tE_INVALID_FORMAT: \t\"The family name doesn't follow the format. Please, use only letters and a hyphen\",\r\n\tE_TOO_LONG: \t\t\"Family name shouldn't exceed 50 characters\",\r\n\tE_LAST_SYMBOL: \t\t\"Family name should end in lowercase letter\",\r\n\tE_WRONG_ENDING: \t\"Minimum 2 letters after a hyphen\",\r\n})\r\n\r\nexport default validateableInputFactory({\r\n\tfieldName: \"lastname\",\r\n\tinputType: \"text\",\r\n\tvalidate,\r\n\terrorStrings,\r\n\tinProgressFilter: [statusCodes.E_EMPTY, statusCodes.E_LAST_SYMBOL, statusCodes.E_WRONG_ENDING]\r\n});","export default function validate(value, statusCodes = {}) {\r\n\r\n\t// Пустая строка\r\n\tif ( value.length === 0 )\r\n\t\treturn statusCodes.E_EMPTY;\r\n\r\n\t// Максимум - 50 символов \r\n\tif ( value.length > 50 )\r\n\t\treturn statusCodes.E_TOO_LONG;\r\n\t\r\n\t// Первый символ должен быть заглавной буквой\r\n\tconst firstLetterRegex = /^[A-ZА-ЯЁ]$/;\r\n\tlet isValid = firstLetterRegex.test(value.charAt(0));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_FIRST_LETTER;\r\n\t}\r\n\r\n\t// Последний символ должен быть буквой\r\n\tconst lastLetterRegex = /^[a-zа-яё]$/;\r\n\tisValid = lastLetterRegex.test(value.charAt(value.length-1));\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_LAST_SYMBOL;\r\n\t}\r\n\r\n\t// Минимум две буквы после дефиса\r\n\tconst endingRegex = /-[a-zа-яё]$/;\r\n\tisValid = endingRegex.test(value);\r\n\tif ( isValid ) {\r\n\t\treturn statusCodes.E_WRONG_ENDING;\r\n\t}\t\t\r\n\t\r\n\t// Фамилия должна соответствовать формату\t\r\n\tconst nameRegex = /^[A-ZА-ЯЁ][-a-zа-яё]*$/;\r\n\tisValid = nameRegex.test(value);\r\n\tif ( ! isValid ) {\r\n\t\treturn statusCodes.E_INVALID_FORMAT;\r\n\t}\r\n\r\n\treturn true;\r\n}","import { connect } from 'react-redux';\r\nimport { PROPER_VALUE } from '../ValidateableInput/ValidateableInput.factory';\r\nimport Component from 'components/SubmitButton';\r\n\r\nconst areAllFieldsValid = (fields) => fields.every(field => field.validityStatus === PROPER_VALUE);\r\n\r\nconst areAllApprovableFieldsApproved = (fields) => fields.every(field => field.isApproved !== false );\r\n\r\nconst isFormFilledInCorrectly = (state) => {\r\n\tconst formData = state.signup.data;\r\n\tconst indicators = [\r\n\t\tareAllFieldsValid(Object.values(formData)),\r\n\t\tareAllApprovableFieldsApproved(Object.values(formData)),\r\n\t\tformData.password.value === formData.passwordConfirmation.value\r\n\t]\r\n\treturn indicators.every( item => item );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tdisabled: !isFormFilledInCorrectly(state) || state.signup.status.isPending,\r\n\tisPending: state.signup.status.isPending\r\n});\r\n\r\nexport default connect(mapStateToProps)(Component);","import React from 'react';\r\nimport './Demo.view.sass';\r\n\r\nconst View = ({\r\n\tonClick, caption\r\n}) => pug`\r\n\t#FormDemo\r\n\t\ta(onClick=onClick) #{caption}\r\n\t\t.arrow-wrapper\r\n\t\t\t.arrow\r\n\t\t\t\t.pointer\r\n`;\r\n\r\nexport default View;","import { defineMessages } from 'react-intl';\r\nimport cookie from 'js-cookie';\r\n\r\nconst messages = defineMessages({\r\n\tserverConnectionError: \"Couldn't connect to server: \\\"{errorMsg}\\\". Please, try again later. If you can't submit the form, please contact us. We bring our apologies for the inconvenience.\"\r\n});\r\n\r\nexport function sleeper(ms) {\r\n\treturn new Promise(resolve => setTimeout(() => resolve(), ms));\r\n}\r\n\r\nexport function ajaxErrorParser(error, intl) {\r\n\tlet err;\r\n\tif ( error.response ) {\r\n\t\t// The request was made and the server responded with a status code\r\n\t\t// that falls out of the range of 2xx \r\n\t\terr = `${error.response.data.details}. ${error.response.status} ${error.response.statusText}`;\r\n\t}\r\n\telse if ( error.request ) {\r\n\t\t// The request was made but no response was received\r\n\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n\t\t// http.ClientRequest in node.js\r\n\t\t//err = `Не удалось связаться с сервером: \"${error.message}\". Пожалуйста, повторите попытку позже. Если вам не удалось отправить форму, пожалуйста, свяжитесь с нами. Приносим извинения за доставленные неудобства.`;\r\n\t\tconsole.log(error.message);\r\n\t\terr = intl.formatMessage(messages.serverConnectionError, { errorMsg: error.message });\r\n\t}\r\n\telse {\r\n\t\t// Something happened in setting up the request that triggered an Error\r\n\t\terr = error.message;\r\n\t}\r\n\treturn err;\r\n}\r\n\r\nexport function fetchStoredMessages(localeId) {\r\n\t// First, check if there's a 'locale' value in the local storage\r\n\tconst serializedLocale = localStorage.getItem('locale');\r\n\tif ( ! serializedLocale ) return null;\r\n\t\r\n\t// If it's there, check if the data is for the requested locale \r\n\tconst { locale: storedLocaleId, messages } = JSON.parse(serializedLocale);\r\n\tif ( storedLocaleId !== localeId ) return null;\r\n\r\n\treturn messages;\r\n}\r\n\r\nexport function hydrate(initialState = {}) {\r\n\t// Check if the localized messages are already in the storage\r\n\tconst locale = cookie.get('locale') || 'en';\r\n\tconst messages = fetchStoredMessages(locale);\r\n\r\n\t// Set the cookie for subsequent responses to server\r\n\tcookie.set('locale', locale);\r\n\r\n\tinitialState.i18n = {\r\n\t\t...initialState.i18n,\r\n\t\tlocale,\r\n\t\tmessages\r\n\t}\r\n\r\n\treturn initialState;\r\n}\r\n\r\n\r\n/*\r\n\r\n// Scrolls the viewport to put focused element in the middle\r\n// Probably, not the best idea to intervene in user scrolling contols\r\n// so I commented it out\r\n\r\nexport async function scrollIntoElement(e) {\r\n\tconst element = e.target;\r\n\tconst rect = element.getBoundingClientRect();\r\n\tconst viewportHeight = document.documentElement.clientHeight;\r\n\r\n\t// Required offset from the top for the element to be in the center\r\n\tconst offsetY = (viewportHeight - rect.height) / 2;\r\n\t\r\n\t// Difference between needed offset and actual relative position from the top\r\n\tconst deltaY = Math.floor(rect.top - offsetY);\r\n\r\n\tconst transitionTime = 500;\r\n\tconst stepDelay = 5;\r\n\tconst stepsTotal = transitionTime / stepDelay;\r\n\tconst stepSize = Math.ceil(deltaY / stepsTotal);\r\n\r\n\t// console.log(`Total: ${stepsTotal}. Size: ${stepSize}. Initial top: ${rect.top}. Target: ${offsetY}. Initial delta: ${deltaY}`);\r\n\r\n\tsetTimeout( function step(stepsLeft) {\r\n\t\tif ( stepsLeft === 0 ) return;\r\n\t\twindow.scrollBy(0, stepSize);\r\n\t\tsetTimeout(step, stepDelay, --stepsLeft);\r\n\r\n\t\t// const progress = Math.floor(element.getBoundingClientRect().top);\r\n\t\t// const target = Math.floor(offsetY);\r\n\t\t// const delta = Math.floor(element.getBoundingClientRect().top - offsetY);\r\n\t\t// console.log(`Top: ${progress}. Delta: ${delta} (${stepsLeft})`);\r\n\r\n\t}, 0, stepsTotal);\r\n}\r\n*/","import { sleeper } from 'utils'; \r\n\r\nexport async function simulateFormFillIn(sequences, delay) {\r\n\tfor ( let elementId in sequences ) {\r\n\t\tawait runSequence(elementId, sequences[elementId], delay);\r\n\t\tawait sleeper(delay * pauseDelayMultiplier);\r\n\t}\r\n}\r\n\r\n// --- Internals ---\r\n\r\n\r\nconst inputEvent = new Event('input', {bubbles: true});\r\nconst blurEvent = new Event('blur', {bubbles: true});\r\nconst focusEvent = new Event('focus', {bubbles: false});\r\nconst fieldBlurDelayMultiplier = 2;\r\nconst pauseDelayMultiplier = 10;\r\n\r\n\r\n\r\nfunction putTextInTextarea(element, value) {\r\n\telement.value = value;\r\n\t// element.innerHTML = value;\r\n\t// setNativeValue(element, value);\r\n\t// const changeEvent = new Event('change', {bubbles: true});\r\n\t// const keypressEvent = new Event('keypress', {bubbles: true});\r\n\t// element.dispatchEvent(inputEvent);\r\n\t// element.dispatchEvent(changeEvent);\r\n\t// element.dispatchEvent(keypressEvent);\r\n}\r\n\r\nasync function simulateTypingTextarea(element, sequence, delay) {\r\n\treturn simulateTyping(putTextInTextarea, element, sequence, delay);\r\n} \r\n\r\nasync function simulateTypingInputElements(element, sequence, delay) {\r\n\treturn simulateTyping(setNativeValue, element, sequence, delay);\r\n}\r\n\r\nasync function simulateTyping(strategy, element, sequence, delay) {\r\n\tfor ( let i = 0; i < sequence.length; i++ ) {\r\n\t\tstrategy(element, sequence.slice(0, i+1));\r\n\t\telement.dispatchEvent(inputEvent);\r\n\t\tawait sleeper(delay);\r\n\t}\r\n}\r\n\r\nfunction clickElement(element) {\r\n\telement.click();\r\n}\r\n\r\nfunction putTextAtOnce(element, value) {\r\n\tsetNativeValue(element, value);\r\n\telement.dispatchEvent(inputEvent);\r\n}\r\n\r\nasync function runSequence(elementId, sequence, delay) {\r\n\tconst element = document.getElementById(elementId);\r\n\r\n\tlet strategy = null;\r\n\tswitch ( sequence.type ) {\r\n\t\tcase \"click\":\r\n\t\t\tstrategy = clickElement;\r\n\t\t\tsequence = null;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"instant\":\r\n\t\t\tstrategy = putTextAtOnce;\r\n\t\t\tsequence = sequence.value;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"textarea\":\r\n\t\t\tstrategy = simulateTypingTextarea;\r\n\t\t\tsequence = sequence.value;\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tstrategy = simulateTypingInputElements;\r\n\t}\r\n\r\n\telement.dispatchEvent(focusEvent);\r\n\telement.focus();\r\n\tawait sleeper(1000);\r\n\tawait strategy(element, sequence, delay);\r\n\tawait sleeper(delay * fieldBlurDelayMultiplier);\r\n\telement.dispatchEvent(blurEvent);\r\n}\r\n\r\nfunction setNativeValue(element, value) {\r\n\tconst valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\r\n\tconst prototype = Object.getPrototypeOf(element);\r\n\tconst prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, 'value').set;\r\n\r\n\tif ( valueSetter && valueSetter !== prototypeValueSetter ) {\r\n\t\tprototypeValueSetter.call(element, value);\r\n\t} else {\r\n\t\tvalueSetter.call(element, value);\r\n\t}\r\n}\r\n\r\n","import React from 'react';\r\nimport View from './Demo.view';\r\nimport { simulateFormFillIn } from './Demo.utils';\r\n// import { scrollIntoElement } from 'utils';\r\n\r\nconst Container = ({\r\n\tcaption\r\n}) => {\r\n\tconst onDemo = async () => {\r\n\t\tconst formData = {\r\n\t\t\t\"firstname\": \"Linus\",\r\n\t\t\t\"lastname\": \"Torvalds\",\r\n\t\t\t\"username\": \"linus-torvalds\",\r\n\t\t\t\"password\": \"linus-torvalds\",\r\n\t\t\t\"passwordConfirmation\": \"linus-torvalds\",\r\n\t\t\t\"email\": \"torvalds@linux.org\",\r\n\t\t\t\"newsletters\": {\r\n\t\t\t\ttype: \"click\"\r\n\t\t\t},\r\n\t\t\t\"phone\": \"+1 702-355-88-92\",\r\n\t\t\t\"birthdate\": {\r\n\t\t\t\ttype: \"instant\",\r\n\t\t\t\tvalue: \"1969-12-28\"\r\n\t\t\t},\r\n\t\t\t\"biography\": {\r\n\t\t\t\ttype: \"textarea\",\r\n\t\t\t\tvalue: \"That's interesting, how did you manage to make it do that?\"\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst delay = 100;\r\n\r\n\t\tawait simulateFormFillIn(formData, delay);\r\n\r\n\t\t// const submitButton = document.getElementById(\"SubmitButton\");\r\n\t\t// submitButton.addEventListener('focus', scrollIntoElement);\r\n\t\t// const focusEvent = new Event('focus');\r\n\t\t// submitButton.dispatchEvent(focusEvent);\r\n\t}\r\n\r\n\treturn pug`\r\n\t\tView(\r\n\t\t\tonClick=onDemo\r\n\t\t\tcaption=caption\r\n\t\t)\r\n\t`;\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FadeIn from 'react-fade-in';\r\nimport { Container, Row, Col, Card, CardTitle, CardText, Form, FormText, Alert } from 'reactstrap';\r\nimport './SignupForm.view.sass';\r\n\r\n// Form inputs\r\nimport Username from './Username';\r\nimport Password from './Password';\r\nimport PasswordConfirmation from './PasswordConfirmation';\r\nimport Email from './Email';\r\nimport Phone from './Phone';\r\nimport Birthdate from './Birthdate';\r\nimport Newsletters from './Newsletters';\r\nimport Biography from './Biography';\r\nimport PersonalInformationProcessing from './PersonalInformationProcessing';\r\nimport Photo from './Photo';\r\nimport Firstname from './Firstname';\r\nimport Lastname from './Lastname';\r\n\r\n// Other controls\r\nimport SubmitButton from './SubmitButton';\r\nimport ErrorDisplay from '../ErrorDisplay';\r\nimport Demo from './Demo';\r\n\r\nimport { defineMessages } from 'react-intl';\r\n\r\nconst messages = defineMessages({\r\n\tsignupFormTitle: \"Sign Up\",\r\n\tsignupFormHint: \"You need to provide some personal information. Please, fill in the form below\",\r\n\tfirstNameLabel: \"Given name\",\r\n\tlastNameLabel: \"Family name\",\r\n\tuserIdLabel: \"Username\",\r\n\tuserIdHint: \"User identifier. Has to be composed of lowercase latin letters and/or digits. Нyphen is allowed. Should start with a letter and end with a letter or a digit. Minimim - 5 symbols. For example, 'giant-66'\",\r\n\tpasswordLabel: \"Password\",\r\n\tpasswordHint: \"Only latin letters, digits and special characters (for example, :, ', >, <, =, +, ., &, %, $, #, @, !, *, ), (, -, ~, [, ], /, \\\\\\\\, \\\\{, \\\\}, _, ^). Minimum 8 characters. At least two character types should be used\",\r\n\tpasswordConfirmationLabel: \"Password confirmation\",\r\n\tpasswordConfirmationHint: \"Please, confirm the above entered password\",\r\n\temailLabel: \"Email\",\r\n\temailHint: \"We use the email for password restoration and critical notifications. No unnecessary newsletters\",\r\n\tnewslettersLabel: \"Newsletters\",\r\n\tnewslettersHint: \"Switch on if you want to keep up with us\",\r\n\tphoneLabel: \"Phone number\",\r\n\tphoneHint: \"Phone number in the following format: <country code> <number>, for example, +7 926-840-55-49. Minimum 5 characters\",\r\n\tbirthdateLabel: \"Birthdate\",\r\n\tbirthdateHint: \"Please, choose the date from the popup calendar\",\r\n\tbiographyLabel: \"Short biography\",\r\n\tphotoLabel: \"Photo\",\r\n\tphotoHint: \"PNG and JPEG files only. Maximum size - 5 MB\",\r\n\tpersonalInformationProcessingLabel: \"I give my consent to process my personal data\",\r\n\tpersonalInformationProcessingHint: \"According to Russia's federal law from 27/07/2006 number 152-FZ 'On personal data'\",\r\n\tsubmitButtonCaption: \"Sign up\",\r\n\tsubmitButtonInProgressCaption: \"Sending\",\r\n\tsignupErrorTitle: \"Sign up error\",\r\n\talreadySignedUp: \"Already signed up?\",\r\n\tloginLinkCaption: \"Log in\",\r\n\tsignupSuccessTitle: \"Signed up successfully!\",\r\n\tsignupSuccessMessage: \"You're registered. Please, log in to your account\",\r\n\tbtnDemoCaption: \"Demo\",\r\n});\r\n\r\nconst View = ({\r\n\tintl: { formatMessage }, onSubmit, isPending, externalError, isRegistered, onPopulateValidClick, onPopulateInvalidClick, steps, onFocus\r\n}) => pug`\r\n\t#SignupForm\r\n\t\tFadeIn(delay=500)\r\n\t\t\tContainer\r\n\t\t\t\tRow\r\n\t\t\t\t\tCol.mx-auto\r\n\t\t\t\t\t\tif ! isRegistered\r\n\t\t\t\t\t\t\tDemo(caption=formatMessage(messages.btnDemoCaption))\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tCard(body)\r\n\t\t\t\t\t\t\t\tCardTitle.mb-1 #{formatMessage(messages.signupFormTitle)}\r\n\r\n\t\t\t\t\t\t\t\tCardText.d-block.text-muted.mt-0.mb-5 #{formatMessage(messages.signupFormHint)}\r\n\r\n\t\t\t\t\t\t\t\tForm(onSubmit=onSubmit)\r\n\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\tCol(md=6).mb-5.mb-md-0\r\n\t\t\t\t\t\t\t\t\t\t\tFirstname(label=formatMessage(messages.firstNameLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\tCol(md=6 onFocus=onFocus)\r\n\t\t\t\t\t\t\t\t\t\t\tLastname(label=formatMessage(messages.lastNameLabel))\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[0])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tUsername(label=formatMessage(messages.userIdLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.userIdHint)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPassword(label=formatMessage(messages.passwordLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.passwordHint)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[1])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPasswordConfirmation(label=formatMessage(messages.passwordConfirmationLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.passwordConfirmationHint)}\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[2])\r\n\t\t\t\t\t\t\t\t\t\tRow#field-email\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tEmail(label=formatMessage(messages.emailLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.emailHint)}\r\n\r\n\t\t\t\t\t\t\t\t\t\tRow#field-newsletters\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tNewsletters(label=formatMessage(messages.newslettersLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.newslettersHint)} \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[3])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPhone(label=formatMessage(messages.phoneLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.phoneHint)}\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[4])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tBirthdate(label=formatMessage(messages.birthdateLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.birthdateHint)}\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[5])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol\r\n\t\t\t\t\t\t\t\t\t\t\t\tBiography(label=formatMessage(messages.biographyLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps[6])\r\n\t\t\t\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPhoto(label=formatMessage(messages.photoLabel))\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.photoHint)} \r\n\r\n\t\t\t\t\t\t\t\t\t\tRow#field-personal-information-processing\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\tPersonalInformationProcessing(label=formatMessage(messages.personalInformationProcessingLabel))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tCol(md=6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.hint #{formatMessage(messages.personalInformationProcessingHint)}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t#SubmitButton\r\n\t\t\t\t\t\t\t\t\t\t\tSubmitButton.d-block.w-100(\r\n\t\t\t\t\t\t\t\t\t\t\t\tisPending=true\r\n\t\t\t\t\t\t\t\t\t\t\t\tcaption=formatMessage(messages.submitButtonCaption)\r\n\t\t\t\t\t\t\t\t\t\t\t\tinProgressCaption=formatMessage(messages.submitButtonInProgressCaption)\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\t\t.step(className=steps.showProceedButton)\r\n\t\t\t\t\t\t\t\t\t\t.proceedBtn &darr;\r\n\r\n\t\t\t\t\t\t\t\t\tif externalError\r\n\t\t\t\t\t\t\t\t\t\tErrorDisplay(title=formatMessage(messages.signupErrorTitle) errorMsg=externalError)\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tFormText.mt-3.float-right #{formatMessage(messages.alreadySignedUp)}\r\n\t\t\t\t\t\t\t\t\t\t| \r\n\t\t\t\t\t\t\t\t\t\tLink(to=\"/login/\") #{formatMessage(messages.loginLinkCaption)}\r\n\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tRow\r\n\t\t\t\t\t\t\t\tCol(md=8 lg=6 xl=5).mx-auto\r\n\t\t\t\t\t\t\t\t\tAlert.p-5(color=\"primary\")\r\n\t\t\t\t\t\t\t\t\t\th4.alert-heading #{formatMessage(messages.signupSuccessTitle)}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tp #{formatMessage(messages.signupSuccessMessage)}\r\n\r\n\t\t\t\t\t\t\t\t\t\tLink.btn.btn-lg.btn-primary.w-100(to=\"/\") #{formatMessage(messages.loginLinkCaption)}\t\t\t\t\t\t\r\n`;\r\n\r\nexport default View;","import View from './SignupForm.view';\r\nimport { intlShape, injectIntl } from 'react-intl';\r\n\r\nView.propTypes = {\r\n\tintl: intlShape.isRequired\r\n}\r\n\r\nexport default injectIntl(View);\r\n\r\n","import { connect } from 'react-redux';\r\nimport Form from './SignupForm.container';\r\nimport { onSubmit } from './SignupForm.actions';\r\n\r\nfunction setVisibilityFilter(signupState) {\r\n\tlet filter = [];\r\n\tfor ( let i = 0; i < signupState.status.step; i++ ) {\r\n\t\tfilter.push('revealed');\r\n\t}\r\n\tconst currentKeyField = signupState.data[signupState.status.currentAwaitingKeyField];\r\n\tconst fieldValueIsProper = currentKeyField.validityStatus === \"PROPER_VALUE\";\r\n\tconst fieldIsNotPending = ! currentKeyField.isPending === true;\r\n\tconst fieldIsBeingEdited = ! currentKeyField.isTypingFinished;\r\n\r\n\tfilter.showProceedButton = fieldValueIsProper && fieldIsNotPending && fieldIsBeingEdited ? 'revealed' : '';\r\n\r\n\treturn filter;\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisPending: state.signup.status.isPending,\r\n\tisRegistered: state.signup.status.isRegistered,\r\n\texternalError: state.signup.status.externalError,\r\n\tsteps: setVisibilityFilter(state.signup)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tonSubmit: (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tdispatch(onSubmit());\r\n\t},\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import React from 'react';\r\nimport { Spinner } from 'reactstrap';\r\nimport './FullscreenSpinner.view.sass';\r\n\r\nconst View = ({\r\n\tcaption\r\n}) => pug`\r\n\t#FullscreenSpinner\r\n\t\tSpinner(size=\"lg\" color=\"primary\" type=\"grow\")\r\n\t\t.caption.w-100.text-center.text-primary #{caption}\r\n`;\r\n\r\nexport default View;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './LogoutButton.view.sass';\r\n\r\nconst View = ({\r\n\tonLogout, caption\r\n}) => pug`\r\n\t#LogoutButton\r\n\t\tButton(onClick=onLogout) #{caption}\r\n`;\r\n\r\nexport default View;","import { connect } from 'react-redux';\r\nimport View from './LogoutButton.view';\r\nimport { onLogout } from '../../Auth/Auth.actions';\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tonLogout: () => dispatch(onLogout())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(View);","import React from 'react';\r\nimport { Container, Row, Col, Card, CardTitle, CardText, CustomInput } from 'reactstrap';\r\nimport FadeIn from 'react-fade-in';\r\nimport FullscreenSpinner from 'components/FullscreenSpinner';\r\nimport LogoutButton from './LogoutButton';\r\nimport ErrorDisplay from '../ErrorDisplay';\r\nimport './Dashboard.view.sass';\r\nimport { injectIntl, defineMessages } from 'react-intl';\r\n\r\nconst messages = defineMessages({\r\n\tdataLoadingSpinnerMsg: \"Loading data...\",\r\n\tdataLoadingErrorTitle: \"Error loading profile data\",\r\n\tlogoutButtonCaption: \"Log out\",\r\n\tnewslettersStatusIndicatorLabel: \"Newsletters\",\r\n\tbiographyBlockTitle: \"Short biography\",\r\n\tbirthdate: \"{birthdate, date, medium} ({age, plural, offset: 1 =0 {infant} other {{age, number} years old}})\"\r\n});\r\n\r\nconst View = ({\r\n\tintl: { formatMessage }, data, isPending, externalError\r\n}) => pug`\r\n\t#Dashboard\r\n\t\tif isPending\r\n\t\t\tFullscreenSpinner(caption=formatMessage(messages.dataLoadingSpinnerMsg))\r\n\r\n\t\telse if externalError\r\n\t\t\tContainer\r\n\t\t\t\tRow\r\n\t\t\t\t\tCol(sm=8 xl=6).mx-auto\r\n\t\t\t\t\t\tErrorDisplay(title=formatMessage(messages.dataLoadingErrorTitle) errorMsg=externalError)\r\n\r\n\t\telse if data\r\n\t\t\tFadeIn(delay=500)\r\n\t\t\t\tContainer\r\n\t\t\t\t\tRow\r\n\t\t\t\t\t\tCol(md=6 lg=4)\r\n\t\t\t\t\t\t\t.photo.proportional.proportional-square\r\n\t\t\t\t\t\t\t\t.proportional-inner.rounded-circle\r\n\t\t\t\t\t\t\t\t\timg(src=data.photo)\r\n\r\n\t\t\t\t\t\t\tLogoutButton(caption=formatMessage(messages.logoutButtonCaption))\r\n\r\n\t\t\t\t\t\tCol(md=6 lg=4)\r\n\t\t\t\t\t\t\t.infoblock\r\n\t\t\t\t\t\t\t\tCard\r\n\t\t\t\t\t\t\t\t\tCardTitle #{data.firstname} #{data.lastname}\r\n\t\t\t\t\t\t\t\t\tCardText #{formatMessage(messages.birthdate, {birthdate: data.birthdate, age: data.age})}\r\n\r\n\t\t\t\t\t\t\t\tCard\r\n\t\t\t\t\t\t\t\t\tCardText #{data.phone}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tCard\r\n\t\t\t\t\t\t\t\t\tCardText #{data.email}\r\n\t\t\t\t\t\t\t\t\tdiv\r\n\t\t\t\t\t\t\t\t\t\tCustomInput(\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"switch\"\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultChecked=data.newsletters\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=formatMessage(messages.newslettersStatusIndicatorLabel))\r\n\r\n\t\t\t\t\t\tif data.biography\r\n\t\t\t\t\t\t\tCol(lg=4)\r\n\t\t\t\t\t\t\t\tCard.biography.infoblock\r\n\t\t\t\t\t\t\t\t\tCardTitle #{formatMessage(messages.biographyBlockTitle)}\r\n\t\t\t\t\t\t\t\t\tCardText #{data.biography}\r\n`;\r\n\r\nexport default injectIntl(View);","export function postProcessUserProfile(userProfileInfo) {\r\n\tuserProfileInfo.birthdate = new Date(userProfileInfo.birthdate);\r\n\tuserProfileInfo.age = calculateAge(userProfileInfo.birthdate);\r\n\treturn userProfileInfo;\r\n}\r\n\r\nfunction calculateAge(birthdate) {\r\n\tconst ageDiffMs = Date.now() - birthdate.getTime();\r\n\tconst ageDate = new Date(ageDiffMs);\r\n\treturn Math.abs(ageDate.getUTCFullYear() - 1970);\r\n}","import { connect } from 'react-redux';\r\nimport View from './Dashboard.view';\r\nimport { postProcessUserProfile } from './Dashboard.utils';\r\n\r\nconst mapStateToProps = (state) => {\r\n\tlet { data: userProfile, isPending, externalError } = state.userProfile;\r\n\tif ( userProfile ) {\r\n\t\tuserProfile = postProcessUserProfile(userProfile);\r\n\t}\r\n\treturn {\r\n\t\tdata: userProfile,\r\n\t\tisPending,\r\n\t\texternalError\r\n\t};\r\n}\r\n\r\nexport default connect(mapStateToProps)(View);","import { connect } from 'react-redux';\r\nimport Component from './Auth.container';\r\nimport { onAuthResponse } from './Auth.actions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\ttoken: state.auth.token\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tupdateReduxAuthState: (token) => {\r\n\t\tdispatch(onAuthResponse(token));\r\n\t}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","import { useEffect } from 'react';\r\n\r\nexport default ({\r\n\tisAuthenticated, token,\r\n\tupdateReduxAuthStatem\r\n}) => {\t\r\n\tuseEffect(() => {\r\n\t\tif ( isAuthenticated && token ) {\r\n\t\t\tlocalStorage.setItem('jwt', token);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlocalStorage.removeItem('jwt');\r\n\t\t}\r\n\t}, [isAuthenticated, token]);\r\n\r\n\treturn null;\r\n}","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './LocaleSwitcher.view.sass';\r\n\r\nconst View = ({\r\n\ttitle, switchTo, onClick\r\n}) => pug`\r\n\t#LocaleSwitcher\r\n\t\tButton(type=\"text\" value=switchTo, onClick=onClick) #{title}\r\n`;\r\n\r\nexport default View;","export const actionTypes = {\r\n\tSWITCH_LOCALE_REQUEST: \t\"SWITCH_LOCALE_REQUEST\",\r\n\tSWITCH_LOCALE_RESPONSE: \"SWITCH_LOCALE_RESPONSE\",\r\n\tSWITCH_LOCALE_FAILURE: \t\"SWITCH_LOCALE_FAILURE\"\r\n}\r\n\r\nexport const onSwitchLocaleRequest = (localeId) => ({\r\n\ttype: actionTypes.SWITCH_LOCALE_REQUEST,\r\n\tlocaleId\r\n});\r\n\r\nexport const onSwitchLocaleResponse = (data) => ({\r\n\ttype: actionTypes.SWITCH_LOCALE_RESPONSE,\r\n\tdata\r\n});\r\n\r\nexport const onSwitchLocaleFailure = (error) => ({\r\n\ttype: actionTypes.SWITCH_LOCALE_FAILURE,\r\n\terror\r\n});\r\n\r\nexport default {\r\n\tonSwitchLocaleRequest,\r\n\tonSwitchLocaleResponse,\r\n\tonSwitchLocaleFailure\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport View from \"./LocaleSwitcher.view\";\r\nimport { onSwitchLocaleRequest } from 'components/IntlProvider/IntlProvider.actions';\r\n\r\nconst mapStateToProps = state => {\r\n\tconst { locale } = state['i18n'];\r\n\treturn {\r\n\t\ttitle: locale === 'en' ? 'На русском' : 'Switch to English',\r\n\t\tswitchTo: locale === 'en' ? 'ru' : 'en'\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tonClick: (e) => dispatch(onSwitchLocaleRequest(e.target.value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(View);","import React from 'react';\nimport { defineMessages } from 'react-intl';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport LoginForm from \"components/LoginForm\";\nimport SignupForm from \"components/SignupForm\";\nimport Dashboard from \"components/Dashboard\";\nimport ErrorDisplay from 'components/ErrorDisplay';\nimport Auth from \"components/Auth\";\nimport LocaleSwitcher from \"components/LocaleSwitcher\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport FullscreenSpinner from 'components/FullscreenSpinner';\nimport './App.view.sass';\n\nconst messages = defineMessages({\n\tlocaleSwitchErrorTitle: \"Couldn't switch locale\"\n});\n\nconst AppView = ({\n\tintl,\n\tisAuthenticated,\n\tisLocaleSwitchPending,\n\tlocaleSwitchError,\n}) => pug`\n\tRouter\n\t\tAuth\n\n\t\tif isLocaleSwitchPending\n\t\t\tFullscreenSpinner\n\n\t\telse\n\t\t\t.localeSwitchWrapper\n\t\t\t\tContainer\n\t\t\t\t\tRow\n\t\t\t\t\t\tCol\n\t\t\t\t\t\t\tif localeSwitchError\n\t\t\t\t\t\t\t\tErrorDisplay(title=intl.formatMessage(messages.localeSwitchErrorTitle) errorMsg=localeSwitchError)\n\n\t\t\t\t\t\t\t.d-flex.justify-content-end\n\t\t\t\t\t\t\t\tLocaleSwitcher\n\n\t\t\tSwitch\n\t\t\t\tLoginRoute(exact=true path=\"/login/\" isAuthenticated=isAuthenticated)\n\n\t\t\t\tRoute(exact=true path=\"/signup/\" component=SignupForm)\n\t\t\t\t\n\t\t\t\tProtectedRoute(exact=true path=\"/dashboard/\" component=Dashboard isAuthenticated=isAuthenticated redirectTo=\"/\")\n\t\t\t\t\n\t\t\t\tDefaultRoute(isAuthenticated=isAuthenticated)\n`;\n\nexport default AppView;\n\nconst ProtectedRoute = ({\n\tcomponent: Component,\n\texact, path, isAuthenticated, redirectTo\n}) => {\n\tconst actualComponent = isAuthenticated\n\t\t? () => pug`Component()`\n\t\t: () => pug`Redirect(to=redirectTo)`;\n\treturn pug`\n\t\tRoute(exact=exact path=path render=actualComponent)\n\t`\n};\n\nconst DefaultRoute = ({isAuthenticated}) => {\n\tconst actualComponent = isAuthenticated\n\t\t? () => pug`Redirect(to=\"/dashboard\")`\n\t\t: () => pug`Redirect(to=\"/login\")`;\n\treturn pug`\n\t\tRoute(exact=true path=\"/\" render=actualComponent)\n\t`;\n}\n\nconst LoginRoute = ({\n\tisAuthenticated, exact, path\n}) => {\n\tconst actualComponent = isAuthenticated\n\t\t? () => pug`Redirect(to=\"/dashboard\")`\n\t\t: () => pug`LoginForm`;\n\treturn pug`\n\t\tRoute(exact=exact path=path render=actualComponent)\n\t`;\n}","import React, { useEffect } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport View from './App.view';\r\n\r\nconst Container = ({\r\n\tisAuthenticated,\r\n\tisLocaleSwitchPending,\r\n\tlocaleSwitchError,\r\n\tfetchUserProfile,\r\n\tintl,\r\n\tlogicMiddleware\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tif ( isAuthenticated ) {\r\n\t\t\tfetchUserProfile();\r\n\t\t}\r\n\t}, [isAuthenticated, fetchUserProfile]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tlogicMiddleware.addDeps({ intl });\r\n\t\t}\r\n\t\tcatch (e) {}\r\n\t}, [intl, logicMiddleware]);\r\n\t\r\n\treturn pug`\r\n\t\tView(\r\n\t\t\tisAuthenticated=isAuthenticated\r\n\t\t\tisLocaleSwitchPending=isLocaleSwitchPending\r\n\t\t\tlocaleSwitchError=localeSwitchError\r\n\t\t\tintl=intl\r\n\t\t)\r\n\t`;\r\n}\r\n\r\nexport default injectIntl(Container);","export const actionTypes = {\r\n\t'DATA_FETCH_REQUEST': 'DATA_FETCH_REQUEST',\r\n\t'DATA_FETCH_RESPONSE': 'DATA_FETCH_RESPONSE',\r\n\t'DATA_FETCH_FAILURE': 'DATA_FETCH_FAILURE',\r\n}\r\n\r\nexport const onDataFetchRequest = () => ({\r\n\ttype: actionTypes.DATA_FETCH_REQUEST,\r\n});\r\n\r\nexport const onDataFetchResponse = (data) => ({\r\n\ttype: actionTypes.DATA_FETCH_RESPONSE,\r\n\tdata\r\n});\r\n\r\nexport const onDataFetchFailure = (error) => ({\r\n\ttype: actionTypes.DATA_FETCH_FAILURE,\r\n\terror\r\n});","import { connect } from 'react-redux';\r\nimport Component from './App.container';\r\nimport { onDataFetchRequest } from './App.actions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n\tisLocaleSwitchPending: state.i18n.isPending,\r\n\tlocaleSwitchError: state.i18n.error,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tfetchUserProfile: () => {\r\n\t\tdispatch(onDataFetchRequest());\r\n\t}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createLogic } from 'redux-logic';\r\nimport { actionTypes, onAuthResponse, onAuthFailure } from './Auth.actions';\r\nimport axios from 'axios';\r\nimport { sleeper, ajaxErrorParser } from 'utils.js';\r\n\r\nconst authLogic = createLogic({\r\n\ttype: actionTypes.AUTH_REQUEST,\r\n\tprocessOptions: {\r\n\t\tsuccessType: \tonAuthResponse,\r\n\t\tfailType: \t\tonAuthFailure\r\n\t},\r\n\tasync process({ action, intl }) {\t\t\r\n\t\tawait sleeper(1000);\r\n\t\treturn axios({\r\n\t\t\t\turl: \"/api/auth\",\r\n\t\t\t\tparams: action.data\t\t\t\r\n\t\t\t})\r\n\t\t\t.then( (response) => response.data.data )\r\n\t\t\t.catch( (error) => Promise.reject(ajaxErrorParser(error, intl)));\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tauthLogic\r\n];","import { createLogic } from 'redux-logic';\r\nimport { actionTypes, onSwitchLocaleResponse, onSwitchLocaleFailure } from './IntlProvider.actions';\r\nimport { sleeper, ajaxErrorParser, fetchStoredMessages } from 'utils';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\n\r\n\r\n\r\nconst localeSwitchLogic = createLogic({\r\n\ttype: actionTypes.SWITCH_LOCALE_REQUEST,\r\n\tvalidate({ action }, allow, reject) {\r\n\t\t// For English we just alter the locale value in cookies;\r\n\t\t// default messages will be used and locale data is built-in \r\n\t\tif ( action.localeId === 'en' ) {\r\n\t\t\tcookie.set('locale', 'en');\r\n\t\t\tlocalStorage.removeItem('locale');\r\n\t\t\treturn reject(onSwitchLocaleResponse({ locale: 'en' }));\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Also, check if messages are already stored locally\r\n\t\t\tconst messages = fetchStoredMessages(action.localeId);\r\n\t\t\tif ( messages ) {\r\n\t\t\t\tcookie.set('locale', action.localeId);\r\n\t\t\t\treturn reject(onSwitchLocaleResponse({ locale: action.localeId, messages }));\r\n\t\t\t}\r\n\t\t}\r\n\t\tallow(action);\r\n\t},\r\n\tprocessOptions: {\r\n\t\tsuccessType: \tonSwitchLocaleResponse,\r\n\t\tfailType: \t\tonSwitchLocaleFailure\r\n\t},\r\n\tasync process({ action }) {\r\n\t\tawait sleeper(1000);\r\n\t\treturn axios({\r\n\t\t\t\turl: \"/api/get-locale\",\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tid: action.localeId\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then( async (response) => {\r\n\t\t\t\tconst data = response.data.data;\r\n\t\t\t\tconst serializedLocale = JSON.stringify(data);\r\n\t\t\t\tlocalStorage.setItem('locale', serializedLocale);\r\n\t\t\t\treturn Promise.resolve(data);\r\n\t\t\t})\r\n\t\t\t.catch( error => Promise.reject(ajaxErrorParser(error)) );\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tlocaleSwitchLogic,\r\n];","export const actionTypes = {\r\n\tREQUEST_APPROVAL: \t\t\t'REQUEST_APPROVAL',\r\n\tRESPONSE_APPROVAL: \t\t\t'RESPONSE_APPROVAL',\r\n\tRESPONSE_APPROVAL_ERROR: \t'RESPONSE_APPROVAL_ERROR'\r\n}\r\n\r\nexport function getActions(fieldName) {\r\n\tconst requestApproval = () => ({\r\n\t\ttype: actionTypes.REQUEST_APPROVAL,\r\n\t\tfieldName\r\n\t});\r\n\r\n\tconst responseApproval = response => ({\r\n\t\ttype: actionTypes.RESPONSE_APPROVAL,\r\n\t\tfieldName,\r\n\t\tresponse\r\n\t});\r\n\r\n\tconst responseApprovalError = errorMsg => ({\r\n\t\ttype: actionTypes.RESPONSE_APPROVAL_ERROR,\r\n\t\tfieldName,\r\n\t\texternalError: errorMsg\r\n\t});\r\n\r\n\treturn {\r\n\t\trequestApproval,\r\n\t\tresponseApproval,\r\n\t\tresponseApprovalError,\r\n\t}\r\n}","import { createLogic } from 'redux-logic';\r\nimport { PROPER_VALUE } from '../ValidateableInput/ValidateableInput.factory';\r\nimport { getActions } from './ApprovableInput.actions';\r\nimport { actionTypes as validateableInputActionTypes } from '../ValidateableInput/ValidateableInput.actions';\r\nimport axios from 'axios';\r\nimport { sleeper, ajaxErrorParser } from 'utils';\r\n\r\nconst fieldApprovalLogic = createLogic({\r\n\ttype: validateableInputActionTypes.FIELD_EDITED,\r\n\tvalidate({ getState, action, ctx }, allow, reject) {\r\n\t\t// only apply the logic for the following fields\r\n\t\tconst approvableFields = [\r\n\t\t\t'username',\r\n\t\t\t'email',\r\n\t\t\t'phone',\r\n\t\t];\r\n\t\tconst fieldName = action.fieldName;\r\n\t\tif ( ! approvableFields.some( field => field === fieldName ) ) {\r\n\t\t\treturn reject(action);\r\n\t\t}\r\n\t\tconst state = getState();\r\n\t\t// Так как Redux изначально не имеет представления о составе полей,\r\n\t\t// он не может инициализирвоать поле [fieldName] в хранилище\r\n\t\t// (состав полей определяется во время выполнения),\r\n\t\t// мы должны \"подложить\" {} на случай, если поле будет проверяться\r\n\t\t// после расфокусировки соотвествующего input'a с пустым значением,\r\n\t\t// когда хранилище ещё ничего о нём не знает \r\n\t\tconst { validityStatus, value } = state.signup.data[fieldName];\r\n\t\t// если поле правильно заполнено\r\n\t\tif ( validityStatus === PROPER_VALUE ) {\r\n\t\t\t// имя поля \"зашито\" в action creator'ах\r\n\t\t\t// поэтому мы получаем их здесь и передаём в process через контекст ctx\r\n\t\t\tconst { requestApproval, responseApproval, responseApprovalError } = getActions(fieldName);\r\n\t\t\tObject.assign(ctx, { requestApproval, responseApproval, responseApprovalError, fieldName, value });\r\n\t\t\t// разрешаем обработку в process и передаём action далее по конвейеру\r\n\t\t\tallow(action);\r\n\t\t}\r\n\t\telse reject(action); // мимо process, в следующее middleware\r\n\t},\r\n\tprocess({ ctx, intl }, dispatch, done) {\r\n\t\tdispatch(ctx.requestApproval());\r\n\t\tconst config = {\r\n\t\t\turl: \"/api/check-uniqueness\",\r\n\t\t\tparams: {\r\n\t\t\t\tname: ctx.fieldName,\r\n\t\t\t\tvalue: ctx.value\r\n\t\t\t}\r\n\t\t};\r\n\t\tsleeper(1000)\r\n\t\t\t.then( () => axios(config) )\r\n\t\t\t.then(response => dispatch(ctx.responseApproval(response.data)))\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconst err = ajaxErrorParser(error, intl); \r\n\t\t\t\tdispatch(ctx.responseApprovalError(err));\r\n\t\t\t})\r\n\t\t\t.then(() => done());\r\n\t}\r\n});\r\n\r\nexport default fieldApprovalLogic;","import { createLogic } from 'redux-logic';\r\nimport { PROPER_VALUE } from '../ValidateableInput/ValidateableInput.factory';\r\nimport { statusCodes } from './PasswordConfirmation.container';\r\nimport { passwordsCheckedAction, passwordValidityError } from './PasswordConfirmation.actions';\r\nimport { actionTypes as validateableInputActionTypes, getActions } from '../ValidateableInput/ValidateableInput.actions';\r\n\r\nconst comparePasswordsOnFinishedEditing = createLogic({\r\n\ttype: validateableInputActionTypes.FIELD_EDITED,\r\n\tvalidate({ getState, action }, allow, reject) {\r\n\t\tif ( action.fieldName === 'passwordConfirmation' ) {\r\n\t\t\t// оставляем в покое пустое поле\r\n\t\t\tconst { value } = getState().signup.data['passwordConfirmation'] || {};\r\n\t\t\tif ( value && value.length ) {\r\n\t\t\t\tallow(action);\r\n\t\t\t}\r\n\t\t}\r\n\t\treject(action);\r\n\t},\r\n\t// processOptions: {\r\n\t// \tsuccessType: \tpasswordsCheckedAction,\r\n\t// \tfailType: \t\tpasswordValidityError\r\n\t// },\r\n\tprocess({ getState, action }) {\r\n\t\tconst state = getState();\r\n\t\t// Так как Redux изначально не имеет представления о составе полей,\r\n\t\t// он не может инициализирвоать поле [fieldName] в хранилище\r\n\t\t// (состав полей определяется во время выполнения),\r\n\t\t// мы должны \"подложить\" {} на случай, если поле будет проверяться\r\n\t\t// после расфокусировки соотвествующего input'a с пустым значением,\r\n\t\t// когда хранилище ещё ничего о нём не знает \r\n\t\tconst { validityStatus: passwordValidityStatus, value: passwordValue } = state.signup.data['password'] || {};\r\n\t\tconst { validityStatus: passwordConfirmationValidityStatus, value: passwordConfirmationValue } = state.signup.data['passwordConfirmation'] || {};\r\n\t\t// если поле пароля правильно заполнено\r\n\t\tif \t(\r\n\t\t\t\tpasswordValidityStatus === PROPER_VALUE \r\n\t\t\t\t&&\r\n\t\t\t\tpasswordConfirmationValidityStatus === PROPER_VALUE\r\n\t\t\t) {\r\n\t\t\tconst areEqual = passwordValue === passwordConfirmationValue;\r\n\t\t\treturn passwordsCheckedAction(areEqual);\r\n\t\t}\r\n\t\telse return passwordValidityError();\r\n\t}\r\n});\r\n\r\nconst clearFieldOnPasswordChange = createLogic({\r\n\ttype: validateableInputActionTypes.VALUE_CHANGED,\r\n\tvalidate({ getState, action }, allow, reject) {\r\n\t\taction.fieldName === 'password'\r\n\t\t\t? allow(action)\r\n\t\t\t: reject(action);\r\n\t},\r\n\tprocess({ getState, action }, dispatch, done) {\r\n\t\tconst { onChange } = getActions('passwordConfirmation');\r\n\t\tdispatch(onChange('', statusCodes.E_EMPTY));\r\n\t\tdone();\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tcomparePasswordsOnFinishedEditing,\r\n\tclearFieldOnPasswordChange\r\n];","export const PASSWORDS_CHECKED \t\t= 'PASSWORDS_CHECKED';\r\nexport const E_PASSWORD_NOT_VALID \t= 'E_PASSWORD_NOT_VALID';\r\n\r\nconst passwordsCheckedAction = areEqual => ({\r\n\ttype: PASSWORDS_CHECKED,\r\n\tareEqual\r\n});\r\n\r\nconst passwordValidityError = () => ({\r\n\ttype: E_PASSWORD_NOT_VALID\r\n});\r\n\r\nexport {\r\n\tpasswordsCheckedAction,\r\n\tpasswordValidityError\r\n}","import { sha256 } from 'js-sha256';\r\n\r\nexport function exractFormData(originalFormData) {\r\n\tconst fields = [\r\n\t\t'username',\r\n\t\t'email',\r\n\t\t'phone',\r\n\t\t'newsletters',\r\n\t\t'birthdate',\r\n\t\t'biography',\r\n\t\t'firstname',\r\n\t\t'lastname'\r\n\t];\r\n\tlet refinedFormData = new FormData();\r\n\tfields.every( item => {\r\n\t\trefinedFormData.set(item, originalFormData[item].value);\r\n\t\treturn true;\r\n\t});\r\n\trefinedFormData.set('password', sha256(originalFormData['password'].value));\r\n\tconst photo = originalFormData['photo'].value;\r\n\tif ( photo ) {\r\n\t\trefinedFormData.append('photo', photo);\r\n\t}\r\n\r\n\treturn refinedFormData;\r\n}","import fieldApprovalLogic from './ApprovableInput/ApprovableInput.logic';\r\nimport passwordConfirmationLogic from './PasswordConfirmation/PasswordConfirmation.logic';\r\n\r\nimport { createLogic } from 'redux-logic';\r\nimport { actionTypes, onSubmitResponse, onSubmitFailure } from './SignupForm.actions';\r\nimport axios from 'axios';\r\nimport { exractFormData } from './SignupForm.utils';\r\nimport { sleeper, ajaxErrorParser } from 'utils';\r\n\r\nconst formSubmissionLogic = createLogic({\r\n\ttype: actionTypes.FORM_SUBMIT,\r\n\tprocessOptions: {\r\n\t\tsuccessType: \tonSubmitResponse,\r\n\t\tfailType: \t\tonSubmitFailure\r\n\t},\r\n\tasync process({ getState, intl }) {\r\n\t\tconst data = exractFormData(getState().signup.data);\r\n\t\tawait sleeper(1000);\r\n\t\treturn axios({\r\n\t\t\t\tmethod: \"post\",\r\n\t\t\t\turl: \"/api/put-user-profile\",\r\n\t\t\t\tdata,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\r\n\t\t\t\t},\r\n\t\t\t\ttimeout: 30000\r\n\t\t\t})\r\n\t\t\t.catch( error => Promise.reject(ajaxErrorParser(error, intl)) );\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tformSubmissionLogic,\r\n\tfieldApprovalLogic,\r\n\t...passwordConfirmationLogic\r\n];","import { createLogic } from 'redux-logic';\r\nimport { actionTypes, onDataFetchResponse, onDataFetchFailure } from './App.actions';\r\nimport { sleeper, ajaxErrorParser } from 'utils';\r\nimport { defineMessages } from 'react-intl';\r\nimport axios from 'axios';\r\n\r\nconst messages = defineMessages({\r\n\tnotAuthorizedException: \"Not authorized. Probably due to an application error. Try logging in again\"\r\n});\r\n\r\nconst dataFetchLogic = createLogic({\r\n\ttype: actionTypes.DATA_FETCH_REQUEST,\r\n\tprocessOptions: {\r\n\t\tsuccessType: \tonDataFetchResponse,\r\n\t\tfailType: \t\tonDataFetchFailure\r\n\t},\r\n\tasync process({ action, getState, intl }) {\r\n\t\tconst { token } = getState().auth;\r\n\t\tif ( ! token ) {\r\n\t\t\treturn Promise.reject(intl.formatMessage(messages.notAuthorizedException));\r\n\t\t}\r\n\t\tawait sleeper(3000);\r\n\t\treturn axios({\r\n\t\t\t\turl: \"/api/get-user-profile\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `Bearer ${token}`\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then( response => response.data.data )\r\n\t\t\t.catch( error => Promise.reject(ajaxErrorParser(error)) );\r\n\t}\r\n});\r\n\r\nexport default [\r\n\tdataFetchLogic,\r\n];","import authLogic from 'components/Auth/Auth.logic';\r\nimport switchLocaleLogic from 'components/IntlProvider/IntlProvider.logic';\r\nimport signupFormLogic from 'components/SignupForm/SignupForm.logic';\r\nimport dataFetchLogic from 'components/App/App.logic';\r\n\r\nexport default [\r\n\t...authLogic,\r\n\t...switchLocaleLogic,\r\n\t...signupFormLogic,\r\n\t...dataFetchLogic,\r\n];","import { createLogicMiddleware } from 'redux-logic';\r\nimport logic from './rootLogic';\r\n\r\nconst deps = {};\r\nconst logicMiddleware = createLogicMiddleware(logic, deps);\r\nlogicMiddleware.monitor$.subscribe(\r\n\tx => console.log(x)\r\n);\r\n\r\n\r\nexport default logicMiddleware;","import { actionTypes } from './IntlProvider.actions'; \r\n\r\nconst initialState = {\r\n\tlocale: 'en',\r\n\tmessages: null,\r\n\tisPending: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.SWITCH_LOCALE_REQUEST:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: true\r\n\t\t\t}\r\n\t\tcase actionTypes.SWITCH_LOCALE_RESPONSE:\r\n\t\t\treturn {\r\n\t\t\t\t...action.data,\r\n\t\t\t\tisPending: false\r\n\t\t\t}\r\n\t\tcase actionTypes.SWITCH_LOCALE_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\terror: action.error\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { actionTypes } from './Auth.actions';\r\n\r\nconst auth = (state = {\r\n\tisAuthenticated: !!localStorage.getItem('jwt'),\r\n\ttoken: localStorage.getItem('jwt')\r\n}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.AUTH_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: true\r\n\t\t\t}\r\n\t\tcase actionTypes.AUTH_RESPONSE:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase actionTypes.AUTH_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisAuthenticated: undefined,\r\n\t\t\t\texternalError: action.error,\r\n\t\t\t\ttoken: undefined\r\n\t\t\t}\r\n\t\tcase actionTypes.AUTH_LOGOUT:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisAuthenticated: false\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth;","import { actionTypes } from './LoginForm.actions';\r\n\r\nconst authErrorCleaner = (state, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.SIGNUP_LINK_CLICK:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texternalError: ''\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default authErrorCleaner;","import { actionTypes } from './ApprovableInput.actions';\r\n\r\n\r\nconst fieldData = (state = {}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.REQUEST_APPROVAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: true\r\n\t\t\t}\r\n\t\tcase actionTypes.RESPONSE_APPROVAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisApproved: action.response.status === 'APPROVED'\r\n\t\t\t}\r\n\t\tcase actionTypes.RESPONSE_APPROVAL_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisApproved: undefined,\r\n\t\t\t\texternalError: action.externalError\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\t\t\r\n\t}\r\n}\r\n\r\nconst data = (state = {}, action) => {\r\n\tif ( !action.fieldName ) return state;\r\n\treturn {\r\n\t\t...state,\r\n\t\t[action.fieldName]: fieldData(state[action.fieldName], action)\r\n\t}\t\r\n}\r\n\r\nexport default data;","import { actionTypes } from './ValidateableInput.actions';\r\n\r\nconst fieldData = (state = {}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.VALUE_CHANGED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisTypingFinished: false,\r\n\t\t\t\tvalue: action.value,\r\n\t\t\t\tvalidityStatus: action.validityStatus,\r\n\t\t\t\tisApproved: undefined,\r\n\t\t\t\texternalError: ''\r\n\t\t\t}\r\n\t\tcase actionTypes.FIELD_EDITED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisTypingFinished: true\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\t\t\r\n\t}\r\n}\r\n\r\nconst data = (state = {}, action) => {\r\n\tif ( !action.fieldName ) return state;\r\n\treturn {\r\n\t\t...state,\r\n\t\t[action.fieldName]: fieldData(state[action.fieldName], action)\r\n\t}\t\r\n}\r\n\r\nexport default data;","import reduceReducers from 'reduce-reducers';\r\nimport { combineReducers } from 'redux';\r\nimport formStateValid from 'formStateValid.json';\r\nimport formStateInvalid from 'formStateInvalid.json';\r\n\r\nimport approvable from './ApprovableInput/ApprovableInput.reducer';\r\nimport validateable from './ValidateableInput/ValidateableInput.reducer';\r\nimport passwordConfirmation from './PasswordConfirmation/PasswordConfirmation.reducer';\r\n\r\nimport { actionTypes } from './SignupForm.actions';\r\nimport { actionTypes as inputActionTypes } from './ValidateableInput/ValidateableInput.actions';\r\n\r\nimport initialState from 'initialState.json';\r\n\r\nconst status = (state = {}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.FORM_SUBMIT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: true,\r\n\t\t\t\texternalError: undefined\r\n\t\t\t}\r\n\t\tcase actionTypes.FORM_SUBMIT_RESPONSE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisRegistered: action.response.status === 'SUCCESS'\r\n\t\t\t}\r\n\t\tcase actionTypes.FORM_SUBMIT_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tisRegistered: undefined,\r\n\t\t\t\texternalError: action.externalError\r\n\t\t\t}\r\n\t\tcase inputActionTypes.FIELD_EDITED:\r\n\t\t\tconst keyFields = \"lastname password passwordConfirmation email phone birthdate biography\".split(\" \");\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texternalError: undefined,\r\n\r\n\t\t\t\tcurrentAwaitingKeyField: ((previousValue) => {\r\n\t\t\t\t\tlet fieldNameIndex = keyFields.indexOf(action.fieldName);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Skip if the field is not a key field\r\n\t\t\t\t\tif ( ! ~ fieldNameIndex )\r\n\t\t\t\t\t\treturn previousValue;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Also skip if it's not the farthest\r\n\t\t\t\t\tif ( fieldNameIndex < keyFields.indexOf(previousValue) )\r\n\t\t\t\t\t\treturn previousValue;\r\n\r\n\t\t\t\t\t// If last edited key field is the final, return it\r\n\t\t\t\t\tif ( fieldNameIndex >= keyFields.length - 1 )\r\n\t\t\t\t\t\treturn action.fieldName;\r\n\r\n\t\t\t\t\t// Next key field in the list\r\n\t\t\t\t\treturn keyFields[fieldNameIndex + 1];\r\n\r\n\t\t\t\t})(state.currentAwaitingKeyField),\r\n\r\n\t\t\t\t// To determine the current step we check action.fieldName against an array of key fields\r\n\t\t\t\t// Step counter can only be increased, not the other way\r\n\t\t\t\tstep: keyFields.reduce( (previousValue, fieldName, index) => {\r\n\t\t\t\t\t\tif ( previousValue > index ) return previousValue;\r\n\t\t\t\t\t\treturn fieldName === action.fieldName\r\n\t\t\t\t\t\t\t? index + 1\r\n\t\t\t\t\t\t\t: previousValue\r\n\t\t\t\t\t}, state.step),\r\n\r\n\t\t\t}\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state;\t\t\r\n\t}\r\n}\r\n\r\nconst signupReset = (state, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.FORM_RESET:\r\n\t\t\treturn initialState.signup;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst signup = reduceReducers(\r\n\tcombineReducers({\r\n\t\tstatus,\r\n\t\tdata: reduceReducers(\r\n\t\t\tapprovable,\r\n\t\t\tvalidateable,\r\n\t\t\tpasswordConfirmation\r\n\t\t)\r\n\t}),\r\n\tsignupReset\r\n);\r\n\r\n\r\nconst formPopulate = (state = {}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.FORM_POPULATE_VALID:\r\n\t\t\treturn { ...formStateValid };\r\n\r\n\t\tcase actionTypes.FORM_POPULATE_INVALID:\r\n\t\t\treturn { ...formStateInvalid };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default reduceReducers(signup, formPopulate); ","import { PASSWORDS_CHECKED, E_PASSWORD_NOT_VALID } from './PasswordConfirmation.actions';\r\nimport { statusCodes } from './PasswordConfirmation.container';\r\nimport { PROPER_VALUE } from '../ValidateableInput/ValidateableInput.factory';\r\n\r\nexport default (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PASSWORDS_CHECKED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpasswordConfirmation: {\r\n\t\t\t\t\t...state.passwordConfirmation,\r\n\t\t\t\t\tisValid: action.areEqual,\r\n\t\t\t\t\tvalidityStatus: action.areEqual ? PROPER_VALUE : statusCodes.E_PASSWORDS_MISMATCH\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tcase E_PASSWORD_NOT_VALID:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpasswordConfirmation: {\r\n\t\t\t\t\t...state.passwordConfirmation,\r\n\t\t\t\t\tisValid: undefined,\r\n\t\t\t\t\tvalidityStatus: statusCodes.E_PASSWORD_NOT_VALID\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import { actionTypes } from './App.actions';\r\n\r\nconst userProfile = (state = {\r\n\tisPending: false,\r\n\tdata: undefined\r\n}, action) => {\r\n\tswitch ( action.type ) {\r\n\t\tcase actionTypes.DATA_FETCH_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: true,\r\n\t\t\t\tdata: undefined\r\n\t\t\t}\r\n\t\tcase actionTypes.DATA_FETCH_RESPONSE:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\tdata: action.data\r\n\t\t\t}\r\n\t\tcase actionTypes.DATA_FETCH_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\tisPending: false,\r\n\t\t\t\texternalError: action.error,\r\n\t\t\t\tdata: undefined\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default userProfile;","import { combineReducers } from 'redux';\r\nimport reduceReducers from 'reduce-reducers';\r\n\r\nimport i18n from './components/IntlProvider/IntlProvider.reducers';\r\nimport auth from './components/Auth/Auth.reducers';\r\nimport authErrorCleaner from './components/LoginForm/LoginForm.reducers';\r\nimport signup from './components/SignupForm/SignupForm.reducers';\r\nimport userProfile from './components/App/App.reducers';\r\n\r\nexport default combineReducers({\r\n\ti18n,\r\n\tauth: reduceReducers(auth, authErrorCleaner),\r\n\tsignup,\r\n\tuserProfile,\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore(initialState, middleware) {\r\n\tmiddleware = applyMiddleware(middleware);\r\n\tmiddleware = composeEnhancers(middleware);\r\n\tconst store = createStore(rootReducer, initialState, middleware);\r\n\treturn store;\r\n}","import { IntlProvider } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport default connect(\r\n  // Connect React Intl with Redux to inject current locale data\r\n  ({ i18n }) => ({ ...i18n, key: i18n.locale })\r\n)(IntlProvider);","import 'sass/index.sass';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\nimport logicMiddleware from 'configureLogic';\nimport configureStore from 'configureStore';\nimport IntlProvider from 'components/IntlProvider';\nimport { addLocaleData } from 'react-intl';\nimport ru from 'react-intl/locale-data/ru';\nimport { hydrate } from 'utils';\nimport externalState from 'initialState.json';\n\n// Adding localization functions for different languages\naddLocaleData(ru);\n\n// Hydrate the app with the data stored locally\nconst initialState = hydrate(externalState);\n\n\nconst store = configureStore(initialState, logicMiddleware);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<IntlProvider>\n\t\t\t<App logicMiddleware={logicMiddleware} />\n\t\t</IntlProvider>\n\t</Provider>,\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}